libname a "/userdata21/rroom042/data_source/user_data/RawData/RAWa";/*RAWDATA_LIVER(BFC, DTH, T20, T30, T40, G1E, G2E, CQ)*/
libname b "/userdata21/rroom042/data_source/user_data/RawData/RAWb";/*DATA_LIVER(CLV, T60)_updated"*/
libname c "/userdata21/rroom042/data_source/user_data/03. Add/default";/*data storage"*/


/*명세서(T20) 합치기*/
*ID로 정렬;
%MACRO SORT(year);
*1~9월;
%MACRO SORT1(start, stop, incr);
%DO i = &start %TO &stop %BY &incr;
proc sort data= a.t20_&year.0&i out= c.t20_&year.0&i._sort; by INDI_DSCM_NO; run;
%END;
%MEND;
%SORT1(1, 9, 1)

*10~12월;
%MACRO SORT2(start, stop, incr);
%DO i = &start %TO &stop %BY &incr;
proc sort data= a.t20_&year.&i. out= c.t20_&year.&i._sort; by INDI_DSCM_NO; run;
%END;
%MEND;
%SORT2(10, 12, 1);

%MEND;
%MACRO DOLIST; %DO j= 2002 %TO 2017 %BY 1; %SORT(&j); %END; %MEND; %DOLIST;

*연도별 명세서 합치기;
%MACRO SET(year);
data c.t20_&year;
set c.t20_&year.01_sort c.t20_&year.02_sort c.t20_&year.03_sort c.t20_&year.04_sort c.t20_&year.05_sort c.t20_&year.06_sort
     c.t20_&year.07_sort c.t20_&year.08_sort c.t20_&year.09_sort c.t20_&year.10_sort c.t20_&year.11_sort c.t20_&year.12_sort;
by INDI_DSCM_NO;
run;
%MEND;
%MACRO DOLIST; %DO j= 2014 %TO 2017 %BY 1; %SET(&j); %END; %MEND; %DOLIST;
*--------------------------------------------------------------------------------------------------------;

/*2009년 간암검진대상자*/
proc sql;create table c.obj_2009 as select OBJ, HME_DT from b.clv_obj_rst_2009 order by OBJ; quit;
data c.obj_2009; set c.obj_2009; if first.OBJ; by OBJ; run;


*개인식별아이디 변수명 통일;
proc sql; create table c.obj_2009 as select OBJ as INDI_DSCM_NO, HME_DT from c.obj_2009; quit;


/*2009년 간암검진대상자 + 02-17년 명세서*/
%MACRO MERGE(year);
proc sql;
create table c.obj_2009_t20_&year as
select *
from c.obj_2009 as a  left join c.t20_&year as b
on a.INDI_DSCM_NO = b.INDI_DSCM_NO;
quit;
%MEND;

%MACRO DOLIST; %DO j=2002 %TO 2017 %BY 1; %MERGE(&j); %END; %MEND; %DOLIST;


data c.obj_2009_t20;
set c.obj_2009_t20_2002 c.obj_2009_t20_2003 c.obj_2009_t20_2004 c.obj_2009_t20_2005 c.obj_2009_t20_2006 c.obj_2009_t20_2007 
c.obj_2009_t20_2008 c.obj_2009_t20_2009 c.obj_2009_t20_2010 c.obj_2009_t20_2011 c.obj_2009_t20_2012 c.obj_2009_t20_2013 
c.obj_2009_t20_2014 c.obj_2009_t20_2015 c.obj_2009_t20_2016 c.obj_2009_t20_2017;
by INDI_DSCM_NO;
run;
/*간암검진 대상자 532,475 명*/
proc sql;create table c.obj_2009_t20_id as select distinct INDI_DSCM_NO from c.obj_2009_t20;run;

/*청구번호 없는 건 삭제 528,441 명*/
proc sql;create table c.obj_2009_t20_notNull as select * from c.obj_2009_t20 where CMN_KEY is not null;run;
proc sql;create table c.obj_2009_t20_id1 as select distinct INDI_DSCM_NO from c.obj_2009_t20_notNull;run;

proc sort data=a.bfc_2009;by INDI_DSCM_NO;run;
proc sort data=a.dth;by INDI_DSCM_NO;run;

/*청구 번호 없는 경우 : 50 명*/
data c.obj_2009_t20_except_id; 
merge a.bfc_2009(in=b) a.dth c.obj_2009_t20_id1(in=a) c.obj_2009_t20_id (in=c);
if a^=1 and b=1 and c=1; by  INDI_DSCM_NO; run;


/*간암확진 여부 ( “2002-2017년 주상병(입원외래) or 1-5부상병(입원외래)” and “산정특례” */
data c.obj_2009_t20; set c.obj_2009_t20;
if ((substr(SICK_SYM1,1,3)= 'C22' or
substr(SICK_SYM2,1,3)= 'C22' or
substr(SICK_SYM3,1,3)= 'C22' or
substr(SICK_SYM4,1,3)= 'C22' or
substr(SICK_SYM5,1,3)= 'C22')) and
SPCF_SYM_TYPE in ('V193','V194') and
substr(form_cd,1,2) in ('02','03') 
then LVC= 1;
else LVC= 0;
run;

/*----------------------------------------------------------------------*/
/*----------------------------------------------------------------------*/
/*---------------------------------------------------------------------*/

*2002~2009년 간암확진자 제외 12,532;
proc sql;
create table c.exclusion1 as
select distinct(INDI_DSCM_NO), min(MDCARE_STRT_DT) as LVC_diagnosis
from c.obj_2009_t20
where LVC= 1 and substr(MDCARE_STRT_DT,1,4) in ('2002','2003','2004','2005','2006','2007','2008','2009');
run;

proc sql;create table c.obj_2009_t20_id1 as select distinct INDI_DSCM_NO from c.exclusion1;run;
*2002~2009년 간암확진자 제외 간암검진대상자 515,909;
data c.cat1;
merge c.exclusion1(in=a) c.obj_2009_t20_notNull (in=b);
by INDI_DSCM_NO;
if  a^=1 and b=1;
run;

proc sort data= c.cat1 out= c.obj(keep= INDI_DSCM_NO HME_DT) nodupkey; by INDI_DSCM_NO; run;

*생년월일, 소득;
proc sort data= a.bfc_2009 out= c.bfc_2009_sort; by INDI_DSCM_NO; run;

data c.obj_info;
merge c.obj(in=a) c.bfc_2009_sort(in=b);
by INDI_DSCM_NO;
if a and b;
keep INDI_DSCM_NO SEX_TYPE BYEAR YEND_STD_AGE CALC_CTRB_VTILE_FD HME_DT;
run;

data  c.obj_info; set c.obj_info;
if CALC_CTRB_VTILE_FD ^=. then do;
if CALC_CTRB_VTILE_FD >= 1 and CALC_CTRB_VTILE_FD =<4 then INCOME = '1';
else if CALC_CTRB_VTILE_FD >= 5 and CALC_CTRB_VTILE_FD =<8 then INCOME = '2';
else if CALC_CTRB_VTILE_FD >= 9 and CALC_CTRB_VTILE_FD =<12 then INCOME = '3';
else if CALC_CTRB_VTILE_FD >= 13 and CALC_CTRB_VTILE_FD =<16 then INCOME = '4';
else if CALC_CTRB_VTILE_FD >= 17 and CALC_CTRB_VTILE_FD =<20 then INCOME = '5';
end;
if CALC_CTRB_VTILE_FD=. then INCOME=9; /*missing*/
run;




proc sort data= c.obj_info out= c.obj_info_id(keep= INDI_DSCM_NO) nodupkey; by INDI_DSCM_NO; run;

*사망일;
proc sort data= a.dth out= c.dth_sort; by INDI_DSCM_NO; run;

data c.obj_info;
merge c.obj_info(in=a) c.dth_sort;
by INDI_DSCM_NO;
if a;
run;

*42명 사망년일 오류제외;
data c.obj_info2; set c.obj_info; 
if DTH_ASSMD_DT ^= ' ' and DTH_ASSMD_DT < '20090101' then delete;
run;

proc freq data= c.obj_info2; tables INCOME*SEX_TYPE;run;

*최종연구대상자 ID 514,095명;
proc sort data= c.obj_info2 out= c.sub_id(keep= INDI_DSCM_NO) nodupkey; by INDI_DSCM_NO; run; * 514,095;

*최종연구대상자 ID remapping;
%MACRO MERGE(year);
proc sql;
create table c.sub_2009_t20_&year as
select *
from c.sub_id as a  left join c.t20_&year as b
on a.INDI_DSCM_NO = b.INDI_DSCM_NO;
quit;
%MEND;

%MACRO DOLIST; %DO j=2002 %TO 2017 %BY 1; 
%MERGE(&j); 
%END; 
%MEND; 

%DOLIST;

data c.sub_2009_t20;
set c.sub_2009_t20_2002 c.sub_2009_t20_2003 c.sub_2009_t20_2004 c.sub_2009_t20_2005 c.sub_2009_t20_2006 c.sub_2009_t20_2007 
c.sub_2009_t20_2008 c.sub_2009_t20_2009 c.sub_2009_t20_2010 c.sub_2009_t20_2011 c.sub_2009_t20_2012 c.sub_2009_t20_2013 
c.sub_2009_t20_2014 c.sub_2009_t20_2015 c.sub_2009_t20_2016 c.sub_2009_t20_2017;
by INDI_DSCM_NO;
run;

proc sql;
create table c.sub_2009_t20 as
select * from c.sub_2009_t20 
where CMN_KEY is not null;
run;


/*간암확진 여부 ( “2002-2017년 주상병(입원외래) or 1-5부상병(입원외래)” and “산정특례” */
data c.sub_2009_t20; set c.sub_2009_t20;
if ((substr(SICK_SYM1,1,3)= 'C22' or
substr(SICK_SYM2,1,3)= 'C22' or
substr(SICK_SYM3,1,3)= 'C22' or
substr(SICK_SYM4,1,3)= 'C22' or
substr(SICK_SYM5,1,3)= 'C22')) and
SPCF_SYM_TYPE in ('V193','V194') and
substr(form_cd,1,2) in ('02','03') 
then LVC= 1;
else LVC= 0;
run;

proc sort data=c.sub_2009_t20; by INDI_DSCM_NO; run;
data c.sub_2009_t20; MERGE c.sub_2009_t20 c.obj_info2 (in=a); by INDI_DSCM_NO; if a;run;


/*----------------------------------------------------------------------*/
/*----------------------------------------------------------------------*/
/*---------------------------------------------------------------------*/

/*2002-2017*/

data c.cat1;
set c.sub_2009_t20;
keep  INDI_DSCM_NO SEX_TYPE BYEAR YEND_STD_AGE CALC_CTRB_VTILE_FD HME_DT CMN_KEY MDCARE_STRT_DT FORM_CD SPCF_SYM_TYPE SICK_SYM1 SICK_SYM2 SICK_SYM3 SICK_SYM4 SICK_SYM5 LVC;
by INDI_DSCM_NO;                                  
run;

/*----------------------------------------------------------------------*/
/*----------------------------covariate----------------------------------*/
/*---------------------------------------------------------------------*/

data c.cat1; set c.cat1;
if (SICK_SYM1 in ('K74','K741','K742','K746','K76','K702','K703','K709') or
SICK_SYM2 in ('K74','K741','K742','K746','K76','K702','K703','K709') or
SICK_SYM3 in ('K74','K741','K742','K746','K76','K702','K703','K709') or
SICK_SYM4 in ('K74','K741','K742','K746','K76','K702','K703','K709') or
SICK_SYM5 in ('K74','K741','K742','K746','K76','K702','K703','K709')) and
substr(FORM_CD,1,2) in ('02','03') 
then Cirrhosis= 1;
else Cirrhosis= 0;


if (SICK_SYM1 in ('B18','B180','B181','B182','Z225') or
SICK_SYM2 in ('B18','B180','B181','B182','Z225') or
SICK_SYM3 in ('B18','B180','B181','B182','Z225') or
SICK_SYM4 in ('B18','B180','B181','B182','Z225') or
SICK_SYM5 in ('B18','B180','B181','B182','Z225')) and
substr(FORM_CD,1,2) in ('02','03')
then Hepatitis= 1;
else Hepatitis= 0;

/*B형 간염바이러스 항원 양성*/
if (SICK_SYM1 in ('B180','B181') or
SICK_SYM2 in ('B180','B181') or
SICK_SYM3 in ('B180','B181') or
SICK_SYM4 in ('B180','B181') or
SICK_SYM5 in ('B180','B181')) and
substr(FORM_CD,1,2) in ('02','03')
then 
Hepatitis_B= 1;
else Hepatitis_B= 0;

/*C형 간염바이러스 항체 양성*/
if (SICK_SYM1 in ('B182') or
SICK_SYM2 in ('B182') or
SICK_SYM3 in ('B182') or
SICK_SYM4 in ('B182') or
SICK_SYM5 in ('B182')) and
substr(FORM_CD,1,2) in ('02','03') 
then 
Hepatitis_C= 1;
else Hepatitis_C= 0;


if Hepatitis_B = 1 and Hepatitis_C= 1 and substr(FORM_CD,1,2) in ('02','03')
then Coinfection =1;
else Coinfection =0;

*B형 또는 C형 간염바이러스에 의한 만성 간질환 환자;
if (SICK_SYM1 in ('K73','K731','K732','K738','K739','B19') or
SICK_SYM2 in ('K73','K731','K732','K738','K739','B19') or
SICK_SYM3 in ('K73','K731','K732','K738','K739','B19') or
SICK_SYM4 in ('K73','K731','K732','K738','K739','B19') or
SICK_SYM5 in ('K73','K731','K732','K738','K739','B19') ) and
substr(FORM_CD,1,2) in ('02','03') 
then Others= 1;
else Others= 0;

if Hepatitis_B =1 and Cirrhosis= 1 and substr(FORM_CD,1,2) in ('02','03')  then hbv_cir = 1; else hbv_cir = 0;
if Hepatitis_B =1 and Others= 1 and substr(FORM_CD,1,2) in ('02','03') then hbv_oth = 1; else hbv_oth =0;

if Hepatitis_C =1 and Cirrhosis= 1 and substr(FORM_CD,1,2) in ('02','03') then hcv_cir = 1; else  hcv_cir =0;
if Hepatitis_C =1 and Others= 1 and substr(FORM_CD,1,2) in ('02','03') then hcv_oth = 1; else hcv_oth = 0;

if Cirrhosis =1 and Others= 1 and substr(FORM_CD,1,2) in ('02','03') then cir_oth = 1; else cir_oth = 0;

if Hepatitis_B =1 and Hepatitis_C= 1 and Cirrhosis= 1 and substr(FORM_CD,1,2) in ('02','03') then hbv_hcv_cir = 1; else hbv_hcv_cir = 0;
if Hepatitis_B =1 and Hepatitis_C= 1 and Others= 1 and substr(FORM_CD,1,2) in ('02','03') then hbv_hcv_oth = 1; else hbv_hcv_oth = 0;

if Hepatitis_B =1 and Cirrhosis= 1 and Others= 1 and substr(FORM_CD,1,2) in ('02','03') then hbv_cir_oth = 1; else hbv_cir_oth = 0;
if Hepatitis_C =1 and Cirrhosis= 1 and Others= 1 and substr(FORM_CD,1,2) in ('02','03') then hcv_cir_oth = 1; else hcv_cir_oth = 0;

if Hepatitis_B =1 and Hepatitis_C= 1 and Cirrhosis= 1 and Others= 1 and substr(FORM_CD,1,2) in ('02','03') then all = 1; else all =0;

run;


/*판정기준*/
/* 2002-2009 cirrhosis exist*/
proc sql;
create table c.cirrhosis as
select INDI_DSCM_NO,SEX_TYPE, Cirrhosis, MDCARE_STRT_DT
from c.cat1
where substr(MDCARE_STRT_DT,1,4) in ('2002','2003','2004','2005','2006','2007','2008','2009')
order by INDI_DSCM_NO,MDCARE_STRT_DT;
run;

data c.cirrhosis ; set c.cirrhosis; keep  INDI_DSCM_NO SEX_TYPE Cirrhosis MDCARE_STRT_DT; if first.INDI_DSCM_NO; where Cirrhosis=1; by INDI_DSCM_NO;run;
proc sort data=c.cirrhosis out=c.cirrhosis_id(keep=INDI_DSCM_NO); by INDI_DSCM_NO; run;

data  c.cirrhosis_x; merge c.cat1 c.cirrhosis_id(in=a);if not a;by INDI_DSCM_NO; run;
data c.cirrhosis_x ; set c.cirrhosis_x; keep  INDI_DSCM_NO SEX_TYPE Cirrhosis; if first.INDI_DSCM_NO; by INDI_DSCM_NO;run;

data  c.cirrhosis; merge c.cirrhosis c.cirrhosis_x;  keep INDI_DSCM_NO SEX_TYPE Cirrhosis; by INDI_DSCM_NO; run;
proc freq data =  c.cirrhosis; tables Cirrhosis * SEX_TYPE / expected chisq;run;


/* 간암 최초 확진 23,063*/
proc sql;
create table c.lvc_dt as
select INDI_DSCM_NO, LVC, MDCARE_STRT_DT as LVC_EXM,SEX_TYPE 
from c.cat1
where LVC is not null and LVC=1 and MDCARE_STRT_DT >= '20100101'
order by INDI_DSCM_NO, MDCARE_STRT_DT;
run;
data c.lvc_dt ; set c.lvc_dt; keep  INDI_DSCM_NO SEX_TYPE LVC  LVC_EXM; if first.INDI_DSCM_NO; by INDI_DSCM_NO;run;
proc freq data =  c.lvc_dt; tables SEX_TYPE;run;


/* 230,812*/
proc sql;
create table c.hepatitis as
select INDI_DSCM_NO, SEX_TYPE, Hepatitis,MDCARE_STRT_DT
from c.cat1
where substr(MDCARE_STRT_DT,1,4) in ('2002','2003','2004','2005','2006','2007','2008','2009')
order by INDI_DSCM_NO, MDCARE_STRT_DT;
run;

data c.hepatitis ; set c.hepatitis; keep  INDI_DSCM_NO SEX_TYPE Hepatitis MDCARE_STRT_DT; where Hepatitis =1; if first.INDI_DSCM_NO; by INDI_DSCM_NO;run;
proc sort data=c.hepatitis out=c.hepatitis_id(keep=INDI_DSCM_NO); by INDI_DSCM_NO; run;

data  c.hepatitis_x; merge c.cat1 c.hepatitis_id(in=a); keep INDI_DSCM_NO SEX_TYPE Hepatitis MDCARE_STRT_DT; if not a; by INDI_DSCM_NO; run;
data c.hepatitis_x ; set c.hepatitis_x;  if first.INDI_DSCM_NO; by INDI_DSCM_NO;run;

data  c.hepatitis; merge c.hepatitis c.hepatitis_x; keep  INDI_DSCM_NO SEX_TYPE Hepatitis; by INDI_DSCM_NO; run;
proc freq data =  c.hepatitis; tables Hepatitis * SEX_TYPE / expected chisq;run;

/* 280,519*/
proc sql;
create table c.others as
select INDI_DSCM_NO, SEX_TYPE,Others, MDCARE_STRT_DT
from c.cat1
where substr(MDCARE_STRT_DT,1,4) in ('2002','2003','2004','2005','2006','2007','2008','2009')
order by INDI_DSCM_NO, MDCARE_STRT_DT;
run;

data c.others ; set c.others; keep  INDI_DSCM_NO SEX_TYPE Others MDCARE_STRT_DT; where Others =1;  if first.INDI_DSCM_NO; by INDI_DSCM_NO;run;
proc sort data=c.others out=c.others_id(keep=INDI_DSCM_NO); by INDI_DSCM_NO; run;

data  c.others_x; merge c.cat1 c.others_id(in=a); keep INDI_DSCM_NO SEX_TYPE Others MDCARE_STRT_DT; if not a;by INDI_DSCM_NO; run;
data c.others_x ; set c.others_x; if first.INDI_DSCM_NO; by INDI_DSCM_NO;run;

data  c.others; merge c.others c.others_x; keep  INDI_DSCM_NO SEX_TYPE Others; by INDI_DSCM_NO; run;
proc freq data =  c.others; tables Others * SEX_TYPE / expected chisq;run;


proc sql;
create table c.hepatitis_co as
select INDI_DSCM_NO,SEX_TYPE,Coinfection, MDCARE_STRT_DT
from c.cat1
where substr(MDCARE_STRT_DT,1,4) in ('2002','2003','2004','2005','2006','2007','2008','2009')
order by INDI_DSCM_NO, MDCARE_STRT_DT;
run;

data c.hepatitis_co ; set c.hepatitis_co; keep  INDI_DSCM_NO SEX_TYPE Coinfection MDCARE_STRT_DT; where Coinfection = 1; if first.INDI_DSCM_NO; by INDI_DSCM_NO;run;
proc sort data=c.hepatitis_co out=c.hepatitis_co_id(keep=INDI_DSCM_NO); by INDI_DSCM_NO; run;

data  c.hepatitis_co_x; merge c.cat1 c.hepatitis_co_id(in=a); keep  INDI_DSCM_NO SEX_TYPE Coinfection MDCARE_STRT_DT; if not a;by INDI_DSCM_NO; run;
data c.hepatitis_co_x ; set c.hepatitis_co_x;  if first.INDI_DSCM_NO; by INDI_DSCM_NO;run;

data  c.hepatitis_co; merge c.hepatitis_co c.hepatitis_co_x; keep INDI_DSCM_NO SEX_TYPE Coinfection;  by INDI_DSCM_NO; run;
proc freq data =  c.hepatitis_co; tables Coinfection * SEX_TYPE / expected chisq;run;

/* 174960*/
proc sql;
create table c.hepatitis_b as
select INDI_DSCM_NO,SEX_TYPE,Hepatitis_B,MDCARE_STRT_DT
from c.cat1
where substr(MDCARE_STRT_DT,1,4) in ('2002','2003','2004','2005','2006','2007','2008','2009')
order by INDI_DSCM_NO, MDCARE_STRT_DT;
run;
data c.hepatitis_b ; set c.hepatitis_b; keep  INDI_DSCM_NO SEX_TYPE Hepatitis_B MDCARE_STRT_DT; where Hepatitis_B=1; if first.INDI_DSCM_NO; by INDI_DSCM_NO;run;
proc sort data=c.hepatitis_b out=c.hepatitis_b_id(keep=INDI_DSCM_NO); by INDI_DSCM_NO; run;

data  c.hepatitis_b_x; merge c.cat1 c.hepatitis_b_id(in=a); keep  INDI_DSCM_NO SEX_TYPE Hepatitis_B MDCARE_STRT_DT; if not a;by INDI_DSCM_NO; run;
data c.hepatitis_b_x ; set c.hepatitis_b_x;  if first.INDI_DSCM_NO; by INDI_DSCM_NO;run;

data  c.hepatitis_b; merge c.hepatitis_b c.hepatitis_b_x; keep INDI_DSCM_NO SEX_TYPE Hepatitis_B; by INDI_DSCM_NO; run;
proc freq data =  c.hepatitis_b; tables Hepatitis_B * SEX_TYPE / expected chisq;run;

/* 35994*/
proc sql;
create table c.hepatitis_c as
select INDI_DSCM_NO,SEX_TYPE,Hepatitis_C,MDCARE_STRT_DT
from c.cat1
where substr(MDCARE_STRT_DT,1,4) in ('2002','2003','2004','2005','2006','2007','2008','2009')
order by INDI_DSCM_NO, MDCARE_STRT_DT;
run;
data c.hepatitis_c ; set c.hepatitis_c; keep  INDI_DSCM_NO SEX_TYPE Hepatitis_C MDCARE_STRT_DT; where Hepatitis_C=1; if first.INDI_DSCM_NO; by INDI_DSCM_NO;run;
proc sort data=c.hepatitis_c out=c.hepatitis_c_id(keep=INDI_DSCM_NO); by INDI_DSCM_NO; run;

data  c.hepatitis_c_x; merge c.cat1 c.hepatitis_c_id(in=a); keep  INDI_DSCM_NO SEX_TYPE Hepatitis_C MDCARE_STRT_DT; if not a; by INDI_DSCM_NO; run;
data c.hepatitis_c_x ; set c.hepatitis_c_x;  if first.INDI_DSCM_NO; by INDI_DSCM_NO;run;

data  c.hepatitis_c; merge c.hepatitis_c c.hepatitis_c_x; keep INDI_DSCM_NO SEX_TYPE Hepatitis_C; by INDI_DSCM_NO; run;
proc freq data =  c.hepatitis_c; tables Hepatitis_C * SEX_TYPE / expected chisq;run;



/*-------------------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------*/

proc sql;create table c.cmn_key_t20 as select INDI_DSCM_NO, CMN_KEY from c.cat1;run;


/*상병내역(T40) 합치기*/
*ID로 정렬;
%MACRO SORT(year);
*1~9월;
%MACRO SORT1(start, stop, incr);
%DO i = &start %TO &stop %BY &incr;
proc sort data= a.t40_&year.0&i out= c.t40_&year.0&i._sort; by CMN_KEY; run;
%END;
%MEND;
%SORT1(1, 9, 1)

*10~12월;
%MACRO SORT2(start, stop, incr);
%DO i = &start %TO &stop %BY &incr;
proc sort data= a.t40_&year.&i. out= c.t40_&year.&i._sort; by CMN_KEY; run;
%END;
%MEND;
%SORT2(10, 12, 1);

%MEND;
%MACRO DOLIST; %DO j= 2010 %TO 2017 %BY 1; %SORT(&j); %END; %MEND; %DOLIST;

*연도별 상병내역 합치기;
%MACRO SET(year);
data c.t40_&year;
set c.t40_&year.01_sort c.t40_&year.02_sort c.t40_&year.03_sort c.t40_&year.04_sort c.t40_&year.05_sort c.t40_&year.06_sort
     c.t40_&year.07_sort c.t40_&year.08_sort c.t40_&year.09_sort c.t40_&year.10_sort c.t40_&year.11_sort c.t40_&year.12_sort;
by CMN_KEY;
run;
%MEND;
%MACRO DOLIST; %DO j= 2010 %TO 2017 %BY 1; %SET(&j); %END; %MEND; %DOLIST;

%MACRO SET(year);
data c.cmn_key_t20_t40_&year;
merge c.cmn_key_t20(in=a) c.t40_&year;
keep INDI_DSCM_NO CMN_KEY MCEX_SICK_SYM;
if a and MCEX_SICK_SYM ^='';
by CMN_KEY;
run;
%MEND;
%MACRO DOLIST; %DO j= 2002 %TO 2009 %BY 1; %SET(&j); %END; %MEND; %DOLIST;


data d.t40_2002_2009;
set c.cmn_key_t20_t40_2002 c.cmn_key_t20_t40_2003 c.cmn_key_t20_t40_2004 c.cmn_key_t20_t40_2005 
c.cmn_key_t20_t40_2006 c.cmn_key_t20_t40_2007 c.cmn_key_t20_t40_2008 c.cmn_key_t20_t40_2009;
by CMN_KEY;                                  
run;

data c.cat1_t40;merge c.cat1(in=a) d.t40_2002_2009;by CMN_KEY;run;
proc sort data=c.cat1_t40;by INDI_DSCM_NO;run;


/*----------------------------------------------------------------------*/
/*----------------------------------------------------------------------*/
/*일반건강검진---------------------------------------------------------*/

proc sort data= c.obj_info2 out=c.id_sex(keep= INDI_DSCM_NO SEX_TYPE); by INDI_DSCM_NO;run;
proc sort data=a.g1eq_2009 out=c.g1eq_2009_sort; by INDI_DSCM_NO;run;
proc sort data=a.g1eq_2008 out=c.g1eq_2008_sort; by INDI_DSCM_NO;run;
proc sort data=a.g1eq_2007 out=c.g1eq_2007_sort; by INDI_DSCM_NO;run;
proc sort data=a.g1eq_2006 out=c.g1eq_2006_sort; by INDI_DSCM_NO;run;

Data c.g1_eq_06_09;
set
c.g1eq_2009_sort 
c.g1eq_2008_sort
c.g1eq_2007_sort
c.g1eq_2006_sort
;run;

Proc sort data= c.g1_eq_06_09; by INDI_DSCM_NO;run;

Proc sort data= c.id_sex; by INDI_DSCM_NO;run;

data c.id_sex_g1e_06_09; 
merge c.id_sex(in=a)  c.g1_eq_06_09;
by INDI_DSCM_NO; if a and HME_DT ^='';run;

proc sort data= c.id_sex_g1e_06_09; 
by INDI_DSCM_NO HME_DT;
run;

/*408646*/
data c.id_sex_g1e_06_09_recent;
set c.id_sex_g1e_06_09; 
by INDI_DSCM_NO;
if last.INDI_DSCM_NO;
run;

proc freq data= c.id_sex_g1e_06_09_recent; tables SEX_TYPE;run;



/*----------------------------------------------------------------------*/
/*----------------------------------------------------------------------*/
/*---------------------------------------------------------------------*/


/*처방전교부상세(T60) 합치기*/
*ID로 정렬;
%MACRO SORT(year);
*1~9월;
%MACRO SORT1(start, stop, incr);
%DO i = &start %TO &stop %BY &incr;
proc sort data= b.t60_&year.0&i out= c.t60_&year.0&i._sort; by CMN_KEY; run;
%END;
%MEND;
%SORT1(1, 9, 1)

*10~12월;
%MACRO SORT2(start, stop, incr);
%DO i = &start %TO &stop %BY &incr;
proc sort data= b.t60_&year.&i. out= c.t60_&year.&i._sort; by CMN_KEY; run;
%END;
%MEND;
%SORT2(10, 12, 1);

%MEND;
%MACRO DOLIST; %DO j= 2002 %TO 2017 %BY 1; %SORT(&j); %END; %MEND; %DOLIST;

*연도별 명세서 합치기;
%MACRO SET(year);
data c.t60_&year;
set c.t60_&year.01_sort c.t60_&year.02_sort c.t60_&year.03_sort c.t60_&year.04_sort c.t60_&year.05_sort c.t60_&year.06_sort
     c.t60_&year.07_sort c.t60_&year.08_sort c.t60_&year.09_sort c.t60_&year.10_sort c.t60_&year.11_sort c.t60_&year.12_sort;
by CMN_KEY;
run;
%MEND;
%MACRO DOLIST; %DO j= 2002 %TO 2017 %BY 1; %SET(&j); %END; %MEND; %DOLIST;

%MACRO SET(year);
data c.cmn_key_t20_t60_&year;
merge c.cmn_key_t20(in=a) c.t60_&year;
keep INDI_DSCM_NO CMN_KEY MCARE_DIV_CD_ADJ;
if a and MCARE_DIV_CD_ADJ ^='';
by CMN_KEY;
run;
%MEND;
%MACRO DOLIST; %DO j= 2002 %TO 2009 %BY 1; %SET(&j); %END; %MEND; %DOLIST;

data d.t60_2002_2009;
set c.cmn_key_t20_t60_2002 c.cmn_key_t20_t60_2003 c.cmn_key_t20_t60_2004 c.cmn_key_t20_t60_2005 
c.cmn_key_t20_t60_2006 c.cmn_key_t20_t60_2007 c.cmn_key_t20_t60_2008 c.cmn_key_t20_t60_2009;
by CMN_KEY;                                  
run;

data c.cat1_t60;merge c.cat1(in=a) d.t60_2002_2009;by CMN_KEY;run;
proc sort data=c.cat1_t60;by INDI_DSCM_NO;run;

%MACRO SET(year);
data c.cmn_key_t20_t60_&year;
merge c.cmn_key_t20(in=a) c.t60_&year;
keep INDI_DSCM_NO CMN_KEY MCARE_DIV_CD_ADJ;
if a and MCARE_DIV_CD_ADJ ^='';
by CMN_KEY;
run;
%MEND;
%MACRO DOLIST; %DO j= 2010 %TO 2017 %BY 1; %SET(&j); %END; %MEND; %DOLIST;

data d.t60_2010_2017;
set c.cmn_key_t20_t60_2010 c.cmn_key_t20_t60_2011 c.cmn_key_t20_t60_2012 c.cmn_key_t20_t60_2013 
c.cmn_key_t20_t60_2014 c.cmn_key_t20_t60_2015 c.cmn_key_t20_t60_2016 c.cmn_key_t20_t60_2017;
by CMN_KEY;                                  
run;

data c.cat1_t60_af;merge c.cat1(in=a) d.t60_2010_2017;by CMN_KEY;run;
proc sort data=c.cat1_t60_af;by INDI_DSCM_NO;run;


/*data c.ARV; set c.;*/
/*if MCARE_DIV_Cd_ADJ in('665401ATB','180901ATB','493901ATB','457501ATB','487203ATB','506001ATB','487802ACH','665301ATB','452602BIJ',*/
/*'638001ACH', '644401ATB','658701ATB','645800ATB','658600ATB','657000ATB','669700ATB')*/
/*then ARV ='1';*/
/*else ARV = "0";*/
/*run;*/



data c.cat1_t60_af; set c.cat1_t60_af;
if MCARE_DIV_Cd_ADJ in(
/*insulin*/
'170431BIJ', '170430BIJ','170131BIJ','170130BIJ','441332BIJ','441333BIJ','441330BIJ','441331BIJ','626830BIJ','488730BIJ','461830BIJ','461831BIJ',
'484930BIJ','484931BIJ','175331BIJ','175330BIJ','175301BIJ','175302BIJ','170303BIJ','175304BIJ','175333BIJ','626700BIJ','E21800BIJ','170401BIJ',
'170402BIJ','170403BIJ','170502BIJ','170602BIJ','170603BIJ','170604BIJ','170101BIJ','170201BIJ','170302BIJ','170102BIJ','170403BIJ','170103BIJ',
'441303BIJ','441304BIJ','441334BIJ','441305BIJ','441302BIJ','441301BIJ','118301BIJ','118302BIJ','626802BIJ','488701BIJ','461832BIJ','461804BIJ',
'461801BIJ','461802BIJ','484901BIJ','484901BIJ','484902BIJ','175301BIOJ','175332BIJ','175302BIJ','507401BIJ','215701BIJ'
) then Insulin = 1;

if MCARE_DIV_Cd_ADJ in(
/*sulfonylureas*/
'132001ATB','165401ATB','165402ATB','421100ATB','443400ATB','443500ATB','471900ATB','165601ACS','165602ACS','165602ATB','165603ATR',
'497200ATB','165604ATR','165801ATB','165901ATB','165501ATB','165701ATB','165702ATB','165703ATB','165704ATB','474200ATB','474300ATB',
'488800ATB','474300ATR','489000ATB','498600ATB','488900ATB'
) then sulfonylureas = 1;

if MCARE_DIV_Cd_ADJ in(
/*metformin*/
'520500ATB','632000ATR','635700ATB','649900ATR','654100ATR','650100ATR','645000ATR','635600ATB','523800ATR','520700ATB','520600ATB',
'650000ATR','618900ATR','518500ATR','518600ATR','524700ATR','513700ATR','502300ATR','513700ATB','502900ATB','641800ATR','541900ATR',
'642000ATR','507100ATB','507000ATB','519600ATB','648400ATB','648500ATB','648600ATB','675500ATB'
) then metformin = 1;

if MCARE_DIV_Cd_ADJ in(
/*meglitinides*/
'486101ATB','430203ATB','430201ATB','430202ATB','430203ATB','379501ATB','379502ATB','379503ATB'
) then meglitinides = 1;

if MCARE_DIV_Cd_ADJ in(
/*thiazolidinediones*/
'52901ATB','431901ATB','431902ATB','348003ATB','348002ATB','348001ATB'
) then thiazolidinediones = 1;

if MCARE_DIV_Cd_ADJ in(
/*alpha glucosidase inhibitors*/
'100601ATB','100602ATB','406201ATB','249001ATB','249002ATB','406202ATB','249001ATD','249002ATD'
) then a_glucosidase_inhibitors = 1;

if MCARE_DIV_Cd_ADJ in(
/*dipeptidyl peptidase 4-inhibitor*/
'624202ATB','624203ATB','624201ATB','6396001ATB','645301ATB','619101ATB','616401ATB','613301ATB','613302ATB','501103ATB','501101ATB',
'501102ATB','627301ATB','500801ATB','685801ATB'
) then DPP_4 = 1;

if Insulin =1 or sulfonylureas =1 or metformin=1 or meglitinides = 1 or thiazolidinediones = 1 or a_glucosidase_inhibitors = 1 or DPP_4 = 1 then DM_DRUG ='1';
run;

proc freq data=c.cat1_t60;tables DM_DRUG;run;
proc freq data=c.cat1_t60;tables Insulin sulfonylureas metformin meglitinides thiazolidinediones a_glucosidase_inhibitors DPP_4 ;run;

data c.dm_drug; set c.cat1_t60; keep  INDI_DSCM_NO DM_DRUG; if DM_DRUG = 1; by INDI_DSCM_NO;run;
data c.dm_Insulin; set c.cat1_t60; keep  INDI_DSCM_NO Insulin; if Insulin = 1; by INDI_DSCM_NO;run;
data c.dm_sulfonylureas; set c.cat1_t60; keep  INDI_DSCM_NO sulfonylureas; if sulfonylureas = 1; by INDI_DSCM_NO;run;
data c.dm_metformin; set c.cat1_t60; keep  INDI_DSCM_NO metformin; if metformin = 1; by INDI_DSCM_NO;run;
data c.dm_meglitinides; set c.cat1_t60; keep  INDI_DSCM_NO meglitinides; if meglitinides = 1; by INDI_DSCM_NO;run;
data c.dm_thiazolidinediones; set c.cat1_t60; keep  INDI_DSCM_NO thiazolidinediones; if thiazolidinediones = 1; by INDI_DSCM_NO;run;
data c.dm_a_glucosidase_inhibitors; set c.cat1_t60; keep  INDI_DSCM_NO a_glucosidase_inhibitors; if a_glucosidase_inhibitors = 1; by INDI_DSCM_NO;run;
data c.dm_DPP_4; set c.cat1_t60; keep  INDI_DSCM_NO DPP_4; if DPP_4 = 1; by INDI_DSCM_NO;run;


proc sort data=c.dm_drug(keep=INDI_DSCM_NO) nodupkey;by INDI_DSCM_NO;run;
proc sort data=c.dm_Insulin(keep=INDI_DSCM_NO) nodupkey;by INDI_DSCM_NO;run;
proc sort data=c.dm_sulfonylureas(keep=INDI_DSCM_NO) nodupkey;by INDI_DSCM_NO;run;
proc sort data=c.dm_metformin(keep=INDI_DSCM_NO) nodupkey;by INDI_DSCM_NO;run;
proc sort data=c.dm_meglitinides(keep=INDI_DSCM_NO) nodupkey;by INDI_DSCM_NO;run;
proc sort data=c.dm_thiazolidinediones(keep=INDI_DSCM_NO) nodupkey;by INDI_DSCM_NO;run;
proc sort data=c.dm_a_glucosidase_inhibitors(keep=INDI_DSCM_NO) nodupkey;by INDI_DSCM_NO;run;
proc sort data=c.dm_DPP_4(keep=INDI_DSCM_NO) nodupkey;by INDI_DSCM_NO;run;


/*--------------------------------------------------------------------------------*/

/*--------------------------------------------------------------------------------*/


proc freq data=c.cat1_t60_af;tables DM_DRUG;run;
proc freq data=c.cat1_t60_af;tables Insulin sulfonylureas metformin meglitinides thiazolidinediones a_glucosidase_inhibitors DPP_4 ;run;

data c.dm_drug_af; set c.cat1_t60_af; keep  INDI_DSCM_NO DM_DRUG; if DM_DRUG = 1; by INDI_DSCM_NO;run;
data c.dm_Insulin_af; set c.cat1_t60_af; keep  INDI_DSCM_NO Insulin; if Insulin = 1; by INDI_DSCM_NO;run;
data c.dm_sulfonylureas_af; set c.cat1_t60_af; keep  INDI_DSCM_NO sulfonylureas; if sulfonylureas = 1; by INDI_DSCM_NO;run;
data c.dm_metformin_af; set c.cat1_t60_af; keep  INDI_DSCM_NO metformin; if metformin = 1; by INDI_DSCM_NO;run;
data c.dm_meglitinides_af; set c.cat1_t60_af; keep  INDI_DSCM_NO meglitinides; if meglitinides = 1; by INDI_DSCM_NO;run;
data c.dm_thiazolidinediones_af; set c.cat1_t60_af; keep  INDI_DSCM_NO thiazolidinediones; if thiazolidinediones = 1; by INDI_DSCM_NO;run;
data c.dm_a_glucosidase_inhibitors_af; set c.cat1_t60_af; keep  INDI_DSCM_NO a_glucosidase_inhibitors; if a_glucosidase_inhibitors = 1; by INDI_DSCM_NO;run;
data c.dm_DPP_4_af; set c.cat1_t60_af; keep  INDI_DSCM_NO DPP_4; if DPP_4 = 1; by INDI_DSCM_NO;run;


proc sort data=c.dm_drug_af(keep=INDI_DSCM_NO) nodupkey;by INDI_DSCM_NO;run;
proc sort data=c.dm_Insulin_af(keep=INDI_DSCM_NO) nodupkey;by INDI_DSCM_NO;run;
proc sort data=c.dm_sulfonylureas_af(keep=INDI_DSCM_NO) nodupkey;by INDI_DSCM_NO;run;
proc sort data=c.dm_metformin_af(keep=INDI_DSCM_NO) nodupkey;by INDI_DSCM_NO;run;
proc sort data=c.dm_meglitinides_af(keep=INDI_DSCM_NO) nodupkey;by INDI_DSCM_NO;run;
proc sort data=c.dm_thiazolidinediones_af(keep=INDI_DSCM_NO) nodupkey;by INDI_DSCM_NO;run;
proc sort data=c.dm_a_glucosidase_inhibitors_af(keep=INDI_DSCM_NO) nodupkey;by INDI_DSCM_NO;run;
proc sort data=c.dm_DPP_4_af(keep=INDI_DSCM_NO) nodupkey;by INDI_DSCM_NO;run;




* Diabetes Mellitus 분리 1. 검진일 이전 2. 간암 이전 

*1. Diabetes Mellitus;
data c.cov_dm; set c.cat1;/*2002-2017.12.31*/
if (substr(SICK_SYM1,1,3) in ('E10','E11','E12','E13','E14') or
substr(SICK_SYM2,1,3) in ('E10','E11','E12','E13','E14') or
substr(SICK_SYM3,1,3) in ('E10','E11','E12','E13','E14') or
substr(SICK_SYM4,1,3) in ('E10','E11','E12','E13','E14') or
substr(SICK_SYM5,1,3) in ('E10','E11','E12','E13','E14')) and
substr(FORM_CD,1,2) in ("02","03") 
then DM= 1;
else DM= 0;
MDCARE_YR= substr(MDCARE_STRT_DT,1,4);
run;
proc sort data=c.cov_dm;by INDI_DSCM_NO; run;

/*317,462*/
data c.dm_lvc; set c.dm_lvc;
LVC_data = substr(LVC_EXM,1,4);
drop LVC LVC_EXM DM; 
rename MDCARE_YR = DM_EXM LVC_data=LVC_EXM;
run;

/*15 547*/
data c.dm_lvc_exist; set c.dm_lvc;
where DM_EXM is not null and LVC_EXM is not null;
run;

data c.dm_lvc_exist_bf; set c.dm_lvc;
where DM_EXM <= LVC_EXM;
run;

/*1,253 male 985 female 268*/
data c.s; set c.dm_lvc;
where DM_EXM > LVC_EXM and LVC_EXM is not null;
run;

proc freq data=c.s; tables sex_type;run;



proc sql;
create table c.cov_dm_chisq as
select INDI_DSCM_NO, MDCARE_STRT_DT,MDCARE_YR,SEX_TYPE, DM
from c.cov_dm
where MDCARE_YR in ('2002','2003','2004','2005','2006','2007','2008','2009') and DM=1
order by INDI_DSCM_NO, MDCARE_STRT_DT;
run;

data c.cov_dm_chisq ; set c.cov_dm_chisq; keep INDI_DSCM_NO SEX_TYPE MDCARE_STRT_DT DM; if first.INDI_DSCM_NO; by INDI_DSCM_NO; run;
proc sort data=c.cov_dm_chisq out=c.cov_dm_chisq_id(keep=INDI_DSCM_NO); by INDI_DSCM_NO; run;

data c.cov_dm_chisq; set c.cov_dm_chisq;
rename MDCARE_STRT_DT = DM_EXM;
run;

data  c.cov_dm_chisqf_x; merge c.cov_dm c.cov_dm_chisq_id(in=a);if not a;by INDI_DSCM_NO; run;
data c.cov_dm_chisqf_x ; set c.cov_dm_chisqf_x; keep  INDI_DSCM_NO SEX_TYPE MDCARE_STRT_DT  DM; if first.INDI_DSCM_NO; by INDI_DSCM_NO;run;

data  c.dm; merge c.cov_dm_chisq c.cov_dm_chisqf_x; drop MDCARE_STRT_DT; by INDI_DSCM_NO; run;





proc freq data =  c.cov_dm_chisq; tables DM * SEX_TYPE / expected chisq;run;

/*-----------------------------------------------------------*/
/*-----------------------------------------------------------*


/*사망일자 및 EOS결합*/
data c.dth_sort; set c.dth_sort; dth=1;run;
proc sort data=c.dth_sort;by INDI_DSCM_NO;run; 
data c.dth_eos; set c.dth_sort; if DTH_ASSMD_DT^=. Then eos_ymd=min(DTH_ASSMD_DT, "20171231"); by INDI_DSCM_NO;run;
data c.cov_dm; merge c.cov_dm(in=a) c.dth_eos;if a;  by INDI_DSCM_NO;run;
data c.cov_dm; set c.cov_dm; if DTH_ASSMD_DT=. Then eos_ymd = "20171231" ; by INDI_DSCM_NO;run;

data c.cov_dm; set c.cov_dm; eos_ymd2=put(eos_ymd,$8.); by INDI_DSCM_NO; run;
data c.cov_dm (drop=eos_ymd); rename eos_ymd2=eos_ymd; set c.cov_dm1;  by INDI_DSCM_NO;  run;
proc sort data=c.cov_dm out=c.cov_dm1_id (keep=INDI_DSCM_NO) nodupkey ;by INDI_DSCM_NO; run;

/*간암 최초 발생일 결합*/
data c.cov_dm; merge c.cov_dm(in=a) c.lvc_dt; if a; by INDI_DSCM_NO; run;

/*-----------------------------------------------------------*/

/* 검진일 이전 DM 유무*/
proc sort data= c.cov_dm out=c.dm_bf_exam; by INDI_DSCM_NO MDCARE_STRT_DT; 
where MDCARE_YR in ('2002','2003','2004','2005','2006','2007','2008','2009') and DM =1;run;

/*-----------------------------------------------------------*/


/*1.1 DM before Medical Check Up YES 209,268   */
data c.dm_bf_exam_o; set c.dm_bf_exam; by INDI_DSCM_NO; bf_exam_dm=DM; run;
proc sort data=c.dm_bf_exam_o out=c.dm_bf_exam_o_id (keep=INDI_DSCM_NO bf_exam_dm) nodupkey;by INDI_DSCM_NO; run; /*검진일 이전 DM 존재 하는 경우 ()*/

/*1.2 (YES)DM After Medical Check Up DM YES 150,001*/
data c.dm_af1_exam_1; merge c.cov_dm c.dm_bf_exam_o_id(in=a); if a; by INDI_DSCM_NO; run;

proc sort data= c.dm_af1_exam_1 out=c.dm_af_exam_1; by INDI_DSCM_NO MDCARE_STRT_DT; 
where MDCARE_YR in ('2010','2011','2012','2013','2014','2015','2016','2017') and DM =1; run;
data c.dm_af_exam_1 (drop=dm); set c.dm_af_exam_1; by INDI_DSCM_NO; af_exam_o_dm_o=DM; run;
proc sort data=c.dm_af_exam_1 out=c.dm_af_exam_1_id (keep=INDI_DSCM_NO) nodupkey;by INDI_DSCM_NO; run;

/*1.3.(YES)DM After Medical Check Up DM No  58,506*/
data c.dm_af_exam_2;merge c.dm_af1_exam_1 c.dm_af_exam_1_id(in=a); if not a;by INDI_DSCM_NO;run;

proc sort data= c.dm_af_exam_2 out=c.dm_af_exam_2; by INDI_DSCM_NO MDCARE_STRT_DT; 
where MDCARE_YR in ('2010','2011','2012','2013','2014','2015','2016','2017') and DM =0; run;
data c.dm_af_exam_2 (drop=dm); set c.dm_af_exam_2;  by INDI_DSCM_NO; af_exam_o_dm_o=DM; run;
proc sort data=c.dm_af_exam_2 out=c.dm_af_exam_2_id (keep=INDI_DSCM_NO) nodupkey;by INDI_DSCM_NO; run;

data c.dm_af_exam_1_2(keep=INDI_DSCM_NO bf_exam_dm af_exam_o_dm_o); merge c.dm_af_exam_1 c.dm_af_exam_2;by INDI_DSCM_NO;  run;

/*DM After Medical Check Up DM 2009년 이전 DM기록은 있으나 그 이후 기록 X 761 */
data c.dm_exam; merge c.dm_af_exam_1_id(in=b) c.dm_af_exam_2_id(in=c); by INDI_DSCM_NO; run;
data c.dm_exam; merge c.dm_bf_exam_o_id c.dm_exam(in=B);IF NOT B; by INDI_DSCM_NO; run;
data c.dm_exam;merge c.dm_bf_exam_o c.dm_exam(in=a);IF  a; by INDI_DSCM_NO;run;
data c.dm_exam;merge c.cov_dm c.dm_exam(in=a);IF  a; by INDI_DSCM_NO;run;
data c.dm_exam; set c.dm_exam ; by INDI_DSCM_NO;run;
data c.dm_exam_id(keep=INDI_DSCM_NO MDCARE_YR DTH_YR as DTH_ASSMD_DT); set c.dm_exam; if last.INDI_DSCM_NO; DTH_YR = substr(DTH_ASSMD_DT,1,4);by INDI_DSCM_NO; run;/*761*/

proc freq data= c.dm_exam_id; tables MDCARE_YR DTH_YR; run;/*2009 : 543, 2010:89*/


/*------------------------------------------------------*/
/*------------------------------------------------------*/

proc sort data= c.dm_af_exam_1 out=c.dm_af_exam_1_lvc; by INDI_DSCM_NO MDCARE_STRT_DT; 
where MDCARE_YR in ('2010','2011','2012','2013','2014','2015','2016','2017') and LVC=1; run;
proc sort data=c.dm_af_exam_1_lvc out=c.dm_af_exam_1_lvc_id (keep=INDI_DSCM_NO) nodupkey;by INDI_DSCM_NO; run;/*LVC 5,767*/

/*검진일 이후-간암 이전 // 간암 이후-EOS(2017.12.31) 이전 */
data c.dm_af_exam_1_lvc_data; merge c.dm_af_exam_1 c.dm_af_exam_1_lvc_id(in=a);if  a; by INDI_DSCM_NO; run;
data c.dm_af_exam_1_lvc_data(keep=INDI_DSCM_NO MDCARE_YR af_exam_o_dm_o LVC_EXM DTH_ASSMD_DT); set c.dm_af_exam_1_lvc_data; if first.INDI_DSCM_NO; by INDI_DSCM_NO; run;

/*간암 확진 이전 DM 있는 경우 */
data c.dm_af_exam_1_lvc_data1; set c.dm_af_exam_1_lvc_data; where MDCARE_YR <= LVC_EXM; by INDI_DSCM_NO; run;/*LVC 5,407*/
data c.dm_af_exam_1_lvc_data1(keep=INDI_DSCM_NO dm_bf_lvc); set c.dm_af_exam_1_lvc_data1; dm_bf_lvc =1;by INDI_DSCM_NO; run;

/*간암 확진 이후 DM 있는 경우 */
data c.dm_af_exam_1_lvc_data2; set c.dm_af_exam_1_lvc_data; where MDCARE_YR > LVC_EXM ; by INDI_DSCM_NO; run;/*LVC 360*/
data c.dm_af_exam_1_lvc_data2(keep=INDI_DSCM_NO dm_af_lvc); set c.dm_af_exam_1_lvc_data2; dm_af_lvc =1;by INDI_DSCM_NO; run;

data c.dm_af_exam_1_nolvc; merge c.dm_af_exam_1 c.dm_af_exam_1_lvc_id(in=a); if not a;by INDI_DSCM_NO; run;
proc sort data= c.dm_af_exam_1_nolvc out=c.dm_af_exam_1_nolvc; by INDI_DSCM_NO MDCARE_STRT_DT; 
where MDCARE_YR in ('2010','2011','2012','2013','2014','2015','2016','2017') and  LVC=0; run;
proc sort data=c.dm_af_exam_1_nolvc out=c.dm_af_exam_1_nolvc_id (keep=INDI_DSCM_NO) nodupkey;by INDI_DSCM_NO; run; /*NOLVC 144,234*/


proc sort data= c.dm_af_exam_2 out=c.dm_af_exam_2_lvc; by INDI_DSCM_NO MDCARE_STRT_DT; 
where MDCARE_YR in ('2010','2011','2012','2013','2014','2015','2016','2017') and  LVC=1; run;
proc sort data=c.dm_af_exam_2_lvc out=c.dm_af_exam_2_lvc_id (keep=INDI_DSCM_NO) nodupkey;by INDI_DSCM_NO; run; /*LVC 2,386*/

data c.dm_af_exam_2_nolvc; merge c.dm_af_exam_2 c.dm_af_exam_2_lvc_id(in=a); if not a;by INDI_DSCM_NO; run;
proc sort data= c.dm_af_exam_2_nolvc out=c.dm_af_exam_2_nolvc; by INDI_DSCM_NO MDCARE_STRT_DT; 
where MDCARE_YR in ('2010','2011','2012','2013','2014','2015','2016','2017') and LVC=0; run;
proc sort data=c.dm_af_exam_2_nolvc out=c.dm_af_exam_2_nolvc_id (keep=INDI_DSCM_NO) nodupkey;by INDI_DSCM_NO; run; /*NOLVC 56,120*/

/*------------------------------------------------------*/
/*------------------------------------------------------*/

/*2.1 DM before Medical Check Up No  304,827   */
data c.dm_bf_exam_x; merge c.cov_dm c.dm_bf_exam_o_id(in=a);if not a;by INDI_DSCM_NO;run;
proc sort data=c.dm_bf_exam_x out=c.dm_bf_exam_x_id (keep=INDI_DSCM_NO) nodupkey;by INDI_DSCM_NO; run;

/*2.2(NO)DM After Medical Check Up DM YES 100,588*/

data c.dm_af2_exam_1; merge c.cov_dm c.dm_bf_exam_x_id(in=a); if a; by INDI_DSCM_NO; run;

proc sort data= c.dm_af2_exam_1 out=c.dm_af_exam_3; by INDI_DSCM_NO MDCARE_STRT_DT; 
where MDCARE_YR in ('2010','2011','2012','2013','2014','2015','2016','2017') and DM =1; run;
data c.dm_af_exam_3 (drop=dm); set c.dm_af_exam_3; by INDI_DSCM_NO; af_exam_x_dm_o=DM; run;
proc sort data=c.dm_af_exam_3 out=c.dm_af_exam_3_id (keep=INDI_DSCM_NO) nodupkey;by INDI_DSCM_NO; run;


/*2.3.(NO)DM After Medical Check Up DM No  203,304*/

data c.dm_af_exam_4;merge c.dm_af2_exam_1 c.dm_af_exam_3_id(in=a); if not a;by INDI_DSCM_NO;run;

proc sort data= c.dm_af_exam_4 out=c.dm_af_exam_4; by INDI_DSCM_NO MDCARE_STRT_DT; 
where MDCARE_YR in ('2010','2011','2012','2013','2014','2015','2016','2017') and DM =0; run;
data c.dm_af_exam_4 (drop=dm); set c.dm_af_exam_4;  by INDI_DSCM_NO; af_exam_x_dm_o=DM; run;
proc sort data=c.dm_af_exam_4 out=c.dm_af_exam_4_id (keep=INDI_DSCM_NO) nodupkey;by INDI_DSCM_NO; run;

data c.dm_af_exam_3_4(keep=INDI_DSCM_NO bf_exam_dm af_exam_x_dm_o); merge c.dm_af_exam_3 c.dm_af_exam_4;by INDI_DSCM_NO;  run;


/*DM After Medical Check Up DM 2009년 이전 DM기록은 있으나 그 이후 기록 X  */
data c.dm_exam1; merge c.dm_af_exam_3_id(in=b) c.dm_af_exam_4_id(in=c); by INDI_DSCM_NO; run;
data c.dm_exam1; merge c.dm_bf_exam_x_id c.dm_exam1(in=B);IF NOT B; by INDI_DSCM_NO; run;
data c.dm_exam1;merge c.dm_bf_exam_x c.dm_exam1(in=a);IF  a; by INDI_DSCM_NO;run;
data c.dm_exam1;merge c.cov_dm c.dm_exam1(in=a);IF  a; by INDI_DSCM_NO;run;
data c.dm_exam1; set c.dm_exam1 ; by INDI_DSCM_NO;run;
data c.dm_exam1_id(keep=INDI_DSCM_NO MDCARE_YR DTH_YR as DTH_ASSMD_DT); set c.dm_exam1; if last.INDI_DSCM_NO; DTH_YR = substr(DTH_ASSMD_DT,1,4);by INDI_DSCM_NO; run;/*761*/

proc freq data= c.dm_exam1_id; tables MDCARE_YR DTH_YR; run;/*2009 : 543, 2010:89*/


data c.dm_af_exam_3_4(keep=INDI_DSCM_NO  af_exam_x_dm_o); merge c.dm_af_exam_3 c.dm_af_exam_4; by INDI_DSCM_NO;  run;
data c.dm_af_exam_3_4; retain INDI_DSCM_NO bf_exam_dm  af_exam_x_dm_o; set c.dm_af_exam_3_4; bf_exam_dm=0; by INDI_DSCM_NO;  run;

/*------------------------------------------------------*/
/*------------------------------------------------------*/

proc sort data= c.dm_af_exam_3 out=c.dm_af_exam_3_lvc; by INDI_DSCM_NO MDCARE_STRT_DT; 
where MDCARE_YR in ('2010','2011','2012','2013','2014','2015','2016','2017') and LVC=1; run;
proc sort data=c.dm_af_exam_3_lvc out=c.dm_af_exam_3_lvc_id (keep=INDI_DSCM_NO) nodupkey;by INDI_DSCM_NO; run;/*LVC 2,710*/

/*검진일 이후-간암 이전 // 간암 이후-EOS(2017.12.31) 이전 */
data c.dm_af_exam_3_lvc_data; merge c.dm_af_exam_3 c.dm_af_exam_3_lvc_id(in=a);if  a; by INDI_DSCM_NO; run;
data c.dm_af_exam_3_lvc_data(keep=INDI_DSCM_NO MDCARE_YR af_exam_x_dm_o LVC_EXM DTH_ASSMD_DT); set c.dm_af_exam_3_lvc_data; if first.INDI_DSCM_NO; by INDI_DSCM_NO; run;

/*간암 확진 이전 DM 있는 경우 */
data c.dm_af_exam_3_lvc_data1; set c.dm_af_exam_3_lvc_data; where MDCARE_YR <= LVC_EXM; by INDI_DSCM_NO; run;/*LVC 1,992*/

/*간암 확진 이후 DM 있는 경우 */
data c.dm_af_exam_3_lvc_data2; set c.dm_af_exam_3_lvc_data; where MDCARE_YR > LVC_EXM ; by INDI_DSCM_NO; run;/*LVC 788*/


data c.dm_af_exam_3_nolvc; merge c.dm_af_exam_3 c.dm_af_exam_3_lvc_id(in=a); if not a;by INDI_DSCM_NO; run;
proc sort data= c.dm_af_exam_3_nolvc out=c.dm_af_exam_3_nolvc; by INDI_DSCM_NO MDCARE_STRT_DT; 
where MDCARE_YR in ('2010','2011','2012','2013','2014','2015','2016','2017') and  LVC=0; run;
proc sort data=c.dm_af_exam_3_nolvc out=c.dm_af_exam_3_nolvc_id (keep=INDI_DSCM_NO) nodupkey;by INDI_DSCM_NO; run; /*NOLVC 97,878*/

proc sort data= c.dm_af_exam_4 out=c.dm_af_exam_4_lvc; by INDI_DSCM_NO MDCARE_STRT_DT; 
where MDCARE_YR in ('2010','2011','2012','2013','2014','2015','2016','2017') and  LVC=1; run;
proc sort data=c.dm_af_exam_4_lvc out=c.dm_af_exam_4_lvc_id (keep=INDI_DSCM_NO) nodupkey;by INDI_DSCM_NO; run; /*LVC 7,606*/

data c.dm_af_exam_4_nolvc; merge c.dm_af_exam_4 c.dm_af_exam_4_lvc_id(in=a); if not a;by INDI_DSCM_NO; run;
proc sort data= c.dm_af_exam_4_nolvc out=c.dm_af_exam_4_nolvc; by INDI_DSCM_NO MDCARE_STRT_DT; 
where MDCARE_YR in ('2010','2011','2012','2013','2014','2015','2016','2017') and  LVC=0; run;
proc sort data=c.dm_af_exam_4_nolvc out=c.dm_af_exam_4_nolvc_id (keep=INDI_DSCM_NO) nodupkey;by INDI_DSCM_NO; run; /*NOLVC 144,234*/


data c.dm_exm_total1; merge c.dm_af_exam_1_2 c.dm_af_exam_3_4; by INDI_DSCM_NO;  run;
data c.dm_exm_total1; set c.dm_exm_total1; if af_exam_x_dm_o = . then af_exam_x_dm_o =0; if af_exam_o_dm_o = . then af_exam_o_dm_o = 0; by INDI_DSCM_NO;  run;

data c.dm_af_exam_1_lvc_data1(keep=INDI_DSCM_NO dm_bf_lvc); set c.dm_af_exam_1_lvc_data1; dm_bf_lvc =1;by INDI_DSCM_NO; run;
data c.dm_af_exam_1_lvc_data2(keep=INDI_DSCM_NO dm_af_lvc); set c.dm_af_exam_1_lvc_data2; dm_af_lvc =1;by INDI_DSCM_NO; run;

data c.dm_af_exam_3_lvc_data1(keep=INDI_DSCM_NO dm_bf_lvc); set c.dm_af_exam_3_lvc_data1; dm_bf_lvc =1;by INDI_DSCM_NO; run;
data c.dm_af_exam_3_lvc_data2(keep=INDI_DSCM_NO dm_af_lvc); set c.dm_af_exam_3_lvc_data2; dm_af_lvc =1;by INDI_DSCM_NO; run;

data c.dm_exm_total2; merge c.dm_af_exam_1_lvc_data1 c.dm_af_exam_1_lvc_data2 c.dm_af_exam_3_lvc_data1 c.dm_af_exam_3_lvc_data2; by INDI_DSCM_NO;  run;
data c.dm_exm_total2; set c.dm_exm_total2; if dm_bf_lvc = . then dm_bf_lvc =0; if dm_af_lvc = . then dm_af_lvc = 0; by INDI_DSCM_NO;  run;

data c.dm_exm_total; merge c.dm_exm_total1 c.dm_exm_total2; by INDI_DSCM_NO;  run;
data c.dm_trajectory; set c.dm_exm_total; if dm_bf_lvc = . then dm_bf_lvc =0; if dm_af_lvc = . then dm_af_lvc = 0;if first.INDI_DSCM_NO; by INDI_DSCM_NO;  run;

data c.lvc_dth(KEEP=INDI_DSCM_NO dth lvc DTH_ASSMD_DT LVC_EXM) ;set c.cov_dm; if first.INDI_DSCM_NO; by INDI_DSCM_NO;  run;
data c.dm_trajectory; merge c.dm_trajectory c.dm_exm_total2 c.lvc_dth; by INDI_DSCM_NO;  run;

/*------------------------------------------------------*/

/*4.  merge */
proc sql; create table c.dm_id as select distinct INDI_DSCM_NO from c.cov_dm;run;
proc sort data=c.dm_bf_exam (keep=INDI_DSCM_NO bf_exam);by INDI_DSCM_NO;run;
proc sort data=c.dm_bf_lvc (keep=INDI_DSCM_NO bf_lvc);by INDI_DSCM_NO;run;
proc sort data=c.dm_af (keep=INDI_DSCM_NO af_lvc af_nolvc dth lvc DTH_ASSMD_DT LVC_EXM);by INDI_DSCM_NO;run;
data c.dm_trajectory; merge c.dm_id (in=a) c.dm_bf_exam c.dm_bf_lvc c.dm_af; by INDI_DSCM_NO;if a;run;


proc contents data= c.dm_trajectory;run;
*-----------------------------------------------;
*-----------------------------------------------;
*-----------------------------------------------;



proc sql;create table c.clv_2009_sort as select OBJ, HME_DT from b.clv_obj_rst_2009 order by OBJ; quit;
proc sql; create table c.id_hme_dt as select OBJ as INDI_DSCM_NO, HME_DT from c.clv_2009_sort where HME_DT^='' ; quit; /*212688*/
data c.id_hme_dt; set c.id_hme_dt; if first.indi_dscm_no;by indi_dscm_no;run; /*211840, 848 (0.4%)*/

data c.id_sex; merge c.id_sex(in=a) c.id_hme_dt;by indi_dscm_no;run;
data c.id_m;set c.id_sex; if SEX_TYPE=1; by INDI_DSCM_NO; run;
data c.id_f;set c.id_sex; if SEX_TYPE=2; by INDI_DSCM_NO; run;


data c.sub_2009_t20_2007; set c.sub_2009_t20; if substr(MDCARE_STRT_DT,1,4) in ("2007"); by  INDI_DSCM_NO; run;
data c.sub_2009_t20_2008; set c.sub_2009_t20; if substr(MDCARE_STRT_DT,1,4) in ("2008"); by  INDI_DSCM_NO; run;
data c.sub_2009_t20_2009; set c.sub_2009_t20; if substr(MDCARE_STRT_DT,1,4) in ("2009"); by  INDI_DSCM_NO; run;


%MACRO SET(year);
data c.sub_m_2009_t20_&year;
merge c.id_m (in=a) c.sub_2009_t20_&year (in=b);
by INDI_DSCM_NO;
if a and b;
run;
%MEND;
%MACRO DOLIST; %DO j= 2007 %TO 2009 %BY 1; %SET(&j); %END; %MEND; %DOLIST;

%MACRO SET(year);
data c.sub_f_2009_t20_&year;
merge c.id_f (in=a) c.sub_2009_t20_&year (in=b);
by INDI_DSCM_NO;
if a and b;
run;
%MEND;
%MACRO DOLIST; %DO j= 2007 %TO 2009 %BY 1; %SET(&j); %END; %MEND; %DOLIST;

%MACRO SET(year);
proc sort data= c.sub_m_2009_t20_&year; by CMN_KEY; run;
%MEND;
%MACRO DOLIST; %DO j= 2007 %TO 2009 %BY 1; %SET(&j); %END; %MEND; %DOLIST;
%MACRO SET(year);
proc sort data= c.sub_f_2009_t20_&year; by CMN_KEY; run;
%MEND;
%MACRO DOLIST; %DO j= 2007 %TO 2009 %BY 1; %SET(&j); %END; %MEND; %DOLIST;

%MACRO SET(year);
proc sort data= c.t40_&year; by CMN_KEY; run;
%MEND;
%MACRO DOLIST; %DO j= 2007 %TO 2009 %BY 1; %SET(&j); %END; %MEND; %DOLIST;

*연도별 상병내역 + 명세서 합치기;
%MACRO SET(year);
data c.sub_m_2009_t20_t40&year;
merge c.sub_m_2009_t20_&year (in=a) c.t40_&year (in=b);
by CMN_KEY;
if a and b;
run;
%MEND;
%MACRO DOLIST; %DO j= 2007 %TO 2009 %BY 1; %SET(&j); %END; %MEND; %DOLIST;

*연도별 상병내역 + 명세서 합치기;
%MACRO SET(year);
data c.sub_f_2009_t20_t40&year;
merge c.sub_f_2009_t20_&year (in=a) c.t40_&year (in=b);
by CMN_KEY;
if a and b;
run;
%MEND;
%MACRO DOLIST; %DO j= 2007 %TO 2009 %BY 1; %SET(&j); %END; %MEND; %DOLIST;

* 최종;
data c.sub_m_2009_t20_t40;
set c.sub_m_2009_t20_t402007 c.sub_m_2009_t20_t402008 c.sub_m_2009_t20_t402009;
by CMN_KEY;
run;
* 최종;
data c.sub_f_2009_t20_t40;
set c.sub_f_2009_t20_t402007 c.sub_f_2009_t20_t402008 c.sub_f_2009_t20_t402009;
by CMN_KEY;
run;

proc sort data=c.sub_m_2009_t20_t40; by indi_dscm_no;run;
proc sort data=c.sub_f_2009_t20_t40; by indi_dscm_no;run;

/*****Step9. 2009년 암환자의 모든 상병기록 (T20)*****/
                                                                
DATA c.sub_f_2009_t20_t40;
SET c.sub_f_2009_t20_t40;
CCI_DATE=input(MDCARE_STRT_DT, yymm10.);
index_dt=input("20090101", yymm10.);
run;                                                            
DATA c.sub_m_2009_t20_t40;
SET c.sub_m_2009_t20_t40;
CCI_DATE=input(MDCARE_STRT_DT, yymm10.);
index_dt=input("20090101", yymm10.);
run;


DATA c.cci_m;
SET c.sub_m_2009_t20_t40;
format CCI_DATE yymmdd10. index_dt yymmdd10. ;
WHERE index_dt -CCI_DATE >=0 AND index_dt - CCI_DATE <= 365;
 
IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('I21','I22') OR SUBSTR(MCEX_SICK_SYM,1,4)='I252' THEN CCI_1=1; /*심근경색: Maycardial infraction*/
 
IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('I43','I50') OR SUBSTR(MCEX_SICK_SYM,1,4) IN ('I099','I110', 'I130','I132','I255','I420') 
OR 'I425' <= SUBSTR(MCEX_SICK_SYM,1,4) <= 'I429' THEN CCI_2=1; /*심부전: Congestive heart failure*/
 
IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('I70','I71') OR SUBSTR(MCEX_SICK_SYM,1,4) IN ('I731','I738', 'I739','I771','I790','I792','K551','K558', 'K559','Z958','Z959')  
THEN CCI_3=1; /*말초혈관질환: Periopheral vascular disorders*/
 
IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('G45','G46') OR 'I60' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'I69' OR
SUBSTR(MCEX_SICK_SYM,1,4) IN ('H340')  THEN CCI_4=1; /*뇌혈관질환 : Cerebrovascular disease*/
 
IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('F00','F01','F02','F03','G30') OR SUBSTR(MCEX_SICK_SYM,1,4) IN ('F051','G311')  THEN CCI_5=1; /*치매 :Dementia*/
 
IF 'J40' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'J47' OR 'J60' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'J67'  
OR SUBSTR(MCEX_SICK_SYM,1,4) IN ('I278','I279', 'J684','J701','J703')  THEN CCI_6=1; /*만성폐질환 : Chronic pulmonary disease*/
 
IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('M05','M06','M32','M33','M34') OR SUBSTR(MCEX_SICK_SYM,1,4) IN ('M315','M351', 'M353','M360')  
THEN CCI_7=1; /*류마티스성 질환 : Rheumatic disease*/
 
IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('K25','K26','K27','K28')  THEN CCI_8=1; /*소화성 궤양증 : Peptic ulcer disease*/
 
IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('B18','K73','K74') OR 
SUBSTR(MCEX_SICK_SYM,1,4) IN ('K700','K701', 'K702','K703','K709','K713', 'K714','K715','K717','K760', 'K762','K763','K764','K768', 'K769','Z944')  
THEN CCI_9=1; /*가벼운 간질환 : Mild liver disease*/
 
IF SUBSTR(MCEX_SICK_SYM,1,4) IN ('E100','E101', 'E106','E108','E109','E110','E111', 'E116','E118','E119','E120', 'E121','E126','E128','E129', 'E130','E131', 'E136','E138','E139','E140', 'E141','E146', 'E148','E149')  
THEN CCI_10=1; /*당뇨(만성합병증외) : Diabetes without chrnoic complication*/
 
IF SUBSTR(MCEX_SICK_SYM,1,4) IN ('E102','E103', 'E104','E105','E107','E112', 'E113','E114','E115','E117', 'E122','E123','E124','E125', 'E127','E132', 'E133','E134','E135','E137', 'E142','E143', 'E144','E145','E147')  
THEN CCI_11=1; /*당뇨(만성합병증) : Diabetes with chrnoic complication*/
 
IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('G81','G82') OR SUBSTR(MCEX_SICK_SYM,1,4) IN ('G041','G114', 'G801','G802','G830','G831', 'G832','G833','G834', 'G839')  
THEN CCI_12=1; /*편마비 : Hemiplegia or paraplegia*/
 
IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('N18','N19') OR SUBSTR(MCEX_SICK_SYM,1,4) IN ('I120','I131', 'N250','Z940','Z992') 
OR 'N032' <= SUBSTR(MCEX_SICK_SYM,1,4) <= 'N037' OR 'N052' <= SUBSTR(MCEX_SICK_SYM,1,4) <= 'N057' OR 'Z490' <= SUBSTR(MCEX_SICK_SYM,1,4) <= 'Z492'
THEN CCI_13=1; /*신장질환 : Renal disease*/
 
IF 'C00' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'C26' OR 'C30' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'C34'  OR 'C37' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'C41' OR 'C45' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'C58'  
OR 'C60' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'C76' OR 'C81' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'C85'  OR 'C90' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'C97' 
OR  SUBSTR(MCEX_SICK_SYM,1,3)  IN ('C43','C88') THEN CCI_14=1; /*악성종양 : Any malignancy*/
 
IF SUBSTR(MCEX_SICK_SYM,1,4) IN ('I850','I859', 'I864','I982','K704','K711', 'K721','K729','K765','K766','K767')  
THEN CCI_15=1; /*심각한 간질환 : Moderate or severe liver disease*/
 
IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('C77','C78', 'C79','C80')  
THEN CCI_16=1; /*전이성고형종양 : Moderate or severe liver disease*/
 
IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('B20','B21', 'B22','B24')  
THEN CCI_17=1; /*에이즈 : AIDS/HIV*/
 
RUN;


DATA c.cci_f;
SET c.sub_f_2009_t20_t40;
format CCI_DATE yymmdd10. index_dt yymmdd10. ;
WHERE index_dt -CCI_DATE >=0 AND index_dt - CCI_DATE <= 365;
 
IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('I21','I22') OR SUBSTR(MCEX_SICK_SYM,1,4)='I252' THEN CCI_1=1; /*심근경색: Maycardial infraction*/
 
IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('I43','I50') OR SUBSTR(MCEX_SICK_SYM,1,4) IN ('I099','I110', 'I130','I132','I255','I420') 
OR 'I425' <= SUBSTR(MCEX_SICK_SYM,1,4) <= 'I429' THEN CCI_2=1; /*심부전: Congestive heart failure*/
 
IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('I70','I71') OR SUBSTR(MCEX_SICK_SYM,1,4) IN ('I731','I738', 'I739','I771','I790','I792','K551','K558', 'K559','Z958','Z959')  
THEN CCI_3=1; /*말초혈관질환: Periopheral vascular disorders*/
 
IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('G45','G46') OR 'I60' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'I69' OR
SUBSTR(MCEX_SICK_SYM,1,4) IN ('H340')  THEN CCI_4=1; /*뇌혈관질환 : Cerebrovascular disease*/
 
IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('F00','F01','F02','F03','G30') OR SUBSTR(MCEX_SICK_SYM,1,4) IN ('F051','G311')  THEN CCI_5=1; /*치매 :Dementia*/
 
IF 'J40' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'J47' OR 'J60' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'J67'  
OR SUBSTR(MCEX_SICK_SYM,1,4) IN ('I278','I279', 'J684','J701','J703')  THEN CCI_6=1; /*만성폐질환 : Chronic pulmonary disease*/
 
IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('M05','M06','M32','M33','M34') OR SUBSTR(MCEX_SICK_SYM,1,4) IN ('M315','M351', 'M353','M360')  
THEN CCI_7=1; /*류마티스성 질환 : Rheumatic disease*/
 
IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('K25','K26','K27','K28')  THEN CCI_8=1; /*소화성 궤양증 : Peptic ulcer disease*/
 
IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('B18','K73','K74') OR 
SUBSTR(MCEX_SICK_SYM,1,4) IN ('K700','K701', 'K702','K703','K709','K713', 'K714','K715','K717','K760', 'K762','K763','K764','K768', 'K769','Z944')  
THEN CCI_9=1; /*가벼운 간질환 : Mild liver disease*/
 
IF SUBSTR(MCEX_SICK_SYM,1,4) IN ('E100','E101', 'E106','E108','E109','E110','E111', 'E116','E118','E119','E120', 'E121','E126','E128','E129', 'E130','E131', 'E136','E138','E139','E140', 'E141','E146', 'E148','E149')  
THEN CCI_10=1; /*당뇨(만성합병증외) : Diabetes without chrnoic complication*/
 
IF SUBSTR(MCEX_SICK_SYM,1,4) IN ('E102','E103', 'E104','E105','E107','E112', 'E113','E114','E115','E117', 'E122','E123','E124','E125', 'E127','E132', 'E133','E134','E135','E137', 'E142','E143', 'E144','E145','E147')  
THEN CCI_11=1; /*당뇨(만성합병증) : Diabetes with chrnoic complication*/
 
IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('G81','G82') OR SUBSTR(MCEX_SICK_SYM,1,4) IN ('G041','G114', 'G801','G802','G830','G831', 'G832','G833','G834', 'G839')  
THEN CCI_12=1; /*편마비 : Hemiplegia or paraplegia*/
 
IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('N18','N19') OR SUBSTR(MCEX_SICK_SYM,1,4) IN ('I120','I131', 'N250','Z940','Z992') 
OR 'N032' <= SUBSTR(MCEX_SICK_SYM,1,4) <= 'N037' OR 'N052' <= SUBSTR(MCEX_SICK_SYM,1,4) <= 'N057' OR 'Z490' <= SUBSTR(MCEX_SICK_SYM,1,4) <= 'Z492'
THEN CCI_13=1; /*신장질환 : Renal disease*/
 
IF 'C00' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'C26' OR 'C30' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'C34'  OR 'C37' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'C41' OR 'C45' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'C58'  
OR 'C60' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'C76' OR 'C81' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'C85'  OR 'C90' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'C97' 
OR  SUBSTR(MCEX_SICK_SYM,1,3)  IN ('C43','C88') THEN CCI_14=1; /*악성종양 : Any malignancy*/
 
IF SUBSTR(MCEX_SICK_SYM,1,4) IN ('I850','I859', 'I864','I982','K704','K711', 'K721','K729','K765','K766','K767')  
THEN CCI_15=1; /*심각한 간질환 : Moderate or severe liver disease*/
 
IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('C77','C78', 'C79','C80')  
THEN CCI_16=1; /*전이성고형종양 : Moderate or severe liver disease*/
 
IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('B20','B21', 'B22','B24')  
THEN CCI_17=1; /*에이즈 : AIDS/HIV*/
 
RUN;

 
%MACRO CCI2(sex,N);
 
DATA CCI_&sex_&N (KEEP=INDI_DSCM_NO CCI_DATE FORM_CD CCI_&N); 
SET c.CCI_&sex; WHERE CCI_&N=1 AND FORM_CD IN ('02','03'); RUN;
 
PROC SORT DATA=CCI_&sex_&N NODUP; BY INDI_DSCM_NO CCI_DATE FORM_CD; RUN;
 
PROC SQL; CREATE TABLE CCI&sex_&N AS SELECT INDI_DSCM_NO, FORM_CD, SUM(CCI_&N) AS N 
FROM CCI_&sex_&N GROUP BY INDI_DSCM_NO, FORM_CD; QUIT;
 
DATA CCI02_&sex_&N; SET CCI&sex_&N; WHERE FORM_CD='02'; RENAME N=N_02; RUN;
DATA CCI03_&sex_&N; SET CCI&sex_&N; WHERE FORM_CD='03'; RENAME N=N_03; RUN;
%MEND;
%MACRO DO_LIST; %DO I=1 %TO 17; %CCI2(m,&I);%END; %MEND DO_LIST; %DO_LIST;
%MACRO DO_LIST; %DO I=1 %TO 17; %CCI2(f,&I);%END; %MEND DO_LIST; %DO_LIST;
 
/**********************************************************************************************************************************************************
Klabunde's Rule out 1 : (1) 입원 0회,& 외래 1회 제외 (RO1&sex_&N)
**********************************************************************************************************************************************************/
%MACRO CCI3(sex,N);
DATA RO1_&sex_&N; 
MERGE CCI02_&sex_&N CCI03_&sex_&N; BY INDI_DSCM_NO; RUN;
DATA RO1&sex_&N; SET RO1_&sex_&N; WHERE N_02=. AND N_03<2;RUN;
%MEND;
%MACRO DO_LIST; %DO I=1 %TO 17; %CCI3(m,&I);%END; %MEND DO_LIST; %DO_LIST;
%MACRO DO_LIST; %DO I=1 %TO 17; %CCI3(f,&I);%END; %MEND DO_LIST; %DO_LIST;
 
/**********************************************************************************************************************************************************
Klabunde's Rule out 2 : (2-1) 방문 2회 이상 시 방문 간 간격 30일 초과만 포함 (RO2_M_&sex_&N)
                                     (3) 입원 1회 이상 시 포함 (RO2_02_&sex_&N)
**********************************************************************************************************************************************************/
 
%MACRO CCI4(sex,N);
 
DATA RO2_&sex_&N (DROP=VISIT_DIFF); SET CCI_&sex_&N; BY INDI_DSCM_NO CCI_DATE;
RETAIN VISIT_DIFF;
IF FIRST.INDI_DSCM_NO THEN DO; VISIT_DIFF=CCI_DATE; END;
ELSE DO; 
IF NMISS(VISIT_DIFF,CCI_DATE)=0 THEN VISITDIFF=CCI_DATE-VISIT_DIFF;
ELSE VISITDIFF=.; VISIT_DIFF=CCI_DATE; END; RUN;
 
DATA RO2_M_&sex_&N (KEEP=INDI_DSCM_NO); SET RO2_&sex_&N; WHERE VISITDIFF >30; RUN;
PROC SORT DATA= RO2_M_&sex_&N NODUP; BY INDI_DSCM_NO; RUN;
 
DATA RO2_02_&sex_&N (KEEP=INDI_DSCM_NO); SET RO2_&sex_&N; WHERE FORM_CD='02'; RUN;
PROC SORT DATA=RO2_02_&sex_&N NODUP; BY INDI_DSCM_NO; RUN;

DATA RO2_30_&sex_&N; 
SET RO2_&sex_&N (IN=A)
 RO2_M_&sex_&N (IN=B) 
 RO2_02_&sex_&N (IN=C); 
BY INDI_DSCM_NO; IF A=1 AND (B^=1 OR C^=1); RUN;
%MEND;
%MACRO DO_LIST; %DO I=1 %TO 17; %CCI4(m,&I);%END; %MEND DO_LIST; %DO_LIST;
%MACRO DO_LIST; %DO I=1 %TO 17; %CCI4(f,&I);%END; %MEND DO_LIST; %DO_LIST;
 
/**********************************************************************************************************************************************************
Klabunde's Rule out 3 : (2-1) 방문 3회 이상 시 방문 간 간격 30일 초과만 포함 (RO3&sex_&N)
**********************************************************************************************************************************************************/
 
%MACRO CCI5(sex,N);
PROC SQL; CREATE TABLE RO3_&sex_&N AS SELECT INDI_DSCM_NO, SUM(VISITDIFF) AS DAYS 
FROM RO2_30_&sex_&N GROUP BY INDI_DSCM_NO; QUIT;
DATA RO3&sex_&N(KEEP=INDI_DSCM_NO); SET RO3_&sex_&N; WHERE DAYS>30;RUN;
 
DATA  c.RO_&sex_&N; 
MERGE 
        RO2_M_&sex_&N (IN=A)  
        RO2_02_&sex_&N(IN=B)
        RO3&sex_&N(IN=C) 
        RO2_&sex_&N; 
BY INDI_DSCM_NO; IF A=1 OR B=1 OR C=1; RUN;
%MEND;
%MACRO DO_LIST; %DO I=1 %TO 17; %CCI5(m,&I);%END; %MEND DO_LIST; %DO_LIST;
%MACRO DO_LIST; %DO I=1 %TO 17; %CCI5(f,&I);%END; %MEND DO_LIST; %DO_LIST;
 
/**********************************************************************************************************************************************************
CCI DB SET
전체 청구 : RO&sex_&N
입원 청구 : RO02&sex_&N 
외래 청구 : RO03&sex_&N
**********************************************************************************************************************************************************/
 
%MACRO CCI6(sex,N);
DATA RO_&sex_&N; SET c.RO_&sex_&N; 
RENAME CCI_DATE=DATE_&N FORM_CD=FORM_&N; RUN;
 
PROC SORT DATA=RO_&sex_&N; BY INDI_DSCM_NO DATE_&N;  RUN;
DATA RO&sex_&N; SET RO_&sex_&N;  BY INDI_DSCM_NO DATE_&N; IF FIRST.INDI_DSCM_NO; RUN;
 
DATA RO02_&sex_&N; SET RO_&sex_&N; WHERE FORM_&N="02";
RENAME DATE_&N=DATE02_&N  CCI_&N=CCI02_&N; RUN;
 
DATA RO03_&sex_&N; SET RO_&sex_&N; WHERE FORM_&N="03";
RENAME DATE_&N=DATE03_&N  CCI_&N=CCI03_&N;RUN;
 
DATA RO02&sex_&N; SET RO02_&sex_&N;  BY INDI_DSCM_NO DATE02_&N; IF FIRST.INDI_DSCM_NO; RUN;
DATA RO03&sex_&N; SET RO03_&sex_&N;  BY INDI_DSCM_NO DATE03_&N; IF FIRST.INDI_DSCM_NO; RUN;
%MEND;
%MACRO DO_LIST; %DO I=1 %TO 17; %CCI6(m,&I);%END; %MEND DO_LIST; %DO_LIST;
%MACRO DO_LIST; %DO I=1 %TO 17; %CCI6(f,&I);%END; %MEND DO_LIST; %DO_LIST;
 
DATA c.ROm (DROP=VISITDIFF); 
MERGE RO&sex_1-RO&sex_17; BY INDI_DSCM_NO;RUN;
DATA c.RO02m (DROP=VISITDIFF); 
MERGE RO02m_1-RO02m_17; BY INDI_DSCM_NO;RUN;
DATA c.RO03&sex (DROP=VISITDIFF); 
MERGE RO03m_1-RO03m_17; BY INDI_DSCM_NO;RUN;
DATA c.ROf (DROP=VISITDIFF); 
MERGE ROf_1-ROf_17; BY INDI_DSCM_NO;RUN;
DATA c.RO02f (DROP=VISITDIFF); 
MERGE RO02f_1-RO02f_17; BY INDI_DSCM_NO;RUN;
DATA c.RO03f (DROP=VISITDIFF); 
MERGE RO03f_1-RO03f_17; BY INDI_DSCM_NO;RUN;
 
PROC SORT DATA=c.obj_info2; BY INDI_DSCM_NO;RUN;
PROC SORT DATA=c.ROm; BY INDI_DSCM_NO;RUN;
PROC SORT DATA=c.RO02m; BY INDI_DSCM_NO;RUN;
PROC SORT DATA=c.RO03m; BY INDI_DSCM_NO;RUN;
PROC SORT DATA=c.ROf; BY INDI_DSCM_NO;RUN;
PROC SORT DATA=c.RO02f; BY INDI_DSCM_NO;RUN;
PROC SORT DATA=c.RO03f; BY INDI_DSCM_NO;RUN;
 
DATA c.CCIm;
MERGE 
c.ROm
c.RO02m
c.RO03m;
BY INDI_DSCM_NO; IF A; RUN;
DATA c.CCIf;
MERGE 
c.ROf
c.RO02f
c.RO03f;
BY INDI_DSCM_NO; IF A; RUN;
 
data c.cci_fina;set c.CCIm c.CCIf;run;
DATA c.cci_final;
MERGE 
c.obj_info2 (in=a)
c.cci_fina;
BY INDI_DSCM_NO; IF A; RUN;

 

%MACRO CCI7(N);
DATA c.cci_final; SET c.cci_final;
 
IF CCI_&N=. THEN CCI_&N=0; 
IF CCI02_&N=. THEN CCI02_&N=0;  
IF CCI03_&N=. THEN CCI03_&N=0;
 
RUN;
%MEND;
%MACRO DO_LIST; %DO I=1 %TO 17; %CCI7(&I);%END; %MEND DO_LIST; %DO_LIST;
 
DATA  c.cci_final; SET c.cci_final;
 
LENGTH CCI_ID $20.;
 
CCI_N=CCI_1+CCI_2+CCI_3+CCI_4+CCI_5+CCI_6+CCI_7+CCI_8+CCI_9+CCI_10+CCI_11+CCI_12+CCI_13+CCI_14+CCI_15+CCI_16+CCI_17;
CCI_ID=CAT(CCI_1,CCI_2,CCI_3,CCI_4,CCI_5,CCI_6,CCI_7,CCI_8,CCI_9,CCI_10,CCI_11,CCI_12,CCI_13,CCI_14,CCI_15,CCI_16,CCI_17);
 
RUN;

proc freq data=c.cci_final; table cci_1-cci_17;
by sex_type;run;
proc sort data=c.cci_final out= c.cci_final;by INDI_DSCM_NO; run;

DATA c.cov_cci; SET c.cci_final;
if CCI_N >3 then CCI_SCORE=1;
if CCI_N =<3 then CCI_SCORE=0;
RUN;

/*cci 점수변수 생성*/
data c.cov_cci(keep=INDI_DSCM_NO CCI_SCORE); set c.cov_cci; by  INDI_DSCM_NO; run;
/*-------------------------------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------------*/


data  c.id_sex_g1e_alc_obe; set c.id_sex_g1e_06_09_recent;
if Q_DRK_FRQ_V09N^=. and Q_DRK_AMT_V09N^=. then do;
if Q_DRK_FRQ_V09N > 0 or Q_DRK_AMT_V09N > 0 then ALC= 1; /*yes*/
else if Q_DRK_FRQ_V09N = 0 and Q_DRK_AMT_V09N = 0 then ALC= 0; /*no*/
end;
else if Q_DRK_FRQ_V09N = . or Q_DRK_AMT_V09N = . then ALC= 9;

if G1E_BMI^=. then do;
if G1E_BMI <23 then OBE = 1;
else if G1E_BMI >= 23 and G1E_BMI <25 then OBE = 2;
else if G1E_BMI >= 25 then OBE= 3;
end;
else if G1E_BMI = . then OBE= 9;
HME_YR= substr(HME_DT,1,4);
run;

proc sort data=c.id_sex_g1e_alc_obe;by INDI_DSCM_NO;run;

proc sql; create table c.alcohol as select distinct INDI_DSCM_NO, SEX_TYPE, HME_YR, ALC from c.id_sex_g1e_alc_obe;quit;
proc sql; create table c.obe as select distinct INDI_DSCM_NO, SEX_TYPE,HME_YR,  OBE from  c.id_sex_g1e_alc_obe;quit;

proc freq data= c.id_sex_g1e_alc_obe; tables ALC*SEX_TYPE/ expected chisq ; run;
proc freq data= c.id_sex_g1e_alc_obe; tables OBE*SEX_TYPE/ expected chisq ; run;

/* SMOKING */

data  c.id_sex_g1e_smk; set c.id_sex_g1e_06_09_recent;
*Smoking;
If Q_SMK_YN^=. then do;
if Q_SMK_YN = 1 then SMK = 0;
else if Q_SMK_YN = 2 or Q_SMK_YN = 3  then SMK = 1;
end;
else if Q_SMK_YN = . then SMK= 9;
HME_YR= substr(HME_DT,1,4);
run;

proc sort data=c.id_sex_g1e_smk;by INDI_DSCM_NO;run;
proc sql; create table c.smk as select distinct INDI_DSCM_NO, SEX_TYPE, HME_YR, smk from c.id_sex_g1e_smk;quit;

proc freq data= c.id_sex_g1e_smk; tables SMK*SEX_TYPE / expected chisq; run;


/* FLD */
data c.id_sex_g1e_fld; set c.id_sex_g1e_06_09_recent;

If G1E_TG ^=. and G1E_BMI ^=. and G1E_GGT ^=. and G1E_WSTC ^=. then do;

FLD_num = 100/(1+EXP(-(0.953 * log(G1E_TG) + 0.139 * G1E_BMI + 0.718 * log(G1E_GGT) + 0.053 * G1E_WSTC -15.745)));

if FLD_num >=60 then FLD = 3;

else if FLD_num<60 and 
FLD_num>=30 then FLD = 2;

else if FLD_num< 30 then FLD = 1;
end;

else If G1E_TG =. or G1E_BMI =. or G1E_GGT =. or G1E_WSTC ^=. then FLD=9;
HME_YR= substr(HME_DT,1,4);
run;

proc sort data=c.id_sex_g1e_fld;by INDI_DSCM_NO;run;
proc sql; create table c.fld as select distinct INDI_DSCM_NO, SEX_TYPE, HME_YR, FLD from c.id_sex_g1e_fld;quit;
proc freq data= c.id_sex_g1e_fld; tables FLD*SEX_TYPE / expected chisq; run;

proc sort data=c.id_sex_g1e_fld;by SEX_TYPE;run;
proc univariate data=c.id_sex_g1e_fld; var FLD_num; by SEX_TYPE; run;       
proc univariate data=c.id_sex_g1e_fld; var FLD_num; run;     

proc ttest data= c.id_sex_g1e_fld; class SEX_TYPE; var FLD_num;run;

proc sort data=c.id_sex_g1e_fld;by INDI_DSCM_NO;run;
data c.fld_check(keep=INDI_DSCM_NO YEND_STD_AGE AGE  SEX_TYPE FLD_num FLD)  ;
merge c.age(in=a) c.id_sex_g1e_fld ;
by INDI_DSCM_NO;
if a;
run;

proc freq data=c.fld_check; table AGE*FLD*SEX_TYPE/ nocol norow nopercent;run;


/*----------------------------------------------------------------------*/
/*----------------------------------------------------------------------*/
/*암문진---------------------------------------------------------*/

proc sort data= a.cq_rst_2009 out= c.cq_rst_2009_sort; by INDI_DSCM_NO; run;
proc sort data= a.cq_rst_2008 out= c.cq_rst_2008_sort; by INDI_DSCM_NO; run;
proc sort data= a.cq_rst_2007 out= c.cq_rst_2007_sort; by INDI_DSCM_NO; run;

Data c.cq_rst_07_09;
set
c.cq_rst_2009_sort 
c.cq_rst_2008_sort
c.cq_rst_2007_sort;
run;

proc sort data= c.cq_rst_07_09; by INDI_DSCM_NO;run;

data c.cq_rst_07_09; 
merge c.id_sex(in=a)  c.cq_rst_07_09;
by INDI_DSCM_NO; if a and HME_DT ^='';run;

proc sort data= c.cq_rst_07_09; 
by INDI_DSCM_NO HME_DT;
run;

data c.cq_rst_07_09_recent;
set c.cq_rst_07_09; 
by INDI_DSCM_NO;
if last.INDI_DSCM_NO;
run;
/* 연도별 빈도수 */
proc freq data= c.cq_rst_07_09_recent; tables EXMD_BZ_YYYY;run;

/* 가족력 332,347*/
data c.cq_rst_07_09_recent; set c.cq_rst_07_09_recent;
/*위암*/
if (QC_PFHX_CST_PRT^="" and QC_PFHX_CST_PRT in ("2")) then CST_PRT=1;
else if QC_PFHX_CST_PRT^="" then CST_PRT=0;
else CST_PRT=9;

if (QC_PFHX_CST_BRT^="" and QC_PFHX_CST_BRT in ("2")) then CST_BRT=1;
else if QC_PFHX_CST_BRT^="" then CST_BRT=0;
else CST_BRT=9;

if (QC_PFHX_CST_SST^="" and QC_PFHX_CST_SST in ("2")) then CST_SST=1; 
else if QC_PFHX_CST_SST^="" then CST_SST=0;
else CST_SST=9;


/*대장*/
if (QC_PFHX_CCR_PRT^="" and QC_PFHX_CCR_PRT in ("2")) then CCR_PRT=1;
else if QC_PFHX_CCR_PRT^="" then CCR_PRT=0;
else CCR_PRT=9;

if (QC_PFHX_CCR_BRT^="" and QC_PFHX_CCR_BRT in ("2")) then CCR_BRT=1;
else if QC_PFHX_CCR_BRT^="" then CCR_BRT=0;
else CCR_BRT=9;

if (QC_PFHX_CCR_SST^="" and QC_PFHX_CCR_SST in ("2")) then CCR_SST=1; 
else if QC_PFHX_CCR_SST^="" then CCR_SST=0;
else CCR_SST=9;

/*간암*/
if (QC_PFHX_CLV_PRT^="" and QC_PFHX_CLV_PRT in ("2")) then CLV_PRT=1;
else if QC_PFHX_CLV_PRT^="" then CLV_PRT=0;
else CLV_PRT=9;

if (QC_PFHX_CLV_BRT^="" and QC_PFHX_CLV_BRT in ("2")) then CLV_BRT=1;
else if QC_PFHX_CLV_BRT^="" then CLV_BRT=0;
else CLV_BRT=9;

if (QC_PFHX_CLV_SST^="" and QC_PFHX_CLV_SST in ("2")) then CLV_SST=1; 
else if QC_PFHX_CLV_SST^="" then CLV_SST=0;
else CLV_SST=9;

/*유방*/
if (QC_PFHX_CBR_PRT^="" and QC_PFHX_CBR_PRT in ("2")) then CBR_PRT=1;
else if QC_PFHX_CBR_PRT^="" then CBR_PRT=0;
else CBR_PRT=9;

if (QC_PFHX_CBR_BRT^="" and QC_PFHX_CBR_BRT in ("2")) then CBR_BRT=1;
else if QC_PFHX_CBR_BRT^="" then CBR_BRT=0;
else CBR_BRT=9;

if (QC_PFHX_CBR_SST^="" and QC_PFHX_CBR_SST in ("2")) then CBR_SST=1; 
else if QC_PFHX_CBR_SST^="" then CBR_SST=0;
else CBR_SST=9;
 
/*자궁경부*/
if (QC_PFHX_CCX_PRT^="" and QC_PFHX_CCX_PRT in ("2")) then CCX_PRT=1;
else if QC_PFHX_CCX_PRT^="" then CCX_PRT=0;
else CCX_PRT=9;

if (QC_PFHX_CCX_BRT^="" and QC_PFHX_CCX_BRT in ("2")) then CCX_BRT=1;
else if QC_PFHX_CCX_BRT^="" then CCX_BRT=0;
else CCX_BRT=9;

if (QC_PFHX_CCX_SST^="" and QC_PFHX_CCX_SST in ("2")) then CCX_SST=1; 
else if QC_PFHX_CCX_SST^="" then CCX_SST=0;
else CCX_SST=9;
if CBR_PRT=1 or CCX_PRT=1 then ETC_PRT=1; else if CBR_PRT=9 or CCX_PRT=9 then ETC_PRT=9; else ETC_PRT=0; 
if CBR_BRT=1 or CCX_BRT=1 then ETC_BRT=1; else if CBR_BRT=9 or CCX_BRT=9 then ETC_BRT=9; else ETC_BRT=0; 
if CBR_SST=1 or CCX_SST=1 then ETC_SST=1; else if CBR_SST=9 or CCX_SST=9 then ETC_SST=9; else ETC_SST=0; 

if CST_PRT=1 or CST_BRT=1 or CST_SST=1 then CST=1;else if CST_PRT=9 or CST_BRT=9 or CST_SST=9 then CST=9;else CST=0;
if CCR_PRT=1 or CCR_BRT=1 or CCR_SST=1 then CCR=1;else if CCR_PRT=9 or CCR_BRT=9 or CCR_SST=9 then CCR=9;else CCR=0;
if CLV_PRT=1 or CLV_BRT=1 or CLV_SST=1 then CLV=1;else if CLV_PRT=9 or CLV_BRT=9 or CLV_SST=9 then CLV=9;else CLV=0;
if ETC_PRT=1 or ETC_BRT=1 or ETC_SST=1 then ETC=1;else if ETC_PRT=9 or ETC_BRT=9 or ETC_SST=9 then ETC=9;else ETC=0;


if CST=1 or CCR=1 or  CLV=1 or ETC=1 then family_hist=1;else if CST=9 or CCR=9 or  CLV=9 or ETC=9 then family_hist=9; else family_hist=0;
HME_YR= substr(HME_DT,1,4);
run;


proc freq data= c.cq_rst_07_09_recent; tables family_hist /norow nocol nopercent ; run;
proc freq data= c.cq_rst_07_09_recent; tables CST CST_PRT  CST_BRT CST_SST /norow nocol nopercent;run;
proc freq data= c.cq_rst_07_09_recent; tables  CCR CCR_PRT  CCR_BRT  CCR_SST /norow nocol nopercent;run;
proc freq data= c.cq_rst_07_09_recent; tables  CLV CLV_PRT  CLV_BRT CLV_SST /norow nocol nopercent;run;
proc freq data= c.cq_rst_07_09_recent; tables ETC ETC_PRT  ETC_BRT  ETC_SST /norow nocol nopercent;run;


proc sql; create table c.family as select distinct INDI_DSCM_NO, SEX_TYPE, HME_YR, family_hist from c.cq_rst_07_09_recent;quit;



/*--------------------------------------------------------------------------------------------------*/
/*------------------------------------성별에 따른 나이 및 보험-----------------------------*/
/*--------------------------------------------------------------------------------------------------*/

/*연령 */

data c.age; set c.obj_info2;
if YEND_STD_AGE >= 40 and YEND_STD_AGE =<49 then AGE = '1' ;
if YEND_STD_AGE >= 50 and YEND_STD_AGE =<59 then AGE = '2' ;
if YEND_STD_AGE >= 60 and YEND_STD_AGE =<69 then AGE = '3' ;
if YEND_STD_AGE >= 70 and YEND_STD_AGE =<79 then AGE = '4' ;
if YEND_STD_AGE >= 80 then AGE = '5';
run;

proc freq data=c.age;tables AGE*SEX_TYPE / expected chisq; run;

/*----------------------------------------------------------------------*/
/*----------------------------------4 state-------------------------------*/
/*---------------------------------------------------------------------*/

/*c.age+cirrhosis+hepatitis+hbv+hcv+coinfection++others+fld+alcohol+smk+obesity+lvc_dt+family, dm, cci*/
/*data c.first;*/
/*merge c.age(in=a) c.hepatitis_b c.hepatitis_c c.hepatitis_co c.others c.fld c.alcohol c.dm_trajectory c.cirrhosis_dt_bf c.lvc_dt;*/
/*by INDI_DSCM_NO;*/
/*if a;*/
/*run;*/

data c.first;
merge c.age(in=a) c.hepatitis_b c.hepatitis_c c.hepatitis_co c.others c.fld c.alcohol c.dm c.cirrhosis_dt_bf c.lvc_dt;
by INDI_DSCM_NO;
if a;
run;

/**/
/**변수정리;*/
/*proc contents data= c.first varnum; run;*/

/*data c.first;*/
/*retain INDI_DSCM_NO BYYEAR SEX_TYPE YEND_STD_AGE  AGE Cirrhosis Hepatitis Hepatitis_B bf_exam_dm ALC  FLD  HME_DT LVC_EXM DTH_ASSMD_DT;*/
/*set c.first;*/
/*rename INDI_DSCM_NO= PAT_ID SEX_TYPE= SEX YEND_STD_AGE= AGE AGE = AGE_GRP bf_exam_dm = DM HME_DT= EXM_DT DTH_ASSMD_DT= DTH_DT;*/
/*drop BYEAR CALC_CTRB_VTILE_FD HME_YR af_exam_o_dm_o af_exam_x_dm_o dm_bf_lvc dm_af_lvc dth LVC;*/
/*run;*/

data c.first;
retain INDI_DSCM_NO BYYEAR SEX_TYPE YEND_STD_AGE  AGE Cirrhosis Hepatitis Hepatitis_B bf_exam_dm ALC  FLD  HME_DT LVC_EXM DTH_ASSMD_DT;
set c.first;
rename INDI_DSCM_NO= PAT_ID SEX_TYPE= SEX YEND_STD_AGE= AGE AGE = AGE_GRP bf_exam_dm = DM HME_DT= EXM_DT DTH_ASSMD_DT= DTH_DT;
drop BYEAR CALC_CTRB_VTILE_FD HME_YR dth LVC;
run;

*레이블 정리;
data c.first; set c.first;
label PAT_ID= PAT_ID SEX= SEX AGE= AGE EXM_DT= EXM_DT DTH_DT= DTH_DT;
run;

data c.first; set c.first;
keep pat_id SEX AGE AGE_GRP Hepatitis_B Hepatitis_C Others Coinfection Cirrhosis  dm fld ALC exm_dt lvc_exm dth_dt ;
run;

*covariates 결측치 처리;
data c.first; set c.first;
if Cirrhosis= . then Cirrhosis= 9;
if Hepatitis_B= . then Hepatitis_B= 9;
if Hepatitis_C= . then Hepatitis_C= 9;
if Coinfection= . then Coinfection= 9;
if Others= . then Others= 9;
if DM= .   then DM= 9;
if FLD= .  then FLD= 9;
if ALC= .  then ALC= 9;
run;

*transition되는 시점 계산;
data c.half; set c.first;
if EXM_DT =''  then EXM_DT = '20090101';

y1= substr(EXM_DT,1,4);
m1= substr(EXM_DT,5,2);
d1= substr(EXM_DT,7,2);
mdy1= mdy(m1,d1,y1);

y2= substr(LVC_EXM,1,4);
m2= substr(LVC_EXM,5,2);
d2= substr(LVC_EXM,7,2);
mdy2= mdy(m2,d2,y2);

y3= substr(DTH_DT,1,4);
m3= substr(DTH_DT,5,2);
d3= substr(DTH_DT,7,2);
mdy3= mdy(m3,d3,y3);

HALF1= 0;
HALF2= 2*(mdy2-mdy1)/365.25;
HALF3= 2*(mdy3-mdy1)/365.25;
keep PAT_ID HALF1 HALF2 HALF3 ;
run;

*covariates 결측치 처리;
/*data c.first_cox; set c.first_cox;*/
/*if Cirrhosis= . then Cirrhosis= 9;*/
/*if Hepatitis_B= . then Hepatitis_B= 9;*/
/*if Hepatitis_C= . then Hepatitis_C= 9;*/
/*if Coinfection= . then Coinfection= 9;*/
/*if Others= . then Others= 9;*/
/*if DM= .   then DM= 9;*/
/*if FLD= .  then FLD= 9;*/
/*if ALC= .  then ALC= 9;*/
/*if SMK= .  then SMK= 9;*/
/*if OBE= .  then OBE= 9;*/
/*if family_hist= .  then family_hist= 9;*/
/*run;*/


*panel data 형태로 가공;
proc transpose data= c.half name= State prefix= HALF out= c.half2; by PAT_ID; run;

data c.state; set c.half2;
if State= 'HALF1' then State= 1;
else if State= 'HALF2' then State= 2;
else if State= 'HALF3' then State= 3;

rename HALF1= HALF;
label State= State;
run;

*transition에 해당하지 않는 행은 삭제;
data c.state;
retain PAT_ID HALF State;
set c.state;
if HALF= . then delete;
run;

/*studydata 완성*/
data c.studydata;
merge c.first c.state;
by PAT_ID;
run;


*간암확진일자와 사망일자가 동일한 경우, 간암확진을 30일 이전으로 조정(날짜차이 계산 후 바로 적용);
data c.studydata2; set c.studydata;
if State= 2 and LVC_EXM ^= ' ' and DTH_DT ^= ' ' and LVC_EXM = DTH_DT then HALF= HALF-(2*30/365.25);
run;


*3)Transition에 대한 정보가 없는 대상자(계속 State1인 경우);
data state1_2009; set c.studydata2;
if  LVC_EXM= ' ' and DTH_DT= ' ';
run;

*위 대상자에 대해 인위적으로 정보를 만들어줌(예: 20090101에 state1->20171231에 state1);
proc sql;
create table state1 as select * from state1_2009;
update state1 set HALF= 20;
quit;

*State2에 계속 머무는 경우;
data state2_2009; set c.studydata2;
if State= 2 and DTH_DT= ' ';
run;

proc sql;
create table state2 as select * from state2_2009;
update state2 set HALF= 20;
quit;

*Transition이 있는 대상자와 병합;
data c.studydata3;
set c.studydata2 state1 state2 ;
by PAT_ID;
run;

DATA c.paneldata_male;
SET c.studydata3;
if SEX = 1;
run;

DATA c.paneldata_female;
SET c.studydata3;
if SEX = 2;
run;


proc export data= c.paneldata_male DBMS= csv outfile= "/userdata21/rroom042/data_source/user_data/03. Add/paneldata_male.csv" replace; run;
proc export data= c.paneldata_female DBMS= csv outfile= "/userdata21/rroom042/data_source/user_data/03. Add/paneldata_female.csv" replace; run;

