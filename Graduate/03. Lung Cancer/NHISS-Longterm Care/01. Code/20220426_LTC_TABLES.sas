libname raw "/userdata20/rroom029/data_source/user_data";/*raw data*/
/*libname mywork "/userdata20/rroom029/mywork"; work, 추가됨*/
libname db "/userdata20/rroom029/data_out/data_store"; 
libname db_out "/userdata20/rroom029/data_out/data_out";
libname TB "/userdata20/rroom029/data_out/data_out/TABLES";


/****노인장기요양보험 신청&인정 비율(EXCEL)*****************************************************************************/
/****PRE_C = 0 (폐암 최초진단자=타암기진단자 제외)****/
PROC SQL; CREATE TABLE DB.TARGET_DTH_PRE0 AS SELECT * FROM DB.TARGET_DTH WHERE PRE_C=0; QUIT;

/*/전체/65세 이상 75세 미만/75세 이상 85세 미만/85세 이상*/
%LET AGE_COND= / /C_AGE>=65 AND C_AGE<75 AND/C_AGE>=75 AND C_AGE<85 AND/C_AGE>=85 AND;

/****** (1) 암진단&사망자 제외 테이블 ******/

/*1. at RISK 환자 수*/
%MACRO YEARLY(PRE);
%DO i=1 %TO 4; %LET AGE_RANGE = %SCAN(&AGE_COND., &i, "/");
	%DO YEAR=2008 %TO 2020; 
		%DO YR=&YEAR. %TO 2020;
		PROC SQL; CREATE TABLE C_DTH_&YEAR._&YR. AS
		SELECT DISTINCT &YR. AS YEAR, COUNT(DISTINCT INDI_DSCM_NO) AS C_YEAR_&YEAR. 
		FROM DB.TARGET_DTH&PRE.
		WHERE &AGE_RANGE. C_YEAR=&YEAR. AND (DTH_YEAR IS NULL OR DTH_YEAR>=&YR.) 
		GROUP BY C_YEAR ; QUIT;
		%END; 
	DATA C_DTH_&YEAR.; SET C_DTH_&YEAR._&YEAR.-C_DTH_&YEAR._2020; RUN;
	%END; 
DATA C_DTH_&i.; MERGE C_DTH_2008-C_DTH_2020; BY YEAR; RUN;
%END;
%MEND YEARLY; 
/*전체 대상자*/ %YEARLY(); DATA TB.LTC_1; SET C_DTH_1-C_DTH_4; RUN;
/*타암기진단자 제외*/ %YEARLY(_PRE0); DATA TB.LTC_PRE0_1; SET C_DTH_1-C_DTH_4; RUN;


/*1(a). 사망자 수*/
%MACRO YEARLY(PRE);
%DO i=1 %TO 4; %LET AGE_RANGE = %SCAN(&AGE_COND., &i, "/");
	%DO YEAR=2008 %TO 2020; 
		%DO YR=2008 %TO 2020;
		PROC SQL; CREATE TABLE C_DTH_&YEAR._&YR. AS
		SELECT DISTINCT &YR. AS YEAR, COUNT(DISTINCT INDI_DSCM_NO) AS C_YEAR_&YEAR. 
		FROM DB.TARGET_DTH&PRE.
		WHERE &AGE_RANGE. C_YEAR=&YEAR. AND DTH_YEAR=&YR.
		GROUP BY C_YEAR ; QUIT;
		%END; 
	DATA C_DTH_&YEAR.; SET C_DTH_&YEAR._2008-C_DTH_&YEAR._2020; RUN;
	%END; 
DATA C_DTH_&i.; MERGE C_DTH_2008-C_DTH_2020; BY YEAR; RUN;
%END;
%MEND YEARLY; 
/*전체 대상자*/ %YEARLY(); DATA TB.LTC_1A; SET C_DTH_1-C_DTH_4; RUN;
/*타암기진단자 제외*/ %YEARLY(_PRE0); DATA TB.LTC_PRE0_1A; SET C_DTH_1-C_DTH_4; RUN;


/*1(b). 폐암 진단 이후 사망 이전까지 자격 DB에 있는 환자 수(AT RISK상태인 사람 수와 다름)*/
DATA BFC_STDYR (KEEP=INDI_DSCM_NO JK_YR); SET RAW.BFC_2008-RAW.BFC_2020; JK_YR=STD_YYYY*1; RUN;
PROC SQL; CREATE TABLE JK AS
SELECT A.INDI_DSCM_NO, A.C_AGE, A.C_YEAR, A.DTH_YEAR, B.JK_YR
FROM DB.TARGET_DTH AS A
LEFT JOIN BFC_STDYR AS B
ON A.INDI_DSCM_NO=B.INDI_DSCM_NO
WHERE JK_YR>=C_YEAR AND (DTH_YEAR=. OR (DTH_YEAR^=. AND DTH_YEAR>=JK_YR)) /*사망 이후에도 자격연도가 있는 경우가 850건 있음*/
ORDER BY INDI_DSCM_NO, JK_YR
; QUIT;
/****PRE_C = 0 (폐암 최초진단자)****/
PROC SQL; CREATE TABLE JK_PRE0 AS
SELECT A.INDI_DSCM_NO, A.C_AGE, A.C_YEAR, A.DTH_YEAR, B.JK_YR
FROM DB.TARGET_DTH_PRE0 AS A
LEFT JOIN BFC_STDYR AS B
ON A.INDI_DSCM_NO=B.INDI_DSCM_NO
WHERE JK_YR>=C_YEAR AND (DTH_YEAR=. OR (DTH_YEAR^=. AND DTH_YEAR>=JK_YR)) 
ORDER BY INDI_DSCM_NO, JK_YR
; QUIT;

%MACRO YEARLY(PRE);
%DO i=1 %TO 4; %LET AGE_RANGE = %SCAN(&AGE_COND., &i, "/");
	%DO YEAR=2008 %TO 2020; 
		%DO YR=2008 %TO 2020;
		PROC SQL; CREATE TABLE C_JK_&YEAR._&YR. AS
		SELECT DISTINCT JK_YR, COUNT(DISTINCT INDI_DSCM_NO) AS JK_&YEAR. FROM JK&PRE.
		WHERE &AGE_RANGE. C_YEAR=&YEAR. AND JK_YR=&YR. GROUP BY C_YEAR, JK_YR ; QUIT;
		%END; 
	DATA C_JK_&YEAR.; SET C_JK_&YEAR._2008-C_JK_&YEAR._2020;RUN;
	%END; 
DATA C_JK_&i.; MERGE C_JK_2008-C_JK_2020; BY JK_YR; RUN;
%END;
%MEND YEARLY; 
/*전체 대상자*/ %YEARLY(); DATA TB.LTC_1B; SET C_JK_1-C_JK_4; RUN;
/*타암기진단자 제외*/ %YEARLY(_PRE0); DATA TB.LTC_PRE0_1B; SET C_JK_1-C_JK_4; RUN;


/****** (2) 장기요양보험 신청자 ******/
PROC SQL; CREATE TABLE DB.TARGET_LTC_TBNYBASE AS
SELECT DISTINCT A.*, B.*, INPUT(SUBSTR(B.APLY_YM,1,4),4.) AS APLY_YR, 
INTNX('MONTH',INPUT(B.APLY_YM,YYMMN6.),1)-1 AS APLY_YMD,
INTNX('MONTH',INPUT(B.APLY_YM,YYMMN6.),0) AS APLY_YMD2,

INTNX('MONTH',INPUT(B.GRADE_JUDG_YM,YYMMN6.),1)-1 AS GRADE_JUDG_YMD,
INTNX('MONTH',INPUT(B.GRADE_JUDG_YM,YYMMN6.),0) AS GRADE_JUDG_YMD2,

INPUT(RCGT_EDA_FR_DT,YYMMDD10.) AS RCGT_EDA_FR_YMD,
INPUT(RCGT_EDA_TO_DT,YYMMDD10.) AS RCGT_EDA_TO_YMD
FROM DB.TARGET_DTH AS A
LEFT JOIN RAW.RVSN_HFVT_TBNYBASE AS B
ON A.INDI_DSCM_NO=B.INDI_DSCM_NO
; QUIT;
DATA  DB.TARGET_LTC_TBNYBASE; SET DB.TARGET_LTC_TBNYBASE; 
FORMAT C_DATE YYMMDD10. APLY_YMD YYMMDD10. APLY_YMD2 YYMMDD10. 
GRADE_JUDG_YMD YYMMDD10. GRADE_JUDG_YMD2 YYMMDD10. 
RCGT_EDA_FR_YMD YYMMDD10. RCGT_EDA_TO_YMD YYMMDD10. 
;RUN;
/****PRE_C = 0 (폐암 최초진단자)****/
PROC SQL; CREATE TABLE DB.TARGET_LTC_TBNYBASE_PRE0 AS
SELECT DISTINCT A.*, B.*, INPUT(SUBSTR(B.APLY_YM,1,4),4.) AS APLY_YR, 
INTNX('MONTH',INPUT(B.APLY_YM,YYMMN6.),1)-1 AS APLY_YMD,
INTNX('MONTH',INPUT(B.APLY_YM,YYMMN6.),0) AS APLY_YMD2,

INTNX('MONTH',INPUT(B.GRADE_JUDG_YM,YYMMN6.),1)-1 AS GRADE_JUDG_YMD,
INTNX('MONTH',INPUT(B.GRADE_JUDG_YM,YYMMN6.),0) AS GRADE_JUDG_YMD2,

INPUT(RCGT_EDA_FR_DT,YYMMDD10.) AS RCGT_EDA_FR_YMD,
INPUT(RCGT_EDA_TO_DT,YYMMDD10.) AS RCGT_EDA_TO_YMD
FROM DB.TARGET_DTH_PRE0 AS A
LEFT JOIN RAW.RVSN_HFVT_TBNYBASE AS B
ON A.INDI_DSCM_NO=B.INDI_DSCM_NO
; QUIT;
DATA  DB.TARGET_LTC_TBNYBASE_PRE0; SET DB.TARGET_LTC_TBNYBASE_PRE0; 
FORMAT C_DATE YYMMDD10. APLY_YMD YYMMDD10. APLY_YMD2 YYMMDD10. 
GRADE_JUDG_YMD YYMMDD10. GRADE_JUDG_YMD2 YYMMDD10. 
RCGT_EDA_FR_YMD YYMMDD10. RCGT_EDA_TO_YMD YYMMDD10. 
;RUN;

%MACRO YEARLY(PRE);
%DO i=1 %TO 4; %LET AGE_RANGE = %SCAN(&AGE_COND., &i, "/");
	%DO YEAR=2008 %TO 2020; 
		%DO YR=2008 %TO 2020;
		PROC SQL; CREATE TABLE LTC_&YEAR._&YR. AS
		SELECT DISTINCT APLY_YR, COUNT(DISTINCT INDI_DSCM_NO) AS APLY_&YEAR. FROM DB.TARGET_LTC_TBNYBASE&PRE.
		WHERE &AGE_RANGE. C_DATE<=APLY_YMD AND C_YEAR=&YEAR. AND APLY_YR=&YR. GROUP BY C_YEAR ; QUIT; /*APLY_YR로 변경*/
		%END; 
	DATA LTC_&YEAR.; SET LTC_&YEAR._2008-LTC_&YEAR._2020;RUN;
	%END; 
DATA LTC_&i.; MERGE LTC_2008-LTC_2020; BY APLY_YR; RUN;
%END;
%MEND YEARLY; 
/*전체 대상자*/ %YEARLY(); DATA TB.LTC_2; SET LTC_1-LTC_4; RUN;
/*타암기진단자 제외*/ %YEARLY(_PRE0); DATA TB.LTC_PRE0_2; SET LTC_1-LTC_4; RUN;


/****** (2)(A) 장기요양보험 신청횟수 ******/
%MACRO YEARLY(PRE);
%DO i=1 %TO 4; %LET AGE_RANGE = %SCAN(&AGE_COND., &i, "/");
	%DO YEAR=2008 %TO 2020; 
		%DO YR=2008 %TO 2020;
		PROC SQL; CREATE TABLE LTC_&YEAR._&YR. AS
		SELECT DISTINCT APLY_YR, COUNT( INDI_DSCM_NO) AS APLY_&YEAR. FROM DB.TARGET_LTC_TBNYBASE&PRE.
		WHERE &AGE_RANGE. C_DATE<=APLY_YMD AND C_YEAR=&YEAR. AND APLY_YR=&YR. GROUP BY C_YEAR ; QUIT; /*SUBSTR(APLY_YM,1,4)에서 APLY_YR로 변경*/
		%END; 
	DATA LTC_&YEAR.; SET LTC_&YEAR._2008-LTC_&YEAR._2020;RUN;
	%END; 
DATA LTC_&i.; MERGE LTC_2008-LTC_2020; BY APLY_YR; RUN;
%END;
%MEND YEARLY; 
/*전체 대상자*/ %YEARLY(); DATA TB.LTC_2A; SET LTC_1-LTC_4; RUN;
/*타암기진단자 제외*/ %YEARLY(_PRE0); DATA TB.LTC_PRE0_2A; SET LTC_1-LTC_4; RUN;


/*2(B) 2회 이상 신청한 환자 수*/
%MACRO YEARLY(PRE);
%DO i=1 %TO 4; %LET AGE_RANGE = %SCAN(&AGE_COND., &i, "/");
	%DO YEAR=2008 %TO 2020; 
		%DO YR=&YEAR. %TO 2020;
		PROC SQL; CREATE TABLE LTC_&YEAR._&YR. AS
		SELECT DISTINCT APLY_YR, COUNT( DISTINCT INDI_DSCM_NO) AS APLY_&YEAR. FROM (
			SELECT INDI_DSCM_NO, COUNT(DISTINCT LTC_MGMT_NO_SEQ) AS APLY_N, APLY_YR
			FROM DB.TARGET_LTC_TBNYBASE&PRE. 
			WHERE &AGE_RANGE. C_DATE<=APLY_YMD AND C_YEAR=&YEAR. AND APLY_YR=&YR.
			GROUP BY INDI_DSCM_NO HAVING COUNT(DISTINCT LTC_MGMT_NO_SEQ) >1 )
		GROUP BY APLY_YR; QUIT;
		%END; 
	DATA LTC_&YEAR.; SET LTC_&YEAR._&YEAR.-LTC_&YEAR._2020;RUN;
	%END; 
DATA LTC_&i.; MERGE LTC_2008-LTC_2020; BY APLY_YR; RUN;
%END;
%MEND YEARLY;
/*전체 대상자*/ %YEARLY(); DATA TB.LTC_2B; SET LTC_1-LTC_4; RUN;
/*타암기진단자 제외*/ %YEARLY(_PRE0); DATA TB.LTC_PRE0_2B; SET LTC_1-LTC_4; RUN;


/****** (3) 장기요양보험 판정자 ******/
%MACRO YEARLY(PRE);
%DO i=1 %TO 4; %LET AGE_RANGE = %SCAN(&AGE_COND., &i, "/");
	%DO YEAR=2008 %TO 2020; 
		%DO YR=2008 %TO 2020;
		PROC SQL; CREATE TABLE RCGT_&YEAR._&YR. AS
		SELECT DISTINCT APLY_YR, COUNT(DISTINCT INDI_DSCM_NO) AS APLY_&YEAR. FROM DB.TARGET_LTC_TBNYBASE&PRE.  
		WHERE  &AGE_RANGE. C_DATE<=APLY_YMD AND  C_YEAR=&YEAR. AND APLY_YR=&YR. AND GJU_RCGT_GRADE_CD IN ('1','2','3','4','5','6','A','B','C')
		GROUP BY C_YEAR ; QUIT;
		%END; 
	DATA RCGT_&YEAR.; SET RCGT_&YEAR._2008-RCGT_&YEAR._2020;RUN;
	%END; 
DATA RCGT_&i.; MERGE RCGT_2008-RCGT_2020; BY APLY_YR; RUN;
%END;
%MEND YEARLY; 
/*전체 대상자*/ %YEARLY(); DATA TB.LTC_3; SET RCGT_1-RCGT_4; RUN;
/*타암기진단자 제외*/ %YEARLY(_PRE0); DATA TB.LTC_PRE0_3; SET RCGT_1-RCGT_4; RUN;


/****** (3)(A) 장기요양보험 판정횟수 ******/
%MACRO YEARLY(PRE);
%DO i=1 %TO 4; %LET AGE_RANGE = %SCAN(&AGE_COND., &i, "/");
	%DO YEAR=2008 %TO 2020; 
		%DO YR=2008 %TO 2020;
		PROC SQL; CREATE TABLE RCGT_&YEAR._&YR. AS
		SELECT DISTINCT APLY_YR, COUNT(INDI_DSCM_NO) AS APLY_&YEAR. FROM DB.TARGET_LTC_TBNYBASE&PRE.  
		WHERE  &AGE_RANGE. C_DATE<=APLY_YMD AND  C_YEAR=&YEAR. AND APLY_YR=&YR. AND GJU_RCGT_GRADE_CD IN ('1','2','3','4','5','6','A','B','C')
		GROUP BY C_YEAR ; QUIT;
		%END; 
	DATA RCGT_&YEAR.; SET RCGT_&YEAR._2008-RCGT_&YEAR._2020;RUN;
	%END; 
DATA RCGT_&i.; MERGE RCGT_2008-RCGT_2020; BY APLY_YR; RUN;
%END;
%MEND YEARLY; 
/*전체 대상자*/ %YEARLY(); DATA TB.LTC_3A; SET RCGT_1-RCGT_4; RUN;
/*타암기진단자 제외*/ %YEARLY(_PRE0); DATA TB.LTC_PRE0_3A; SET RCGT_1-RCGT_4; RUN;


/****** (4) 장기요양보험 인정자 ******/
%MACRO YEARLY(PRE);
%DO i=1 %TO 4; %LET AGE_RANGE = %SCAN(&AGE_COND., &i, "/");
	%DO YEAR=2008 %TO 2020; 
		%DO YR=2008 %TO 2020;
		PROC SQL; CREATE TABLE RCGT_&YEAR._&YR. AS
		SELECT DISTINCT APLY_YR, COUNT(DISTINCT INDI_DSCM_NO) AS APLY_&YEAR. FROM DB.TARGET_LTC_TBNYBASE&PRE.  
		WHERE  &AGE_RANGE. C_DATE<=APLY_YMD AND  C_YEAR=&YEAR. AND APLY_YR=&YR. AND GJU_RCGT_GRADE_CD IN ('1','2','3','4','5','6')
		GROUP BY C_YEAR ; QUIT;
		%END; 
	DATA RCGT_&YEAR.; SET RCGT_&YEAR._2008-RCGT_&YEAR._2020;RUN;
	%END; 
DATA RCGT_&i.; MERGE RCGT_2008-RCGT_2020; BY APLY_YR; RUN;
%END;
%MEND YEARLY; 
/*전체 대상자*/ %YEARLY(); DATA TB.LTC_4; SET RCGT_1-RCGT_4; RUN;
/*타암기진단자 제외*/ %YEARLY(_PRE0); DATA TB.LTC_PRE0_4; SET RCGT_1-RCGT_4; RUN;


/****** (4)(A) 장기요양보험 인정자 (인정횟수) ******/
%MACRO YEARLY(PRE);
%DO i=1 %TO 4; %LET AGE_RANGE = %SCAN(&AGE_COND., &i, "/");
	%DO YEAR=2008 %TO 2020; 
		%DO YR=2008 %TO 2020;
		PROC SQL; CREATE TABLE RCGT_&YEAR._&YR. AS
		SELECT DISTINCT APLY_YR, COUNT(INDI_DSCM_NO) AS APLY_&YEAR. FROM DB.TARGET_LTC_TBNYBASE&PRE.  
		WHERE  &AGE_RANGE. C_DATE<=APLY_YMD AND  C_YEAR=&YEAR. AND APLY_YR=&YR. AND GJU_RCGT_GRADE_CD IN ('1','2','3','4','5','6')
		GROUP BY C_YEAR ; QUIT;
		%END; 
	DATA RCGT_&YEAR.; SET RCGT_&YEAR._2008-RCGT_&YEAR._2020;RUN;
	%END; 
DATA RCGT_&i.; MERGE RCGT_2008-RCGT_2020; BY APLY_YR; RUN;
%END;
%MEND YEARLY; 
/*전체 대상자*/ %YEARLY(); DATA TB.LTC_4A; SET RCGT_1-RCGT_4; RUN;
/*타암기진단자 제외*/ %YEARLY(_PRE0); DATA TB.LTC_PRE0_4A; SET RCGT_1-RCGT_4; RUN;


/****** (4)(B) 장기요양보험 인정자 인정등급 ******/
/*4.26 상희t 버전에서 DISTINCT 없는데 왜 이렇게 계산하는거?*/
/*TABLE FORMAT*/
PROC SQL; CREATE TABLE FORMAT AS SELECT GJU_RCGT_GRADE_CD, APLY_YR 
FROM (SELECT DISTINCT APLY_YR, 1 AS TMP FROM DB.TARGET_LTC_TBNYBASE WHERE APLY_YR ^=. AND APLY_YR>=2008 AND APLY_YR<=2020 )AS A 
LEFT JOIN ( SELECT DISTINCT GJU_RCGT_GRADE_CD, 1 AS TMP  FROM DB.TARGET_LTC_TBNYBASE WHERE GJU_RCGT_GRADE_CD IN ('1','2','3','4','5','6')) AS B 
ON A.TMP=B.TMP ORDER BY GJU_RCGT_GRADE_CD, APLY_YR ; QUIT;

%MACRO YEARLY(PRE);
%DO i=1 %TO 4; %LET AGE_RANGE = %SCAN(&AGE_COND., &i, "/");
	%DO YEAR=2008 %TO 2020; 
		%DO YR=2008 %TO 2020;
		PROC SQL; CREATE TABLE RCGT_&YEAR._&YR. AS
		SELECT DISTINCT GJU_RCGT_GRADE_CD, APLY_YR, COUNT(/*DISTINCT*/INDI_DSCM_NO) AS APLY_&YEAR. FROM DB.TARGET_LTC_TBNYBASE&PRE.  
		WHERE  &AGE_RANGE. C_DATE<=APLY_YMD AND  C_YEAR=&YEAR. AND APLY_YR=&YR. AND GJU_RCGT_GRADE_CD IN ('1','2','3','4','5','6')
		GROUP BY GJU_RCGT_GRADE_CD, APLY_YR ; QUIT;
		%END; 
	DATA RCGT_&YEAR.; SET RCGT_&YEAR._2008-RCGT_&YEAR._2020;RUN;
	%END; 
DATA RCGT_&i.; MERGE RCGT_2008-RCGT_2020; BY APLY_YR; RUN;
PROC SQL; CREATE TABLE RCGT_LTC_&i. AS 
SELECT A.*, B.APLY_2008, B.APLY_2009, B.APLY_2010, B.APLY_2011, B.APLY_2012, B.APLY_2013, B.APLY_2014, B.APLY_2015, B.APLY_2016, B.APLY_2017, B.APLY_2018, B.APLY_2019, B.APLY_2020
FROM FORMAT AS A LEFT JOIN RCGT_&i. AS B ON A.GJU_RCGT_GRADE_CD=B.GJU_RCGT_GRADE_CD AND A.APLY_YR=B.APLY_YR; QUIT;
%END;
%MEND YEARLY; 
/*전체 대상자*/ %YEARLY(); DATA TB.LTC_4B; SET  RCGT_LTC_1-RCGT_LTC_4; RUN;
/*타암기진단자 제외*/ %YEARLY(_PRE0); DATA TB.LTC_PRE0_4B; SET  RCGT_LTC_1-RCGT_LTC_4; RUN;


/*요건 무슨표인지 모르겟오*/
PROC FREQ DATA=DB.TARGET_LTC_TBNYBASE; TABLE GJU_RCGT_GRADE_CD;
WHERE C_DATE<=APLY_YMD AND C_YEAR=2008 AND SUBSTR(APLY_YM,1,4)="2008" AND C_AGE>=85;
RUN;


/****** (4)(C,D) 장기요양보험 인정자 인정점수 ******/

PROC UNIVARIATE DATA=DB.TARGET_LTC_TBNYBASE NORMAL;
VAR 
RCG_RCGT_SCOR  /*인정조사 인정점수*/ 
EVRDY_LIFE_ARFF_SCOR  /*(1) 일상생활 환산점수*/ 
PCT_ARFF_SCOR  /*(2) 인지환산점수*/ 
BHVR_ARFF_SCOR  /*(3) 행동환산점수*/ 
TNDNC_ARFF_SCOR  /*(4) 간호환산점수*/ 
REHBT_ARFF_SCOR  /*(5) 재활환산점수*/ ; 
WHERE GJU_RCGT_GRADE_CD IN ('1','2','3','4','5','6');
;RUN;

PROC UNIVARIATE DATA=DB.TARGET_LTC_TBNYBASE NORMAL;
VAR 
RCG_RCGT_SCOR  /*인정조사 인정점수*/ 
EVRDY_LIFE_ARFF_SCOR  /*(1) 일상생활 환산점수*/ 
PCT_ARFF_SCOR  /*(2) 인지환산점수*/ 
BHVR_ARFF_SCOR  /*(3) 행동환산점수*/ 
TNDNC_ARFF_SCOR  /*(4) 간호환산점수*/ 
REHBT_ARFF_SCOR  /*(5) 재활환산점수*/ 
; WHERE GJU_RCGT_GRADE_CD IN ('A','B','C');
;RUN;


/*4(C) : 1~6등급*/
%MACRO YEARLY(PRE);
%DO i=1 %TO 4; %LET AGE_RANGE = %SCAN(&AGE_COND., &i, "/");
	%DO j=1 %TO 6; %LET SCOR = %SCAN(RCG_RCGT_SCOR/EVRDY_LIFE_ARFF_SCOR/PCT_ARFF_SCOR/BHVR_ARFF_SCOR/TNDNC_ARFF_SCOR/REHBT_ARFF_SCOR, &j, "/");
		%DO YEAR=2008 %TO 2020;  
			%DO YR=2008 %TO 2020;
			PROC SQL; CREATE TABLE RCGT_&YEAR._&YR. AS
			SELECT  /*C_YEAR,*/ APLY_YR,
			MEAN( &SCOR. ) AS /*&SCOR._*/MEAN_&YEAR, STD( &SCOR.) AS /*&SCOR._*/SD_&YEAR
			FROM DB.TARGET_LTC_TBNYBASE   
			WHERE &AGE_RANGE. C_DATE<=APLY_YMD AND  C_YEAR=&YEAR. AND APLY_YR=&YR AND GJU_RCGT_GRADE_CD IN ('1','2','3','4','5','6')
			GROUP BY C_YEAR,APLY_YR ; QUIT;
			%END; 
		DATA RCGT_&YEAR.; SET RCGT_&YEAR._2008-RCGT_&YEAR._2020;  RUN;
		%END; 
	DATA RCGT_SCOR&j.; MERGE RCGT_2008-RCGT_2020; BY APLY_YR; RUN;
	DATA RCGT_SCOR&j.; SET RCGT_SCOR&j.; SCORE_NO=&j.; RUN;
	%END;
DATA RCGT_LTC_&i.; SET RCGT_SCOR1-RCGT_SCOR6; RUN;
%END;
%MEND YEARLY; 
/*전체 대상자*/ %YEARLY(); DATA TB.LTC_4C; SET  RCGT_LTC_1-RCGT_LTC_4; RUN;
/*타암기진단자 제외*/ %YEARLY(_PRE0); DATA TB.LTC_PRE0_4C; SET  RCGT_LTC_1-RCGT_LTC_4; RUN;


/*4(D) : ABC*/
%MACRO YEARLY(PRE);
%DO i=1 %TO 4; %LET AGE_RANGE = %SCAN(&AGE_COND., &i, "/");
	%DO j=1 %TO 6; %LET SCOR = %SCAN(RCG_RCGT_SCOR/EVRDY_LIFE_ARFF_SCOR/PCT_ARFF_SCOR/BHVR_ARFF_SCOR/TNDNC_ARFF_SCOR/REHBT_ARFF_SCOR, &j, "/");
		%DO YEAR=2008 %TO 2020;  
			%DO YR=2008 %TO 2020;
			PROC SQL; CREATE TABLE RCGT_&YEAR._&YR. AS
			SELECT  /*C_YEAR,*/ APLY_YR,
			MEAN( &SCOR. ) AS /*&SCOR._*/MEAN_&YEAR, STD( &SCOR.) AS /*&SCOR._*/SD_&YEAR
			FROM DB.TARGET_LTC_TBNYBASE   
			WHERE &AGE_RANGE. C_DATE<=APLY_YMD AND  C_YEAR=&YEAR. AND APLY_YR=&YR AND GJU_RCGT_GRADE_CD IN ('A','B','C')
			GROUP BY C_YEAR,APLY_YR ; QUIT;
			%END; 
		DATA RCGT_&YEAR.; SET RCGT_&YEAR._2008-RCGT_&YEAR._2020;  RUN;
		%END; 
	DATA RCGT_SCOR&j.; MERGE RCGT_2008-RCGT_2020; BY APLY_YR; RUN;
	DATA RCGT_SCOR&j.; SET RCGT_SCOR&j.; SCORE_NO=&j.; RUN;
	%END;
DATA RCGT_LTC_&i.; SET RCGT_SCOR1-RCGT_SCOR6; RUN;
%END;
%MEND YEARLY; 
/*전체 대상자*/ %YEARLY(); DATA TB.LTC_4D; SET  RCGT_LTC_1-RCGT_LTC_4; RUN;
/*타암기진단자 제외*/ %YEARLY(_PRE0); DATA TB.LTC_PRE0_4D; SET  RCGT_LTC_1-RCGT_LTC_4; RUN;


/****** 장기요양보험 수급자 ******/
PROC SQL; CREATE TABLE DB.TARGET_LTC_PAY AS
SELECT DISTINCT A.*, B.*,
INTNX('MONTH',INPUT(B.PAY_YYYYMM,YYMMN6.),1)-1 AS PAY_YMD,
INTNX('MONTH',INPUT(B.PAY_YYYYMM,YYMMN6.),0) AS PAY_YMD2
FROM DB.TARGET_LTC_TBNYBASE AS A
LEFT JOIN RAW.RVSN_HFVT_TBNYPAY AS B
ON A.INDI_SEQ=B.INDI_SEQ
; QUIT;
DATA DB.TARGET_LTC_PAY; SET DB.TARGET_LTC_PAY; FORMAT PAY_YMD YYMMDD10. PAY_YMD2 YYMMDD10.;RUN;

/****PRE_C = 0 (폐암 최초진단자)****/
PROC SQL; CREATE TABLE DB.TARGET_LTC_PAY_PRE0 AS
SELECT DISTINCT A.*, B.*,
INTNX('MONTH',INPUT(B.PAY_YYYYMM,YYMMN6.),1)-1 AS PAY_YMD,
INTNX('MONTH',INPUT(B.PAY_YYYYMM,YYMMN6.),0) AS PAY_YMD2
FROM DB.TARGET_LTC_TBNYBASE_PRE0 AS A
LEFT JOIN RAW.RVSN_HFVT_TBNYPAY AS B
ON A.INDI_SEQ=B.INDI_SEQ
; QUIT;
DATA DB.TARGET_LTC_PAY_PRE0; SET DB.TARGET_LTC_PAY_PRE0; FORMAT PAY_YMD YYMMDD10. PAY_YMD2 YYMMDD10.;RUN;

/*5. 장기요양보험 수급자(PAY_YYYYMM^=" "), 수급율(=수급자/인정자)*/
%MACRO YEARLY(PRE);
%DO i=1 %TO 4; %LET AGE_RANGE = %SCAN(&AGE_COND., &i, "/");
	%DO YEAR=2008 %TO 2020; 
		%DO YR=2008 %TO 2020;
		PROC SQL; CREATE TABLE PAY_&YEAR._&YR. AS
		SELECT DISTINCT APLY_YR, COUNT(DISTINCT INDI_DSCM_NO) AS APLY_&YEAR. FROM DB.TARGET_LTC_PAY&PRE.  
		WHERE  &AGE_RANGE. C_DATE<=APLY_YMD AND  C_YEAR=&YEAR. AND APLY_YR=&YR. AND PAY_YYYYMM^=" " 
		GROUP BY C_YEAR ; QUIT;
		%END; 
	DATA PAY_&YEAR.; SET PAY_&YEAR._2008-PAY_&YEAR._2020;RUN;
	%END; 
DATA PAY_&i.; MERGE PAY_2008-PAY_2020; BY APLY_YR; RUN;
%END;
%MEND YEARLY; 
/*전체 대상자*/ %YEARLY(); DATA TB.LTC_5; SET  PAY_1-PAY_4; RUN;
/*타암기진단자 제외*/ %YEARLY(_PRE0); DATA TB.LTC_PRE0_5; SET  PAY_1-PAY_4; RUN;


/****** (5)(A) 장기요양보험 수급자 (시설)******/
%MACRO YEARLY(PRE);
%DO i=1 %TO 4; %LET AGE_RANGE = %SCAN(&AGE_COND., &i, "/");
	%DO YEAR=2008 %TO 2020; 
		%DO YR=2008 %TO 2020;
		PROC SQL; CREATE TABLE PAY_&YEAR._&YR. AS
		SELECT DISTINCT APLY_YR, COUNT(DISTINCT INDI_DSCM_NO) AS APLY_&YEAR. FROM DB.TARGET_LTC_PAY&PRE.  
		WHERE  &AGE_RANGE. C_DATE<=APLY_YMD AND  C_YEAR=&YEAR. AND APLY_YR=&YR. AND PAY_YYYYMM^=" " AND LTCP_TYPE_CD='1'
		GROUP BY C_YEAR ; QUIT;
		%END; 
	DATA PAY_&YEAR.; SET PAY_&YEAR._2008-PAY_&YEAR._2020;RUN;
	%END; 
DATA PAY_&i.; MERGE PAY_2008-PAY_2020; BY APLY_YR; RUN;
%END;
%MEND YEARLY; 
/*전체 대상자*/ %YEARLY(); DATA TB.LTC_5A; SET  PAY_1-PAY_4; RUN;
/*타암기진단자 제외*/ %YEARLY(_PRE0); DATA TB.LTC_PRE0_5A; SET  PAY_1-PAY_4; RUN;


/****** (5)(B) 장기요양보험 수급자 (재가)******/
%MACRO YEARLY(PRE);
%DO i=1 %TO 4; %LET AGE_RANGE = %SCAN(&AGE_COND., &i, "/");
	%DO YEAR=2008 %TO 2020; 
		%DO YR=2008 %TO 2020;
		PROC SQL; CREATE TABLE PAY_&YEAR._&YR. AS
		SELECT DISTINCT APLY_YR, COUNT(DISTINCT INDI_DSCM_NO) AS APLY_&YEAR. FROM DB.TARGET_LTC_PAY&PRE.  
		WHERE  &AGE_RANGE. C_DATE<=APLY_YMD AND  C_YEAR=&YEAR. AND APLY_YR=&YR. AND PAY_YYYYMM^=" " AND LTCP_TYPE_CD='2'
		GROUP BY C_YEAR ; QUIT;
		%END; 
	DATA PAY_&YEAR.; SET PAY_&YEAR._2008-PAY_&YEAR._2020;RUN;
	%END; 
DATA PAY_&i.; MERGE PAY_2008-PAY_2020; BY APLY_YR; RUN;
%END;
%MEND YEARLY; 
/*전체 대상자*/ %YEARLY(); DATA TB.LTC_5B; SET  PAY_1-PAY_4; RUN;
/*타암기진단자 제외*/ %YEARLY(_PRE0); DATA TB.LTC_PRE0_5B; SET  PAY_1-PAY_4; RUN;

/*전체대상 : */ %YEARLY(); %YEARLY(_PRE0); 
DATA PAY_LTC; SET PAY_1-PAY_4; RUN;
