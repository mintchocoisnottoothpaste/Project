libname raw "/userdata20/rroom029/data_source/user_data";/*raw data*/
/*libname mywork "/userdata20/rroom029/mywork"; work, 추가됨*/
libname db "/userdata20/rroom029/data_out/data_store"; 
libname db_out "/userdata20/rroom029/data_out/data_out";

/*libname raw2 "/userdata06/room268/data_source/user_data/30T"; 데이터 오류로 2021/12/06 재추출*/

PROC SQL; CREATE TABLE DB.TARGET_ID_PRE0 AS SELECT * FROM DB.TARGET_ID WHERE PRE_C=0; QUIT;

/* [1]  DB.TARGET_T20_&YEAR, DB.TARGET_T30_&YEAR, DB.TARGET_T40_&YEAR,*/
%MACRO YEARLY; %DO YEAR=2002 %TO 2020;

/*대상자 자격DB 전연도의 자격정보를 붙인 TABLE
PROC SQL; CREATE TABLE DB.TARGET_BFC_&YEAR. AS
SELECT DISTINCT B.*
FROM DB.TARGET_ID AS A
INNER JOIN RAW.BFC_&YEAR. AS B
ON A.INDI_DSCM_NO=B.INDI_DSCM_NO
; QUIT;*/

%MACRO MONTHLY(STRT, STP); 

%DO YM=&STRT. %TO &STP.;

/*대상자 20테이블DB*/
PROC SQL; CREATE TABLE TARGET_T20_&YM. AS
SELECT DISTINCT B.*
FROM DB.TARGET_ID_PRE0 AS A
INNER JOIN RAW.T20_&YM. AS B
ON A.INDI_DSCM_NO=B.INDI_DSCM_NO
; QUIT;

PROC SQL; CREATE TABLE TARGET_CMN_&YM. AS SELECT DISTINCT INDI_DSCM_NO, CMN_KEY, MDCARE_STRT_DT FROM TARGET_T20_&YM.; QUIT;

/*대상자 30테이블DB*/
PROC SQL; CREATE TABLE TARGET_T30_&YM. AS
SELECT DISTINCT A.*, B.*
FROM TARGET_CMN_&YM. AS A
INNER JOIN RAW.T30_&YM. AS B
ON A.CMN_KEY=B.CMN_KEY
; QUIT;

/*대상자 40테이블DB
PROC SQL; CREATE TABLE TARGET_T40_&YM. AS
SELECT DISTINCT A.*, B.*
FROM TARGET_CMN_&YM. AS A
INNER JOIN RAW.T40_&YM. AS B
ON A.CMN_KEY=B.CMN_KEY
; QUIT;*/

%END; 
%MEND MONTHLY;  

%MONTHLY(STRT=&YEAR.01, STP=&YEAR.12);

DATA DB.TARGET_T20_&YEAR.; SET TARGET_T20_&YEAR.01-TARGET_T20_&YEAR.12; RUN;
DATA DB.TARGET_T30_&YEAR.; SET TARGET_T30_&YEAR.01-TARGET_T30_&YEAR.12; RUN;
/*DATA DB.TARGET_T40_&YEAR.; SET TARGET_T40_&YEAR.01-TARGET_T40_&YEAR.12; RUN;*/

%END; 
%MEND YEARLY;%YEARLY;


/* [2] DB.TARGET_T30_LTC_&YEAR*/

%MACRO YEARLY; %DO YEAR=2008 %TO 2020;
DATA DB.TARGET_T30_LTC_&YEAR.; SET DB.TARGET_T30_&YEAR.;

/*******************************************************************************************************************************/
FORMAT CTx $30.;

/*1. Cytotoxic Chemotherapy*/
IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("4528") THEN DO; CTx="Belotecan" ; CT_CYTYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1227") THEN DO; CTx="Capecitabine";CT_CYTYN=1; END;/*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1237") THEN DO; CTx="Carboplatin" ;CT_CYTYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1345") THEN DO; CTx="Cisplatin" ;CT_CYTYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1390") THEN DO; CTx="Cyclophosphamide" ; CT_CYTYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1483") THEN DO; CTx="Docetaxel" ; CT_CYTYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1494") THEN DO; CTx="Doxorubicin" ; CT_CYTYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1571") THEN DO; CTx="Etoposide" ; CT_CYTYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1649") THEN DO; CTx="Gemcitabine" ; CT_CYTYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1733") THEN DO; CTx="Ifosfamide" ; CT_CYTYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1774", "6660") THEN DO; CTx="Irinotecan" ; CT_CYTYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1921") THEN DO; CTx="Methotrexate" ; CT_CYTYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("2078","5037") THEN DO; CTx="Paclitaxel" ; CT_CYTYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("4812") THEN DO; CTx="Pemetrexed" ; CT_CYTYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("4524","4525") THEN DO; CTx="Tegafur/Gemeracil/Oteracil" ; CT_CYTYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("2419") THEN DO; CTx="Topotecan" ; CT_CYTYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("2480") THEN DO; CTx="Vincristine" ; CT_CYTYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("2482") THEN DO; CTx="Vinorelbine" ; CT_CYTYN=1; END;
/*2. Targeted Therapy*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6261") THEN DO; CTx="Afatinib"; CT_TARYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6562") THEN DO; CTx="Alectinib"; CT_TARYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("5543") THEN DO; CTx="Bevacizumab"; CT_TARYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("4528") THEN DO; CTx="Belotecan"; CT_TARYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("4633") THEN DO; CTx="Bortezomib"; CT_TARYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6757") THEN DO; CTx="Brigatinib"; CT_TARYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("5564") THEN DO; CTx="Cetuximab"; CT_TARYN=1; END;/*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6344") THEN DO; CTx="Ceritinib"; CT_TARYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6175") THEN DO; CTx="Crizotinib"; CT_TARYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6631") THEN DO; CTx="Dabrafenib"; CT_TARYN=1; END;/*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6916") THEN DO; CTx="Dacomitinib"; CT_TARYN=1; END;/*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("4774") THEN DO; CTx="Erlotinib"; CT_TARYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("4530") THEN DO; CTx="Gefitinib"; CT_TARYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6951") THEN DO; CTx="Lazertinib"; CT_TARYN=1; END;/*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6997") THEN DO; CTx="Lorlatinib"; CT_TARYN=1; END;/*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6525") THEN DO; CTx="Osimertinib"; CT_TARYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6524") THEN DO; CTx="Olmutinib"; CT_TARYN=1; END;/*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("4880") THEN DO; CTx="Sorafenib"; CT_TARYN=1; END;/*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("4877") THEN DO; CTx="Sunitinib"; CT_TARYN=1; END;/*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6454") THEN DO; CTx="Trametinib"; CT_TARYN=1; END;/*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("2428") THEN DO; CTx="Trastuzumab"; CT_TARYN=1; END;/*신규*/
/*3. Immunotherapy*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6577") THEN DO; CTx="Atezolizumab" ; CT_IMUYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6788") THEN DO; CTx="Avelumab" ; CT_IMUYN=1; END;/*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6769") THEN DO; CTx="Durvalumab" ; CT_IMUYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6384") THEN DO; CTx="Nivolumab" ; CT_IMUYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6390") THEN DO; CTx="Pembrolizumab" ; CT_IMUYN=1; END;       /*"Tislelizumab"신규*/
/*4. Other(Unknown)*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6866") THEN DO; CTx="Abemaciclib" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6239") THEN DO; CTx="ABN401" ; CT_OTHYN=1; END;/*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6588") THEN DO; CTx="Aflibercept" ; CT_OTHYN=1; END;/*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1067") THEN DO; CTx="Amifostine" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("7074") THEN DO; CTx="Amivantamab" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6210") THEN DO; CTx="Axitinib" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("4843") THEN DO; CTx="Azacitidine" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6146") THEN DO; CTx="Bendamustine" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1172") THEN DO; CTx="Bicalutamide" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1180") THEN DO; CTx="Bleomycin" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("4633") THEN DO; CTx="Bortezomib" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1206") THEN DO; CTx="Busulfan" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6664") THEN DO; CTx="Cabozantinib" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6484") THEN DO; CTx="Canakinumab" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("7038") THEN DO; CTx="Capmatinib" ; CT_OTHYN=1; END; /*이동*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6478") THEN DO; CTx="Carfilzomib" ; CT_OTHYN=1; END; /*이동*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1396") THEN DO; CTx="Cytarabine" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1399") THEN DO; CTx="Dacarbazine" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1401") THEN DO; CTx="Dactinomycin" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("4933") THEN DO; CTx="Dasatinib" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1406") THEN DO; CTx="Daunorubicin" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("4956") THEN DO; CTx="Decitabine" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1527") THEN DO; CTx="Epirubicin" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1614","3821","6373") THEN DO; CTx="Fluorouracil" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1672") THEN DO; CTx="Goserelin" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6281") THEN DO; CTx="Ibrutinib" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("4127") THEN DO; CTx="Imatinib" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6452") THEN DO; CTx="Lenvatinib" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1964") THEN DO; CTx="Mitomycin" ; CT_OTHYN=1; END; /*이동 C*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("5626") THEN DO; CTx="Nilotinib" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6561") THEN DO; CTx="Nintedanib" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6589") THEN DO; CTx="Ociperlimab" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6435") THEN DO; CTx="Olaparib" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1143") THEN DO; CTx="Oncotice" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("2058") THEN DO; CTx="Oxaliplain" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6552") THEN DO; CTx="Palbociclib" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6118") THEN DO; CTx="Pazopanib" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6246") THEN DO; CTx="Pertuzumab" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6248") THEN DO; CTx="Regorafenib" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("4226") THEN DO; CTx="Rituximab" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("7079") THEN DO; CTx="Selpercatinib" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("2345") THEN DO; CTx="Tamoxifen" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6241") THEN DO; CTx="Vandetanib" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("2478") THEN DO; CTx="Vinblastine" ; CT_OTHYN=1; END;/*이동*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6181") THEN DO; CTx="Vorinostat" ; CT_OTHYN=1; END;/*이동*/

FORMAT CTx_CODE $10.;
IF CTx^=" " THEN CTx_CODE=SUBSTR(MCARE_DIV_CD_ADJ,1,4);

/*******************************************************************************************************************************/
FORMAT OP $200.;

/*(1) 기관, 기관지 및 폐*/
IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1300","O1301") THEN OP="01. Tracheostomy";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1303","O1306") THEN OP="02. Cricothyroidotomy";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1305") THEN OP="03. Mediastinal Tracheostomy";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1311","O1312","O1313","O1314","O1317") THEN OP="04. Exicision of Tracheal or Bronchial Tumor";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1315","O1316") THEN OP="05. Endoscopic Excision of Tracheal or Bronchial Tumor";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1318") THEN OP="06. Endoscopic Cryotherapy (Tracheal, Bronchial, Lung Tomor)";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1321","O1326") THEN OP="07. Tracheal or Bronchial Repair";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1332","O1333") THEN OP="08. Endoscopic Removal of Tracheal or Broncial Foreign Body";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1336") THEN OP="09. Removal of Tracheal or Bronchial Foreign Body by Thoracotomy";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1341","O1342","O1343","O1344","O1345") THEN OP="10. Surgery fro Tracheal or Bronchial Stenosis";

ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1346","O1347","O1348") THEN OP="11. Endoscopic Dilatation of Tracheal or Broncial Stenosis";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1349") THEN OP="12. Tracheoesophageal Shunt Operation (Amatsu Method)";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1351","O1352","O1353","1354") THEN OP="13. Repair of Bronchial Fistula";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1360") THEN OP="14. Exploratory Thoracotomy";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1371","O1372") THEN OP="15. Revision of Tracheostoma";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1380") THEN OP="16. Incision of lUng Abscess";
/*폐쐐기절제술*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1401","O1402","O1403","O1404","O1405") THEN OP="17. Wedge Resection of Lung (+O1402)";
/*폐구역절제술*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1410") THEN OP="18. Segmentectomy of Lung";
/*폐엽절제술*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1421","O1422","O1423","O1424") THEN OP="19. Lobectomy of Lung";
/*폐전적출술*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1431","O1432") THEN OP="20. Pneumonectomy";

ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1440") THEN OP="21. Repair of Lung";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1450") THEN OP="22. Pleural Decortication";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1460") THEN OP="23. Apocolysis, Pleurolysis";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1471") THEN OP="24. Cryosurgical Ablation of Lung Cancer";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("OZ201") THEN OP="25. Bronchoscopic Lung Volume Reduction-Insection of Unilateral Endobronchial Valve";

/*(2) 흉곽*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1480") THEN OP="26. Pleurodesis";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1481","O1482","O1483","O1484","O1485","O1486") THEN OP="27. Resection of Chest Wall Tumor (+O1481,O1482)";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1491","O1492") THEN OP="28. Thoracoplasty";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1502") THEN OP="29. Irrigation of Empyema Cavity";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1501") THEN OP="30. Thorachoperitoneal Shunt";

ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1510","O1520") THEN OP="31. Thoracostomy";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1521") THEN OP="32. Pericardiaolysis with Redo-sternotomy";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1530") THEN OP="33. Reconstructive Repair of Pectus Excavatum (Ravitch Procedure), Carinatum";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1531","O1532") THEN OP="34. Removal of Chest Wall Foreign Body";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1540") THEN OP="35. Pleurectomy";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1541") THEN OP="36. Open Reduction of Sternum Facture";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1550") THEN OP="37. Schiodeia Operation";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1561") THEN OP="38. Ostectomy of Sternum";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1562") THEN OP="39. Sternum Resection and Reconstruction";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1570") THEN OP="40. Resection of Bullae";

ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1571") THEN OP="41. Closure of Sternotomy Separation";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1572") THEN OP="42. Radical Resection of Malignant Sternal Tumor";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1581","O1586") THEN OP="43. Mediastinostomy";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1591","O1592","O1593") THEN OP="44. Excision of Mediastinal Tumor";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1596","O1597") THEN OP="45. Mediasternal Lymph Node Dissection";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1600") THEN OP="46. Repair od Diaphragm";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1605") THEN OP="47. Excision of Diaphragmatic Tumor and Reconstruction";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1610") THEN OP="48. Repair of Diaphragmatic Hernia";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("O1621") THEN OP="49. Suture and Ligation of Thoracic Duct";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("OX181") THEN OP="50. Cryoanalgesia in Thoracotomy";

FORMAT OP_CODE $10.;
IF OP^=" " THEN OP_CODE=SUBSTR(MCARE_DIV_CD_ADJ,1,5);

/*******************************************************************************************************************************/

/*(1) 방사선 모의치료 및 치료계획*/
FORMAT RT $200.;

IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HD010","HD410","HD011","HD411","HD012","HD412","HD013","HD413","HD014","HD414",
														"HD015","HD415","HD016","HD416","HD017","HD018","HD418","HD019","HD419","HD020","HD420","HD041","HD441") 
														THEN RT="01. For Teletherapy";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HD021","HD022","HD023") THEN RT="02. For Brachytherapy";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HD031","HD032","HD033") THEN RT="03. Design and Construction of Therapeutic Devices";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HD040") THEN RT="04. Iodine-125 Permanent Implant for Prostate Cancer";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HX401") THEN RT="05. Dosimetry";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HY402","HY404","HY405") THEN RT="06. Verification and Correction";

/*(2) 방사선 치료*/

IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HD051","HD054","HD052","HD055","HD053","HD056") THEN RT="07. Teletherapy";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HD057","HD058","HD059") THEN RT="08. Rotational Irradiation";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HD061") THEN RT="09. 3-Dimensional Conformal Therapy";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HD071","HD072","HD073") THEN RT="10. Unsealed Source";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HD080","HD081","HD082","HD083","HD084","HD085","HD086","HD087","HD088","HD089") THEN RT="11. Brachytherapy";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HD091","HD092") THEN RT="12. Total Body Inrradiation";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HD093") THEN RT="13. Total Skin Electron Beam Therapy";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HD110") THEN RT="14. Fractionated Stereotactic Radiotherapy";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HD111","HD112","HD211","HD212") THEN RT="15. Body Stereotactic Radiosurgery";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HD113","HD114","HD115","S4751") THEN RT="16. Cranical Sterotactic Radiosurgery (+S4751)";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HD121") THEN RT="17. Proton Therapy";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HZ271") THEN RT="18. Intensity Modulated Radiation Therapy";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HZ272") THEN RT="19. 방사선 온열치료 및 온열치료 계획";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HZ273") THEN RT="20. 중성자선 치료";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HZ274") THEN RT="21. 안구 내 종양 근접 방사선치료 및 계획";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HZ275") THEN RT="22. 양성자 치료 및 양성자 치료계획";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HD150") THEN RT="23. Iodine-125 Permanent Implant for Prostate Cancer";

ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HH121") THEN RT="24. 치료촬영1차";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HH122") THEN RT="25. 치료촬영2차";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HH137") THEN RT="26. 원격치료(4MV)";

FORMAT RT_CODE $10.;
IF RT^=" " THEN RT_CODE=SUBSTR(MCARE_DIV_CD_ADJ,1,4);

/*******************************************************************************************************************************/
/*요양병원 환자군 분류체계 및 일당정액 수가*/

FORMAT  LTC_ADJ $50.;

IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("A1100") THEN LTC_ADJ="01. 의료최고도 (입원)";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("A1900") THEN LTC_ADJ="02. 의료최고도 (외박)";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("A2100") THEN LTC_ADJ="03. 의료고도 (입원)";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("A2900") THEN LTC_ADJ="04. 의료고도 (외박)";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("A3000") THEN LTC_ADJ="05. 의료중도";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("A3100") THEN LTC_ADJ="06. 의료중도 (입원)";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("A3900") THEN LTC_ADJ="07. 의료중도 (외박)";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("A6100") THEN LTC_ADJ="08. 의료경도 (입원)";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("A6900") THEN LTC_ADJ="09. 의료경도 (외박)";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("A7100") THEN LTC_ADJ="10. 선택입원 (입원)";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("A7900") THEN LTC_ADJ="11. 선택입원 (외박)";

/*요양병원 정액 수가   ???*/

FORMAT T30_DATE yymmdd10.;
T30_DATE=INPUT(PUT(MDCARE_STRT_DT,8.),yymmdd8.);

;RUN;
%END; 
%MEND YEARLY;%YEARLY;

/* [3] DB.TARGET_T20_LTC_&YEAR. */
%MACRO YEARLY; %DO YEAR=2002 %TO 2020;
DATA DB.TARGET_T20_LTC_&YEAR. (DROP=TMP); SET DB.TARGET_T20_&YEAR.;

/*요양병원 환자군 분류체계 및 일당정액 수가*/

FORMAT  LTC_SYM $30.;

TMP=SUBSTRN(MDCARE_SYM,3,2);

IF TMP IN ("28") THEN LTC_SYM="요양기관_요양병원";

FORMAT T20_DATE yymmdd10.;
T20_DATE=INPUT(PUT(MDCARE_STRT_DT,8.),yymmdd8.);
;RUN;
%END; 
%MEND YEARLY;%YEARLY;

/* [4] DB.TARGET_DTH
내가 앞에서 MDCARE_STRT_DT를 지워서 없음. 왜필요해?
RENAME 부분 안 지워도 경고만 뜨고 오류나지 않아서 냅둠 */
DATA  DB.TARGET_DTH; SET  DB.TARGET_DTH;
FORMAT C_DATE yymmdd10.;
RENAME MDCARE_STRT_DT=C_DATE_CHAR;
RUN;


/* [5] : DB.TARGET_T20_LTC5YR_&YEAR. */
/*여기서도 이걸로 날짜 더해야 하지 않겠어? INTNX('MONTH',INPUT(B.APLY_YM,YYMMN6.),1)-1 AS APLY_YMD,*/
%MACRO YEARLY; %DO YEAR=2008 %TO 2020;

PROC SQL; CREATE TABLE DB.TARGET_T20_LTC5YR_&YEAR. AS
SELECT DISTINCT A.*, B.*
FROM DB.TARGET_DTH AS A
LEFT JOIN DB.TARGET_T20_LTC_&YEAR. AS B
ON A.INDI_DSCM_NO=B.INDI_DSCM_NO
WHERE  A.C_DATE <= B.T20_DATE AND B.T20_DATE <= A.C_DATE+(365*5)
; QUIT;

PROC SQL; CREATE TABLE DB.TARGET_T30_LTC5YR_&YEAR. AS
SELECT DISTINCT A.*, B.*
FROM DB.TARGET_DTH AS A
LEFT JOIN DB.TARGET_T30_LTC_&YEAR. AS B
ON A.INDI_DSCM_NO=B.INDI_DSCM_NO
WHERE  A.C_DATE <=B.T30_DATE AND B.T30_DATE<=A.C_DATE+(365*5)
; QUIT;

%END; 
%MEND YEARLY;%YEARLY;


/* [6] CTx별로 환자 몇 명인지!*/
/*DB.TARGET_T30_CT_&YEAR. 이런게 있어?*/
%MACRO YEARLY; %DO YEAR=2002 %TO 2020;
PROC SQL; CREATE TABLE CT_&YEAR AS
SELECT  CTx, COUNT(DISTINCT INDI_DSCM_NO) AS N_&YEAR.
FROM DB.TARGET_T30_CT_&YEAR. GROUP BY CTx; QUIT;
%END; 
%MEND YEARLY;%YEARLY;

/*얘네 안 씀*/
/* [7] : DB.TARGET_LTC_BASE, DB.TARGET_LTC_PAY*/
/*대상자 노인장기요양보험DB*/
/*PROC SQL; CREATE TABLE DB.TARGET_LTC_BASE AS
SELECT DISTINCT B.*
FROM DB.TARGET_ID AS A
INNER JOIN raw.RVSN_HFVT_TBNYBASE AS B
ON A.INDI_DSCM_NO=B.INDI_DSCM_NO
; QUIT;

PROC SQL; CREATE TABLE DB.TARGET_LTC_PAY AS
SELECT DISTINCT B.*
FROM DB.TARGET_ID AS A
INNER JOIN raw.RVSN_HFVT_TBNYPAY AS B
ON A.INDI_DSCM_NO=B.INDI_DSCM_NO
; QUIT;
*/

/****노인장기요양보험 신청&인정 비율(EXCEL)*****************************************************************************/
/*LTC_TABLES.SAS 파일*/


/**********************************5년 이내 정보 구축**********************************/

/*(0) 연구대상자 (n=209,184) 2008-2020 : DB.TARGET_DTH*/
/*(1) 장기요양 신청 : DB.TARGET_LTC_TBNYBASE*/

DATA  DB.TARGET_LTC_TBNYBASE; SET DB.TARGET_LTC_TBNYBASE; FORMAT C_DATE YYMMDD10. APLY_YMD YYMMDD10. APLY_YMD2 YYMMDD10.;RUN;

/*장기요양 보험 신청*/
/*APLY_YMD : 신청월의 말일, APLY_YMD2 : 신청월의 1일*/
/*진단연월의 다음해 동일월 신청건까지 1년 이내로 간주. 15년 4월에 진단받았으면, 16년 4월 신청건까지 1년이내로 보는 것*/
PROC SQL; CREATE TABLE LTC_APLY1 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT INDI_SEQ) AS APLY_1YR FROM DB.TARGET_LTC_TBNYBASE
WHERE C_DATE<=APLY_YMD AND APLY_YMD^=. AND APLY_YMD2<=(C_DATE+365)  GROUP BY INDI_DSCM_NO ; QUIT; /*29542*/
PROC SQL; CREATE TABLE LTC_APLY2 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT INDI_SEQ) AS APLY_2YR FROM DB.TARGET_LTC_TBNYBASE
WHERE C_DATE<=APLY_YMD AND APLY_YMD^=. AND (C_DATE+365)<APLY_YMD2 AND APLY_YMD2<=(C_DATE+365*2)  GROUP BY INDI_DSCM_NO ; QUIT; /*11210*/
PROC SQL; CREATE TABLE LTC_APLY3 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT INDI_SEQ) AS APLY_3YR FROM DB.TARGET_LTC_TBNYBASE
WHERE C_DATE<=APLY_YMD AND APLY_YMD^=. AND (C_DATE+365*2)<APLY_YMD2 AND APLY_YMD2<=(C_DATE+365*3)  GROUP BY INDI_DSCM_NO ; QUIT; /*6428*/
PROC SQL; CREATE TABLE LTC_APLY4 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT INDI_SEQ) AS APLY_4YR FROM DB.TARGET_LTC_TBNYBASE
WHERE C_DATE<=APLY_YMD AND APLY_YMD^=. AND (C_DATE+365*3)<APLY_YMD2 AND APLY_YMD2<=(C_DATE+365*4)  GROUP BY INDI_DSCM_NO ; QUIT; /*4483*/
PROC SQL; CREATE TABLE LTC_APLY5 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT INDI_SEQ) AS APLY_5YR FROM DB.TARGET_LTC_TBNYBASE
WHERE C_DATE<=APLY_YMD AND APLY_YMD^=. AND (C_DATE+365*4)<APLY_YMD2 AND APLY_YMD2<=(C_DATE+365*5)  GROUP BY INDI_DSCM_NO ; QUIT; /*3332*/

PROC SORT DATA=DB.TARGET_DTH;BY INDI_DSCM_NO;RUN;
DATA DB.LTC_ALPY; MERGE DB.TARGET_DTH (IN=A) LTC_APLY1-LTC_APLY5; BY INDI_DSCM_NO;IF A;RUN;
DATA DB.LTC_ALPY; SET  DB.LTC_ALPY;
IF APLY_1YR>=1 THEN APLY_1YR=1; ELSE APLY_1YR=0;
IF APLY_2YR>=1 THEN APLY_2YR=1; ELSE APLY_2YR=0;
IF APLY_3YR>=1 THEN APLY_3YR=1; ELSE APLY_3YR=0;
IF APLY_4YR>=1 THEN APLY_4YR=1; ELSE APLY_4YR=0;
IF APLY_5YR>=1 THEN APLY_5YR=1; ELSE APLY_5YR=0;
RUN;

/*장기요양 보험 판정*/
PROC SQL; CREATE TABLE LTC_JUDGE1 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT INDI_SEQ) AS JUDGE_1YR FROM DB.TARGET_LTC_TBNYBASE
WHERE C_DATE<=APLY_YMD AND APLY_YMD^=. AND APLY_YMD2<=(C_DATE+365) 
AND GJU_RCGT_GRADE_CD IN ('1','2','3','4','5','6','A','B','C') GROUP BY INDI_DSCM_NO ; QUIT; /*25880*/
PROC SQL; CREATE TABLE LTC_JUDGE2 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT INDI_SEQ) AS JUDGE_2YR FROM DB.TARGET_LTC_TBNYBASE
WHERE C_DATE<=APLY_YMD AND APLY_YMD^=. AND (C_DATE+365)<APLY_YMD2 AND APLY_YMD2<=(C_DATE+365*2) 
AND GJU_RCGT_GRADE_CD IN ('1','2','3','4','5','6','A','B','C') GROUP BY INDI_DSCM_NO ; QUIT; /*10325*/
PROC SQL; CREATE TABLE LTC_JUDGE3 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT INDI_SEQ) AS JUDGE_3YR FROM DB.TARGET_LTC_TBNYBASE
WHERE C_DATE<=APLY_YMD AND APLY_YMD^=. AND (C_DATE+365*2)<APLY_YMD2 AND APLY_YMD2<=(C_DATE+365*3) 
AND GJU_RCGT_GRADE_CD IN ('1','2','3','4','5','6','A','B','C') GROUP BY INDI_DSCM_NO ; QUIT; /*5937*/
PROC SQL; CREATE TABLE LTC_JUDGE4 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT INDI_SEQ) AS JUDGE_4YR FROM DB.TARGET_LTC_TBNYBASE
WHERE C_DATE<=APLY_YMD AND APLY_YMD^=. AND (C_DATE+365*3)<APLY_YMD2 AND APLY_YMD2<=(C_DATE+365*4)
AND GJU_RCGT_GRADE_CD IN ('1','2','3','4','5','6','A','B','C') GROUP BY INDI_DSCM_NO ; QUIT; /*4174*/
PROC SQL; CREATE TABLE LTC_JUDGE5 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT INDI_SEQ) AS JUDGE_5YR FROM DB.TARGET_LTC_TBNYBASE
WHERE C_DATE<=APLY_YMD AND APLY_YMD^=. AND (C_DATE+365*4)<APLY_YMD2 AND APLY_YMD2<=(C_DATE+365*5) 
AND GJU_RCGT_GRADE_CD IN ('1','2','3','4','5','6','A','B','C') GROUP BY INDI_DSCM_NO ; QUIT; /*3078*/

PROC SORT DATA=DB.LTC_ALPY;BY INDI_DSCM_NO;RUN;
DATA DB.LTC_JUDGE; MERGE DB.LTC_ALPY (IN=A) LTC_JUDGE1-LTC_JUDGE5;BY INDI_DSCM_NO;IF A;RUN;
DATA DB.LTC_JUDGE; SET  DB.LTC_JUDGE;
IF JUDGE_1YR>=1 THEN JUDGE_1YR=1; ELSE JUDGE_1YR=0;
IF JUDGE_2YR>=1 THEN JUDGE_2YR=1; ELSE JUDGE_2YR=0;
IF JUDGE_3YR>=1 THEN JUDGE_3YR=1; ELSE JUDGE_3YR=0;
IF JUDGE_4YR>=1 THEN JUDGE_4YR=1; ELSE JUDGE_4YR=0;
IF JUDGE_5YR>=1 THEN JUDGE_5YR=1; ELSE JUDGE_5YR=0;
RUN;

/*장기요양 보험 인정*/
PROC SQL; CREATE TABLE LTC_APPR1 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT INDI_SEQ) AS APPR_1YR FROM DB.TARGET_LTC_TBNYBASE
WHERE C_DATE<=APLY_YMD AND APLY_YMD^=. AND APLY_YMD2<=(C_DATE+365) 
AND GJU_RCGT_GRADE_CD IN ('1','2','3','4','5','6') GROUP BY INDI_DSCM_NO ; QUIT; /*22760*/
PROC SQL; CREATE TABLE LTC_APPR2 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT INDI_SEQ) AS APPR_2YR FROM DB.TARGET_LTC_TBNYBASE
WHERE C_DATE<=APLY_YMD AND APLY_YMD^=. AND (C_DATE+365)<APLY_YMD2 AND APLY_YMD2<=(C_DATE+365*2) 
AND GJU_RCGT_GRADE_CD IN ('1','2','3','4','5','6') GROUP BY INDI_DSCM_NO ; QUIT; /*9171*/
PROC SQL; CREATE TABLE LTC_APPR3 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT INDI_SEQ) AS APPR_3YR FROM DB.TARGET_LTC_TBNYBASE
WHERE C_DATE<=APLY_YMD AND APLY_YMD^=. AND (C_DATE+365*2)<APLY_YMD2 AND APLY_YMD2<=(C_DATE+365*3) 
AND GJU_RCGT_GRADE_CD IN ('1','2','3','4','5','6') GROUP BY INDI_DSCM_NO ; QUIT; /*5256*/
PROC SQL; CREATE TABLE LTC_APPR4 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT INDI_SEQ) AS APPR_4YR FROM DB.TARGET_LTC_TBNYBASE
WHERE C_DATE<=APLY_YMD AND APLY_YMD^=. AND (C_DATE+365*3)<APLY_YMD2 AND APLY_YMD2<=(C_DATE+365*4)
AND GJU_RCGT_GRADE_CD IN ('1','2','3','4','5','6') GROUP BY INDI_DSCM_NO ; QUIT; /*3693*/
PROC SQL; CREATE TABLE LTC_APPR5 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT INDI_SEQ) AS APPR_5YR FROM DB.TARGET_LTC_TBNYBASE
WHERE C_DATE<=APLY_YMD AND APLY_YMD^=. AND (C_DATE+365*4)<APLY_YMD2 AND APLY_YMD2<=(C_DATE+365*5) 
AND GJU_RCGT_GRADE_CD IN ('1','2','3','4','5','6') GROUP BY INDI_DSCM_NO ; QUIT; /*2732*/

PROC SORT DATA=DB.LTC_JUDGE;BY INDI_DSCM_NO;RUN;
DATA LTC_APPR; MERGE DB.LTC_JUDGE (IN=A) LTC_APPR1-LTC_APPR5; BY INDI_DSCM_NO;IF A;RUN;

DATA DB.LTC_APPR; SET LTC_APPR;
IF APPR_1YR>=1 THEN APPR_1YR=1; ELSE APPR_1YR=0;
IF APPR_2YR>=1 THEN APPR_2YR=1; ELSE APPR_2YR=0;
IF APPR_3YR>=1 THEN APPR_3YR=1; ELSE APPR_3YR=0;
IF APPR_4YR>=1 THEN APPR_4YR=1; ELSE APPR_4YR=0;
IF APPR_5YR>=1 THEN APPR_5YR=1; ELSE APPR_5YR=0;
RUN;

/*장기요양 보험 인정등급*/
PROC SQL; CREATE TABLE LTC_GRADE1 AS
SELECT DISTINCT INDI_DSCM_NO, MIN(GJU_RCGT_GRADE_CD) AS GRADE_1YR FROM DB.TARGET_LTC_TBNYBASE
WHERE C_DATE<=APLY_YMD AND APLY_YMD^=. AND APLY_YMD2<=(C_DATE+365) 
AND GJU_RCGT_GRADE_CD IN ('1','2','3','4','5','6') GROUP BY INDI_DSCM_NO ; QUIT; /*22760*/
PROC SQL; CREATE TABLE LTC_GRADE2 AS
SELECT DISTINCT INDI_DSCM_NO, MIN(GJU_RCGT_GRADE_CD) AS GRADE_2YR FROM DB.TARGET_LTC_TBNYBASE
WHERE C_DATE<=APLY_YMD AND APLY_YMD^=. AND (C_DATE+365)<APLY_YMD2 AND APLY_YMD2<=(C_DATE+365*2) 
AND GJU_RCGT_GRADE_CD IN ('1','2','3','4','5','6') GROUP BY INDI_DSCM_NO ; QUIT; /*9171*/
PROC SQL; CREATE TABLE LTC_GRADE3 AS
SELECT DISTINCT INDI_DSCM_NO, MIN(GJU_RCGT_GRADE_CD) AS GRADE_3YR FROM DB.TARGET_LTC_TBNYBASE
WHERE C_DATE<=APLY_YMD AND APLY_YMD^=. AND (C_DATE+365*2)<APLY_YMD2 AND APLY_YMD2<=(C_DATE+365*3) 
AND GJU_RCGT_GRADE_CD IN ('1','2','3','4','5','6') GROUP BY INDI_DSCM_NO ; QUIT; /*5256*/
PROC SQL; CREATE TABLE LTC_GRADE4 AS
SELECT DISTINCT INDI_DSCM_NO, MIN(GJU_RCGT_GRADE_CD) AS GRADE_4YR FROM DB.TARGET_LTC_TBNYBASE
WHERE C_DATE<=APLY_YMD AND APLY_YMD^=. AND (C_DATE+365*3)<APLY_YMD2 AND APLY_YMD2<=(C_DATE+365*4)
AND GJU_RCGT_GRADE_CD IN ('1','2','3','4','5','6') GROUP BY INDI_DSCM_NO ; QUIT; /*3693*/
PROC SQL; CREATE TABLE LTC_GRADE5 AS
SELECT DISTINCT INDI_DSCM_NO, MIN(GJU_RCGT_GRADE_CD) AS GRADE_5YR FROM DB.TARGET_LTC_TBNYBASE
WHERE C_DATE<=APLY_YMD AND APLY_YMD^=. AND (C_DATE+365*4)<APLY_YMD2 AND APLY_YMD2<=(C_DATE+365*5) 
AND GJU_RCGT_GRADE_CD IN ('1','2','3','4','5','6') GROUP BY INDI_DSCM_NO ; QUIT; /*2732*/

PROC SORT DATA=DB.LTC_APPR;BY INDI_DSCM_NO;RUN;
DATA LTC_GRADE; MERGE DB.LTC_APPR (IN=A) LTC_GRADE1-LTC_GRADE5; BY INDI_DSCM_NO;IF A;RUN;

DATA DB.LTC_GRADE; SET LTC_GRADE;
IF GRADE_1YR>=1 THEN GRADE_1YR=1; ELSE GRADE_1YR=0;
IF GRADE_2YR>=1 THEN GRADE_2YR=1; ELSE GRADE_2YR=0;
IF GRADE_3YR>=1 THEN GRADE_3YR=1; ELSE GRADE_3YR=0;
IF GRADE_4YR>=1 THEN GRADE_4YR=1; ELSE GRADE_4YR=0;
IF GRADE_5YR>=1 THEN GRADE_5YR=1; ELSE GRADE_5YR=0;
RUN;

/**********************************2년 이내 첫 정보 구축**********************************/
/*진단일 이후 2년 내에 최초 신청일, 판정일, 인정유효기간 시작일*/
/*장기요양 보험 신청*/
PROC SQL; CREATE TABLE LTC_First_APLY AS
SELECT DISTINCT INDI_DSCM_NO, MIN(APLY_YMD2) AS LTC_First_APLY FROM DB.TARGET_LTC_TBNYBASE
WHERE C_DATE<=APLY_YMD AND APLY_YMD^=. AND APLY_YMD2<=(C_DATE+365*2)  GROUP BY INDI_DSCM_NO ; QUIT; /*36406*/
/*장기요양 보험 판정*/
PROC SQL; CREATE TABLE LTC_First_JUDGE AS
SELECT DISTINCT INDI_DSCM_NO, MIN(GRADE_JUDG_YMD2) AS LTC_First_JUDGE FROM DB.TARGET_LTC_TBNYBASE
WHERE C_DATE<=APLY_YMD AND APLY_YMD^=. AND APLY_YMD2<=(C_DATE+365*2) 
AND GJU_RCGT_GRADE_CD IN ('1','2','3','4','5','6','A','B','C') GROUP BY INDI_DSCM_NO ; QUIT; /*25880*/
/*장기요양 보험 인정*/
PROC SQL; CREATE TABLE LTC_First_APPR AS
SELECT DISTINCT INDI_DSCM_NO, MIN(RCGT_EDA_FR_YMD) AS LTC_First_APPR FROM DB.TARGET_LTC_TBNYBASE
WHERE C_DATE<=APLY_YMD AND APLY_YMD^=. AND APLY_YMD2<=(C_DATE+365*2) 
AND GJU_RCGT_GRADE_CD IN ('1','2','3','4','5','6') GROUP BY INDI_DSCM_NO ; QUIT; /*22760*/
/*장기요양 보험 이용 최초 지급일*/
PROC SQL; CREATE TABLE LTC_FIRST_USE AS
SELECT DISTINCT INDI_DSCM_NO, MIN(PAY_YMD2) AS LTC_FIRST_USE FROM DB.TARGET_LTC_PAY
WHERE C_DATE<=APLY_YMD AND APLY_YMD^=. AND APLY_YMD2<=(C_DATE+365*2) AND PAY_YYYYMM^=" " 
AND GJU_RCGT_GRADE_CD IN ('1','2','3','4','5','6') GROUP BY INDI_DSCM_NO ; QUIT; /*15168*/
/*장기요양 시설 이용 최초 지급일*/
PROC SQL; CREATE TABLE LTC_FIRST_USE_INS AS
SELECT DISTINCT INDI_DSCM_NO, MIN( PAY_YMD2) AS LTC_FIRST_USE_INS FROM DB.TARGET_LTC_PAY
WHERE C_DATE<=APLY_YMD AND APLY_YMD^=. AND APLY_YMD2<=(C_DATE+365*2) AND PAY_YYYYMM^=" " AND LTCP_TYPE_CD='1'
AND GJU_RCGT_GRADE_CD IN ('1','2','3','4','5','6') GROUP BY INDI_DSCM_NO ; QUIT; /*2925*/
/*장기요양 재가 이용 최초 지급일*/
PROC SQL; CREATE TABLE LTC_FIRST_USE_HOME AS
SELECT DISTINCT INDI_DSCM_NO, MIN( PAY_YMD2) AS LTC_FIRST_USE_HOME FROM DB.TARGET_LTC_PAY
WHERE C_DATE<=APLY_YMD AND APLY_YMD^=. AND APLY_YMD2<=(C_DATE+365*2) AND PAY_YYYYMM^=" " AND LTCP_TYPE_CD='2'
AND GJU_RCGT_GRADE_CD IN ('1','2','3','4','5','6') GROUP BY INDI_DSCM_NO ; QUIT; /*2925*/

/*4.26 여기까지 돌림*/
/* 장기요양병원 : 밑에서 가져옴*/
DATA DB.TARGET_T20_LTC5YR; SET DB.TARGET_T20_LTC5YR_2008-DB.TARGET_T20_LTC5YR_2020;RUN; /*T20_DATE : LTC_SYM="요양기관_요양병원"*/
DATA DB.TARGET_T30_LTC5YR; SET DB.TARGET_T30_LTC5YR_2008-DB.TARGET_T30_LTC5YR_2020;RUN; /*T30_DATE : OP RT CTx LTC_ADJ*/

/*장기요양 병원 (T20, LTC_SYM) 최초 요양개시일*/
PROC SQL; CREATE TABLE LTC_FIRST_SYM AS
SELECT DISTINCT INDI_DSCM_NO, MIN( T20_DATE) AS LTC_FIRST_SYM FROM DB.TARGET_T20_LTC5YR
WHERE C_DATE<=T20_DATE AND T20_DATE^=. AND T20_DATE<=(C_DATE+365*2) AND LTC_SYM="요양기관_요양병원" GROUP BY INDI_DSCM_NO ; QUIT;
/*장기요양 병원 (T30, LTC_ADJ) 최초 요양개시일*/
PROC SQL; CREATE TABLE LTC_FIRST_ADJ AS
SELECT DISTINCT INDI_DSCM_NO, MIN( T30_DATE) AS LTC_FIRST_ADJ FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND T30_DATE<=(C_DATE+365*2) AND LTC_ADJ^=" " GROUP BY INDI_DSCM_NO ; QUIT;

DATA DB.FIRST_YMD; MERGE 
LTC_First_APLY LTC_First_JUDGE LTC_First_APPR 
LTC_FIRST_USE LTC_FIRST_USE_INS LTC_FIRST_USE_HOME 
LTC_FIRST_SYM LTC_FIRST_ADJ;
BY INDI_DSCM_NO;
RUN;

DATA DB.FIRST_YMD;SET DB.FIRST_YMD;
FORMAT
LTC_First_APLY YYMMDD10. LTC_First_JUDGE YYMMDD10. LTC_First_APPR YYMMDD10. 
LTC_FIRST_USE YYMMDD10. LTC_FIRST_USE_INS YYMMDD10. LTC_FIRST_USE_HOME YYMMDD10. 
LTC_FIRST_SYM YYMMDD10. LTC_FIRST_ADJ YYMMDD10.

MIN_LTC_YMD1 YYMMDD10. MIN_LTC_YMD2 YYMMDD10. MIN_LTC_YMD3 YYMMDD10. ;

MIN_LTC_YMD1=MIN(LTC_FIRST_USE_INS,LTC_FIRST_USE_HOME,LTC_FIRST_SYM);
MIN_LTC_YMD2=MIN(LTC_FIRST_USE_INS,LTC_FIRST_USE_HOME,LTC_FIRST_ADJ);
MIN_LTC_YMD3=MIN(LTC_FIRST_USE_INS,LTC_FIRST_USE_HOME,LTC_FIRST_SYM,LTC_FIRST_ADJ);

FORMAT FIRST_LTC_TYPE1 $30.;
IF MIN_LTC_YMD1^=. AND MIN_LTC_YMD1=LTC_FIRST_USE_INS THEN FIRST_LTC_TYPE1="01. 장기요양보험(시설)";
ELSE IF MIN_LTC_YMD1^=. AND MIN_LTC_YMD1=LTC_FIRST_USE_HOME THEN FIRST_LTC_TYPE1="02. 장기요양보험(재가)";
ELSE IF MIN_LTC_YMD1^=. AND MIN_LTC_YMD1=LTC_FIRST_SYM THEN FIRST_LTC_TYPE1="03. 장기요양병원";
ELSE FIRST_LTC_TYPE1="04. 해당사항없음";

FORMAT FIRST_LTC_TYPE2 $30.;
IF MIN_LTC_YMD2^=. AND MIN_LTC_YMD2=LTC_FIRST_USE_INS THEN FIRST_LTC_TYPE2="01. 장기요양보험(시설)";
ELSE IF MIN_LTC_YMD2^=. AND MIN_LTC_YMD2=LTC_FIRST_USE_HOME THEN FIRST_LTC_TYPE2="02. 장기요양보험(재가)";
ELSE IF MIN_LTC_YMD2^=. AND MIN_LTC_YMD2=LTC_FIRST_ADJ THEN FIRST_LTC_TYPE2="03. 장기요양병원";
ELSE FIRST_LTC_TYPE2="04. 해당사항없음";

FORMAT FIRST_LTC_TYPE3 $30.;
IF MIN_LTC_YMD3^=. AND MIN_LTC_YMD3=LTC_FIRST_USE_INS THEN FIRST_LTC_TYPE3="01. 장기요양보험(시설)";
ELSE IF MIN_LTC_YMD3^=. AND MIN_LTC_YMD3=LTC_FIRST_USE_HOME THEN FIRST_LTC_TYPE3="02. 장기요양보험(재가)";
ELSE IF MIN_LTC_YMD3^=. AND MIN_LTC_YMD3=LTC_FIRST_SYM OR MIN_LTC_YMD3=LTC_FIRST_ADJ THEN FIRST_LTC_TYPE3="03. 장기요양병원";
ELSE FIRST_LTC_TYPE3="04. 해당사항없음";

RUN;

/*얘 뒤로 보냄
PROC SORT DATA=DB.LTC_FINAL OUT=SORT_ID(KEEP=INDI_DSCM_NO C_DATE LAST_DATE);BY INDI_DSCM_NO;RUN;
PROC SORT DATA=DB.FIRST_YMD;BY INDI_DSCM_NO;RUN;

DATA DB.FIRST_YMD; MERGE SORT_ID (IN=A) DB.FIRST_YMD;BY INDI_DSCM_NO;IF A;RUN;

DATA DB.FIRST_YMD2;SET  DB.FIRST_YMD;

IF LTC_FIRST_USE_INS^=. THEN TIME_USE_INS=LTC_FIRST_USE_INS-C_DATE;
IF LTC_FIRST_USE_HOME^=. THEN TIME_USE_HOME=LTC_FIRST_USE_HOME-C_DATE;
IF LTC_FIRST_SYM^=. THEN TIME_USE_SYM=LTC_FIRST_SYM-C_DATE;
IF LTC_FIRST_ADJ^=. THEN TIME_USE_ADJ=LTC_FIRST_SYM-C_DATE;/*얘 뭐야*/

/*TIME_USE_SYMADJ=MIN(TIME_USE_SYM,TIME_USE_ADJ);
RUN;
*/

/**********************************2년 이내 첫 정보 구축**********************************/


/*기존에도 PAY_YMD YYMMDD10., PAY_YMD2 YYMMDD10. 추가된 버전으로 있음.*/
/*PROC SQL; CREATE TABLE DB.TARGET_LTC_PAY AS
SELECT DISTINCT A.*, B.*
FROM DB.TARGET_LTC_TBNYBASE AS A
LEFT JOIN RAW.RVSN_HFVT_TBNYPAY AS B
ON A.INDI_SEQ=B.INDI_SEQ
; QUIT;*/

/*진단 N년 이후에 신청한 사람 중 지급일이 있고 인정자(1~6등급)인 사람의 DISTINCT한 지급일 개수*/
PROC SQL; CREATE TABLE LTC_USE1 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT PAY_YYYYMM) AS USE_1YR FROM DB.TARGET_LTC_PAY
WHERE C_DATE<=APLY_YMD AND APLY_YMD^=. AND APLY_YMD2<=(C_DATE+365) AND PAY_YYYYMM^=" " 
AND GJU_RCGT_GRADE_CD IN ('1','2','3','4','5','6') GROUP BY INDI_DSCM_NO ; QUIT; /*15168*/
PROC SQL; CREATE TABLE LTC_USE2 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT PAY_YYYYMM) AS USE_2YR FROM DB.TARGET_LTC_PAY
WHERE C_DATE<=APLY_YMD AND APLY_YMD^=. AND (C_DATE+365)<APLY_YMD2 AND APLY_YMD2<=(C_DATE+365*2) AND PAY_YYYYMM^=" " 
AND GJU_RCGT_GRADE_CD IN ('1','2','3','4','5','6') GROUP BY INDI_DSCM_NO ; QUIT; /*6667*/
PROC SQL; CREATE TABLE LTC_USE3 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT PAY_YYYYMM) AS USE_3YR FROM DB.TARGET_LTC_PAY
WHERE C_DATE<=APLY_YMD AND APLY_YMD^=. AND (C_DATE+365*2)<APLY_YMD2 AND APLY_YMD2<=(C_DATE+365*3) AND PAY_YYYYMM^=" " 
AND GJU_RCGT_GRADE_CD IN ('1','2','3','4','5','6') GROUP BY INDI_DSCM_NO ; QUIT; /*3996*/
PROC SQL; CREATE TABLE LTC_USE4 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT PAY_YYYYMM) AS USE_4YR FROM DB.TARGET_LTC_PAY
WHERE C_DATE<=APLY_YMD AND APLY_YMD^=. AND (C_DATE+365*3)<APLY_YMD2 AND APLY_YMD2<=(C_DATE+365*4)AND PAY_YYYYMM^=" " 
AND GJU_RCGT_GRADE_CD IN ('1','2','3','4','5','6') GROUP BY INDI_DSCM_NO ; QUIT; /*2867*/
PROC SQL; CREATE TABLE LTC_USE5 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT PAY_YYYYMM) AS USE_5YR FROM DB.TARGET_LTC_PAY
WHERE C_DATE<=APLY_YMD AND APLY_YMD^=. AND (C_DATE+365*4)<APLY_YMD2 AND APLY_YMD2<=(C_DATE+365*5) AND PAY_YYYYMM^=" " 
AND GJU_RCGT_GRADE_CD IN ('1','2','3','4','5','6') GROUP BY INDI_DSCM_NO ; QUIT; /*2173*/

PROC SORT DATA=DB.LTC_GRADE;BY INDI_DSCM_NO;RUN;
DATA LTC_USE; MERGE DB.LTC_GRADE (IN=A) LTC_USE1-LTC_USE5; BY INDI_DSCM_NO;IF A;RUN;

DATA DB.LTC_USE; SET LTC_USE;
IF USE_1YR>=1 THEN USE_1YR=1; ELSE USE_1YR=0;
IF USE_2YR>=1 THEN USE_2YR=1; ELSE USE_2YR=0;
IF USE_3YR>=1 THEN USE_3YR=1; ELSE USE_3YR=0;
IF USE_4YR>=1 THEN USE_4YR=1; ELSE USE_4YR=0;
IF USE_5YR>=1 THEN USE_5YR=1; ELSE USE_5YR=0;
RUN;

/*장기요양 보험 이용종류*/
/*이게 몰까*/
PROC FREQ DATA=DB.TARGET_LTC_PAY; TABLE LTCP_CLSFC_CD*LTCP_TYPE_CD/NOCOL NOROW NOPERCENT;RUN;

/*진단 N-1~N년 사이에 신청한 사람 중 지급일이 있고 인정자(1~6등급)인 사람의 DISTINCT한 지급일 개수*/
/*시설이용 조건 추가*/
PROC SQL; CREATE TABLE LTC_USE_INS1 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT PAY_YYYYMM) AS USE_INS_1YR FROM DB.TARGET_LTC_PAY
WHERE C_DATE<=APLY_YMD AND APLY_YMD^=. AND APLY_YMD2<=(C_DATE+365) AND PAY_YYYYMM^=" " AND LTCP_TYPE_CD='1'
AND GJU_RCGT_GRADE_CD IN ('1','2','3','4','5','6') GROUP BY INDI_DSCM_NO ; QUIT; /*2925*/
PROC SQL; CREATE TABLE LTC_USE_INS2 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT PAY_YYYYMM) AS USE_INS_2YR FROM DB.TARGET_LTC_PAY
WHERE C_DATE<=APLY_YMD AND APLY_YMD^=. AND (C_DATE+365)<APLY_YMD2 AND APLY_YMD2<=(C_DATE+365*2) AND PAY_YYYYMM^=" " AND LTCP_TYPE_CD='1' 
AND GJU_RCGT_GRADE_CD IN ('1','2','3','4','5','6') GROUP BY INDI_DSCM_NO ; QUIT; /*1432*/
PROC SQL; CREATE TABLE LTC_USE_INS3 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT PAY_YYYYMM) AS USE_INS_3YR FROM DB.TARGET_LTC_PAY
WHERE C_DATE<=APLY_YMD AND APLY_YMD^=. AND (C_DATE+365*2)<APLY_YMD2 AND APLY_YMD2<=(C_DATE+365*3) AND PAY_YYYYMM^=" " AND LTCP_TYPE_CD='1' 
AND GJU_RCGT_GRADE_CD IN ('1','2','3','4','5','6') GROUP BY INDI_DSCM_NO ; QUIT; /*906*/
PROC SQL; CREATE TABLE LTC_USE_INS4 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT PAY_YYYYMM) AS USE_INS_4YR FROM DB.TARGET_LTC_PAY
WHERE C_DATE<=APLY_YMD AND APLY_YMD^=. AND (C_DATE+365*3)<APLY_YMD2 AND APLY_YMD2<=(C_DATE+365*4)AND PAY_YYYYMM^=" " AND LTCP_TYPE_CD='1' 
AND GJU_RCGT_GRADE_CD IN ('1','2','3','4','5','6') GROUP BY INDI_DSCM_NO ; QUIT; /*656*/
PROC SQL; CREATE TABLE LTC_USE_INS5 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT PAY_YYYYMM) AS USE_INS_5YR FROM DB.TARGET_LTC_PAY
WHERE C_DATE<=APLY_YMD AND APLY_YMD^=. AND (C_DATE+365*4)<APLY_YMD2 AND APLY_YMD2<=(C_DATE+365*5) AND PAY_YYYYMM^=" " AND LTCP_TYPE_CD='1' 
AND GJU_RCGT_GRADE_CD IN ('1','2','3','4','5','6') GROUP BY INDI_DSCM_NO ; QUIT; /*523*/
/*재가이용 조건 추가*/
PROC SQL; CREATE TABLE LTC_USE_HOME1 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT PAY_YYYYMM) AS USE_HOME_1YR FROM DB.TARGET_LTC_PAY
WHERE C_DATE<=APLY_YMD AND APLY_YMD^=. AND APLY_YMD2<=(C_DATE+365) AND PAY_YYYYMM^=" " AND LTCP_TYPE_CD='2'
AND GJU_RCGT_GRADE_CD IN ('1','2','3','4','5','6') GROUP BY INDI_DSCM_NO ; QUIT; /*13091*/
PROC SQL; CREATE TABLE LTC_USE_HOME2 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT PAY_YYYYMM) AS USE_HOME_2YR FROM DB.TARGET_LTC_PAY
WHERE C_DATE<=APLY_YMD AND APLY_YMD^=. AND (C_DATE+365)<APLY_YMD2 AND APLY_YMD2<=(C_DATE+365*2) AND PAY_YYYYMM^=" " AND LTCP_TYPE_CD='2' 
AND GJU_RCGT_GRADE_CD IN ('1','2','3','4','5','6') GROUP BY INDI_DSCM_NO ; QUIT; /*5628*/
PROC SQL; CREATE TABLE LTC_USE_HOME3 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT PAY_YYYYMM) AS USE_HOME_3YR FROM DB.TARGET_LTC_PAY
WHERE C_DATE<=APLY_YMD AND APLY_YMD^=. AND (C_DATE+365*2)<APLY_YMD2 AND APLY_YMD2<=(C_DATE+365*3) AND PAY_YYYYMM^=" " AND LTCP_TYPE_CD='2' 
AND GJU_RCGT_GRADE_CD IN ('1','2','3','4','5','6') GROUP BY INDI_DSCM_NO ; QUIT; /*3325*/
PROC SQL; CREATE TABLE LTC_USE_HOME4 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT PAY_YYYYMM) AS USE_HOME_4YR FROM DB.TARGET_LTC_PAY
WHERE C_DATE<=APLY_YMD AND APLY_YMD^=. AND (C_DATE+365*3)<APLY_YMD2 AND APLY_YMD2<=(C_DATE+365*4)AND PAY_YYYYMM^=" " AND LTCP_TYPE_CD='2' 
AND GJU_RCGT_GRADE_CD IN ('1','2','3','4','5','6') GROUP BY INDI_DSCM_NO ; QUIT; /*2392*/
PROC SQL; CREATE TABLE LTC_USE_HOME5 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT PAY_YYYYMM) AS USE_HOME_5YR FROM DB.TARGET_LTC_PAY
WHERE C_DATE<=APLY_YMD AND APLY_YMD^=. AND (C_DATE+365*4)<APLY_YMD2 AND APLY_YMD2<=(C_DATE+365*5) AND PAY_YYYYMM^=" " AND LTCP_TYPE_CD='2' 
AND GJU_RCGT_GRADE_CD IN ('1','2','3','4','5','6') GROUP BY INDI_DSCM_NO ; QUIT; /*1798*/

PROC SORT DATA=DB.LTC_USE;BY INDI_DSCM_NO;RUN;
DATA LTC_USE_TYPE; MERGE DB.LTC_USE (IN=A) LTC_USE_INS1-LTC_USE_INS5 LTC_USE_HOME1-LTC_USE_HOME5; BY INDI_DSCM_NO;IF A;RUN;

DATA DB.LTC_USE_TYPE; SET LTC_USE_TYPE;

IF USE_INS_1YR>=1 THEN USE_INS_1YR=1; ELSE USE_INS_1YR=0;
IF USE_INS_2YR>=1 THEN USE_INS_2YR=1; ELSE USE_INS_2YR=0;
IF USE_INS_3YR>=1 THEN USE_INS_3YR=1; ELSE USE_INS_3YR=0;
IF USE_INS_4YR>=1 THEN USE_INS_4YR=1; ELSE USE_INS_4YR=0;
IF USE_INS_5YR>=1 THEN USE_INS_5YR=1; ELSE USE_INS_5YR=0;

IF USE_HOME_1YR>=1 THEN USE_HOME_1YR=1; ELSE USE_HOME_1YR=0;
IF USE_HOME_2YR>=1 THEN USE_HOME_2YR=1; ELSE USE_HOME_2YR=0;
IF USE_HOME_3YR>=1 THEN USE_HOME_3YR=1; ELSE USE_HOME_3YR=0;
IF USE_HOME_4YR>=1 THEN USE_HOME_4YR=1; ELSE USE_HOME_4YR=0;
IF USE_HOME_5YR>=1 THEN USE_HOME_5YR=1; ELSE USE_HOME_5YR=0;
RUN;

/* 장기요양병원 */

DATA DB.TARGET_T20_LTC5YR; SET DB.TARGET_T20_LTC5YR_2008-DB.TARGET_T20_LTC5YR_2020;RUN; /*T20_DATE : LTC_SYM="요양기관_요양병원"*/
DATA DB.TARGET_T30_LTC5YR; SET DB.TARGET_T30_LTC5YR_2008-DB.TARGET_T30_LTC5YR_2020;RUN; /*T30_DATE : OP RT CTx LTC_ADJ*/

/*요양개시일이 진단 N-1~N년 사이이고, LTC_SYM=요양병원 인 사람들의 DISTINCT한 요양개시일 수*/
/*얘네는 왜 DB.에 넣어놨을 까, 그리고 T30이 아니고 T20이 아닐까*/
PROC SQL; CREATE TABLE DB.T30_LTC_SYM1 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T20_DATE) AS LTC_SYM_1YR FROM DB.TARGET_T20_LTC5YR
WHERE C_DATE<=T20_DATE AND T20_DATE^=. AND T20_DATE<=(C_DATE+365) AND LTC_SYM="요양기관_요양병원" GROUP BY INDI_DSCM_NO ; QUIT;
PROC SQL; CREATE TABLE DB.T30_LTC_SYM2 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T20_DATE) AS LTC_SYM_2YR FROM DB.TARGET_T20_LTC5YR
WHERE C_DATE<=T20_DATE AND T20_DATE^=. AND (C_DATE+365)<T20_DATE AND T20_DATE<=(C_DATE+365*2) AND LTC_SYM="요양기관_요양병원" GROUP BY INDI_DSCM_NO ; QUIT; 
PROC SQL; CREATE TABLE DB.T30_LTC_SYM3 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T20_DATE) AS LTC_SYM_3YR FROM DB.TARGET_T20_LTC5YR
WHERE C_DATE<=T20_DATE AND T20_DATE^=. AND (C_DATE+365*2)<T20_DATE AND T20_DATE<=(C_DATE+365*3) AND LTC_SYM="요양기관_요양병원" GROUP BY INDI_DSCM_NO ; QUIT; 
PROC SQL; CREATE TABLE DB.T30_LTC_SYM4 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T20_DATE) AS LTC_SYM_4YR FROM DB.TARGET_T20_LTC5YR
WHERE C_DATE<=T20_DATE AND T20_DATE^=. AND (C_DATE+365*3)<T20_DATE AND T20_DATE<=(C_DATE+365*4)AND LTC_SYM="요양기관_요양병원"  GROUP BY INDI_DSCM_NO ; QUIT; 
PROC SQL; CREATE TABLE DB.T30_LTC_SYM5 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T20_DATE) AS LTC_SYM_5YR FROM DB.TARGET_T20_LTC5YR
WHERE C_DATE<=T20_DATE AND T20_DATE^=. AND (C_DATE+365*4)<T20_DATE AND T20_DATE<=(C_DATE+365*5) AND LTC_SYM="요양기관_요양병원" GROUP BY INDI_DSCM_NO ; QUIT; 

PROC SQL; CREATE TABLE DB.T30_LTC_ADJ1 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS LTC_ADJ_1YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND T30_DATE<=(C_DATE+365) AND LTC_ADJ^=" " GROUP BY INDI_DSCM_NO ; QUIT;
PROC SQL; CREATE TABLE DB.T30_LTC_ADJ2 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS LTC_ADJ_2YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365)<T30_DATE AND T30_DATE<=(C_DATE+365*2) AND LTC_ADJ^=" " GROUP BY INDI_DSCM_NO ; QUIT; 
PROC SQL; CREATE TABLE DB.T30_LTC_ADJ3 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS LTC_ADJ_3YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365*2)<T30_DATE AND T30_DATE<=(C_DATE+365*3) AND LTC_ADJ^=" " GROUP BY INDI_DSCM_NO ; QUIT; 
PROC SQL; CREATE TABLE DB.T30_LTC_ADJ4 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS LTC_ADJ_4YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365*3)<T30_DATE AND T30_DATE<=(C_DATE+365*4)AND LTC_ADJ^=" "  GROUP BY INDI_DSCM_NO ; QUIT; 
PROC SQL; CREATE TABLE DB.T30_LTC_ADJ5 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS LTC_ADJ_5YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365*4)<T30_DATE AND T30_DATE<=(C_DATE+365*5) AND LTC_ADJ^=" " GROUP BY INDI_DSCM_NO ; QUIT; 


DATA DB.LTC_HOSPITAL; MERGE DB.T30_LTC_SYM1-DB.T30_LTC_SYM5 DB.T30_LTC_ADJ1-DB.T30_LTC_ADJ5; BY INDI_DSCM_NO;RUN;

DATA DB.LTC_HOSPITAL; SET DB.LTC_HOSPITAL;

IF LTC_SYM_1YR>=1 THEN LTC_SYM_1YR=1; ELSE LTC_SYM_1YR=0;
IF LTC_SYM_2YR>=1 THEN LTC_SYM_2YR=1; ELSE LTC_SYM_2YR=0;
IF LTC_SYM_3YR>=1 THEN LTC_SYM_3YR=1; ELSE LTC_SYM_3YR=0;
IF LTC_SYM_4YR>=1 THEN LTC_SYM_4YR=1; ELSE LTC_SYM_4YR=0;
IF LTC_SYM_5YR>=1 THEN LTC_SYM_5YR=1; ELSE LTC_SYM_5YR=0;

IF LTC_ADJ_1YR>=1 THEN LTC_ADJ_1YR=1; ELSE LTC_ADJ_1YR=0;
IF LTC_ADJ_2YR>=1 THEN LTC_ADJ_2YR=1; ELSE LTC_ADJ_2YR=0;
IF LTC_ADJ_3YR>=1 THEN LTC_ADJ_3YR=1; ELSE LTC_ADJ_3YR=0;
IF LTC_ADJ_4YR>=1 THEN LTC_ADJ_4YR=1; ELSE LTC_ADJ_4YR=0;
IF LTC_ADJ_5YR>=1 THEN LTC_ADJ_5YR=1; ELSE LTC_ADJ_5YR=0;

IF LTC_SYM_1YR=1 OR LTC_ADJ_1YR=1 THEN LTC_HOSPITAL_1YR=1; ELSE LTC_HOSPITAL_1YR=0;
IF LTC_SYM_2YR=1 OR LTC_ADJ_2YR=1 THEN LTC_HOSPITAL_2YR=1; ELSE LTC_HOSPITAL_2YR=0;
IF LTC_SYM_3YR=1 OR LTC_ADJ_3YR=1 THEN LTC_HOSPITAL_3YR=1; ELSE LTC_HOSPITAL_3YR=0;
IF LTC_SYM_4YR=1 OR LTC_ADJ_4YR=1 THEN LTC_HOSPITAL_4YR=1; ELSE LTC_HOSPITAL_4YR=0;
IF LTC_SYM_5YR=1 OR LTC_ADJ_5YR=1 THEN LTC_HOSPITAL_5YR=1; ELSE LTC_HOSPITAL_5YR=0;

RUN;



/*암 치료 (수술, 항암, 방사선)*/
/*요양개시일이 진단 N-1~N년 사이이고, OP를 받은 사람들의 DISTINCT한 요양개시일 수*/
PROC SQL; CREATE TABLE DB.T30_OP1 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS OP_1YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND T30_DATE<=(C_DATE+365) AND OP^=" " GROUP BY INDI_DSCM_NO ; QUIT;
PROC SQL; CREATE TABLE DB.T30_OP2 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS OP_2YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365)<T30_DATE AND T30_DATE<=(C_DATE+365*2) AND OP^=" " GROUP BY INDI_DSCM_NO ; QUIT; 
PROC SQL; CREATE TABLE DB.T30_OP3 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS OP_3YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365*2)<T30_DATE AND T30_DATE<=(C_DATE+365*3) AND OP^=" " GROUP BY INDI_DSCM_NO ; QUIT; 
PROC SQL; CREATE TABLE DB.T30_OP4 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS OP_4YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365*3)<T30_DATE AND T30_DATE<=(C_DATE+365*4)AND OP^=" "  GROUP BY INDI_DSCM_NO ; QUIT; 
PROC SQL; CREATE TABLE DB.T30_OP5 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS OP_5YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365*4)<T30_DATE AND T30_DATE<=(C_DATE+365*5) AND OP^=" " GROUP BY INDI_DSCM_NO ; QUIT; 

/*이건 뭘까*/
PROC FREQ DATA=DB.TARGET_T30_LTC5YR; TABLE OP;RUN;

/*요양개시일이 진단 N-1~N년 사이이고, OP 중 Mediasternal Lymph Node Dissection를 받은 사람들의 DISTINCT한 요양개시일 수*/
PROC SQL; CREATE TABLE DB.T30_LN_OP1 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS LN_OP_1YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND T30_DATE<=(C_DATE+365) AND OP="45. Mediasternal Lymph Node Dissection" GROUP BY INDI_DSCM_NO ; QUIT;
PROC SQL; CREATE TABLE DB.T30_LN_OP2 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS LN_OP_2YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365)<T30_DATE AND T30_DATE<=(C_DATE+365*2) AND OP="45. Mediasternal Lymph Node Dissection" GROUP BY INDI_DSCM_NO ; QUIT; 
PROC SQL; CREATE TABLE DB.T30_LN_OP3 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS LN_OP_3YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365*2)<T30_DATE AND T30_DATE<=(C_DATE+365*3) AND OP="45. Mediasternal Lymph Node Dissection" GROUP BY INDI_DSCM_NO ; QUIT; 
PROC SQL; CREATE TABLE DB.T30_LN_OP4 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS LN_OP_4YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365*3)<T30_DATE AND T30_DATE<=(C_DATE+365*4) AND OP="45. Mediasternal Lymph Node Dissection"  GROUP BY INDI_DSCM_NO ; QUIT; 
PROC SQL; CREATE TABLE DB.T30_LN_OP5 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS LN_OP_5YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365*4)<T30_DATE AND T30_DATE<=(C_DATE+365*5) AND OP="45. Mediasternal Lymph Node Dissection" GROUP BY INDI_DSCM_NO ; QUIT; 

/*요양개시일이 진단 N-1~N년 사이이고, OP 중 17. Wedge Resection of Lung (+O1402)를 받은 사람들의 DISTINCT한 요양개시일 수*/
PROC SQL; CREATE TABLE DB.T30_Wedge_OP1 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS Wedge_OP_1YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND T30_DATE<=(C_DATE+365) AND OP="17. Wedge Resection of Lung (+O1402)" GROUP BY INDI_DSCM_NO ; QUIT;
PROC SQL; CREATE TABLE DB.T30_Wedge_OP2 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS Wedge_OP_2YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365)<T30_DATE AND T30_DATE<=(C_DATE+365*2) AND OP="17. Wedge Resection of Lung (+O1402)" GROUP BY INDI_DSCM_NO ; QUIT; 
PROC SQL; CREATE TABLE DB.T30_Wedge_OP3 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS Wedge_OP_3YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365*2)<T30_DATE AND T30_DATE<=(C_DATE+365*3) AND OP="17. Wedge Resection of Lung (+O1402)" GROUP BY INDI_DSCM_NO ; QUIT; 
PROC SQL; CREATE TABLE DB.T30_Wedge_OP4 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS Wedge_OP_4YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365*3)<T30_DATE AND T30_DATE<=(C_DATE+365*4) AND OP="17. Wedge Resection of Lung (+O1402)"  GROUP BY INDI_DSCM_NO ; QUIT; 
PROC SQL; CREATE TABLE DB.T30_Wedge_OP5 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS Wedge_OP_5YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365*4)<T30_DATE AND T30_DATE<=(C_DATE+365*5) AND OP="17. Wedge Resection of Lung (+O1402)" GROUP BY INDI_DSCM_NO ; QUIT; 

/*요양개시일이 진단 N-1~N년 사이이고, OP 중 Segmentectomy of Lung를 받은 사람들의 DISTINCT한 요양개시일 수*/
PROC SQL; CREATE TABLE DB.T30_Segmen_OP1 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS Segmen_OP_1YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND T30_DATE<=(C_DATE+365) AND OP="18. Segmentectomy of Lung" GROUP BY INDI_DSCM_NO ; QUIT;
PROC SQL; CREATE TABLE DB.T30_Segmen_OP2 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS Segmen_OP_2YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365)<T30_DATE AND T30_DATE<=(C_DATE+365*2) AND OP="18. Segmentectomy of Lung" GROUP BY INDI_DSCM_NO ; QUIT; 
PROC SQL; CREATE TABLE DB.T30_Segmen_OP3 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS Segmen_OP_3YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365*2)<T30_DATE AND T30_DATE<=(C_DATE+365*3) AND OP="18. Segmentectomy of Lung" GROUP BY INDI_DSCM_NO ; QUIT; 
PROC SQL; CREATE TABLE DB.T30_Segmen_OP4 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS Segmen_OP_4YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365*3)<T30_DATE AND T30_DATE<=(C_DATE+365*4) AND OP="18. Segmentectomy of Lung"  GROUP BY INDI_DSCM_NO ; QUIT; 
PROC SQL; CREATE TABLE DB.T30_Segmen_OP5 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS Segmen_OP_5YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365*4)<T30_DATE AND T30_DATE<=(C_DATE+365*5) AND OP="18. Segmentectomy of Lung" GROUP BY INDI_DSCM_NO ; QUIT; 

/*요양개시일이 진단 N-1~N년 사이이고, OP 중 Lobectomy of Lung를 받은 사람들의 DISTINCT한 요양개시일 수*/
PROC SQL; CREATE TABLE DB.T30_Lobe_OP1 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS Lobe_OP_1YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND T30_DATE<=(C_DATE+365) AND OP="19. Lobectomy of Lung" GROUP BY INDI_DSCM_NO ; QUIT;
PROC SQL; CREATE TABLE DB.T30_Lobe_OP2 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS Lobe_OP_2YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365)<T30_DATE AND T30_DATE<=(C_DATE+365*2) AND OP="19. Lobectomy of Lung" GROUP BY INDI_DSCM_NO ; QUIT; 
PROC SQL; CREATE TABLE DB.T30_Lobe_OP3 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS Lobe_OP_3YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365*2)<T30_DATE AND T30_DATE<=(C_DATE+365*3) AND OP="19. Lobectomy of Lung" GROUP BY INDI_DSCM_NO ; QUIT; 
PROC SQL; CREATE TABLE DB.T30_Lobe_OP4 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS Lobe_OP_4YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365*3)<T30_DATE AND T30_DATE<=(C_DATE+365*4) AND OP="19. Lobectomy of Lung"  GROUP BY INDI_DSCM_NO ; QUIT; 
PROC SQL; CREATE TABLE DB.T30_Lobe_OP5 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS Lobe_OP_5YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365*4)<T30_DATE AND T30_DATE<=(C_DATE+365*5) AND OP="19. Lobectomy of Lung" GROUP BY INDI_DSCM_NO ; QUIT; 

/*요양개시일이 진단 N-1~N년 사이이고, OP 중 Pneumonectomy를 받은 사람들의 DISTINCT한 요양개시일 수*/
PROC SQL; CREATE TABLE DB.T30_Pneum_OP1 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS Pneum_OP_1YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND T30_DATE<=(C_DATE+365) AND OP="20. Pneumonectomy" GROUP BY INDI_DSCM_NO ; QUIT;
PROC SQL; CREATE TABLE DB.T30_Pneum_OP2 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS Pneum_OP_2YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365)<T30_DATE AND T30_DATE<=(C_DATE+365*2) AND OP="20. Pneumonectomy" GROUP BY INDI_DSCM_NO ; QUIT; 
PROC SQL; CREATE TABLE DB.T30_Pneum_OP3 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS Pneum_OP_3YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365*2)<T30_DATE AND T30_DATE<=(C_DATE+365*3) AND OP="20. Pneumonectomy" GROUP BY INDI_DSCM_NO ; QUIT; 
PROC SQL; CREATE TABLE DB.T30_Pneum_OP4 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS Pneum_OP_4YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365*3)<T30_DATE AND T30_DATE<=(C_DATE+365*4) AND OP="20. Pneumonectomy"  GROUP BY INDI_DSCM_NO ; QUIT; 
PROC SQL; CREATE TABLE DB.T30_Pneum_OP5 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS Pneum_OP_5YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365*4)<T30_DATE AND T30_DATE<=(C_DATE+365*5) AND OP="20. Pneumonectomy" GROUP BY INDI_DSCM_NO ; QUIT; 

/*요양개시일이 진단 N-1~N년 사이이고, OP중 앞에 나온 5개를 제외한 것을 받은 사람들의 DISTINCT한 요양개시일 수*/
PROC SQL; CREATE TABLE DB.T30_Others_OP1 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS Others_OP_1YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND T30_DATE<=(C_DATE+365) AND 
OP not in ("45. Mediasternal Lymph Node Dissection","17. Wedge Resection of Lung (+O1402)","18. Segmentectomy of Lung","19. Lobectomy of Lung","20. Pneumonectomy", " ") 
GROUP BY INDI_DSCM_NO ; QUIT; 
PROC SQL; CREATE TABLE DB.T30_Others_OP2 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS Others_OP_2YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365)<T30_DATE AND T30_DATE<=(C_DATE+365*2) AND 
OP not in ("45. Mediasternal Lymph Node Dissection","17. Wedge Resection of Lung (+O1402)","18. Segmentectomy of Lung","19. Lobectomy of Lung","20. Pneumonectomy", " ") 
GROUP BY INDI_DSCM_NO ; QUIT; 
PROC SQL; CREATE TABLE DB.T30_Others_OP3 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS Others_OP_3YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365*2)<T30_DATE AND T30_DATE<=(C_DATE+365*3) AND 
OP not in ("45. Mediasternal Lymph Node Dissection","17. Wedge Resection of Lung (+O1402)","18. Segmentectomy of Lung","19. Lobectomy of Lung","20. Pneumonectomy", " ") 
GROUP BY INDI_DSCM_NO ; QUIT; 
PROC SQL; CREATE TABLE DB.T30_Others_OP4 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS Others_OP_4YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365*3)<T30_DATE AND T30_DATE<=(C_DATE+365*4) AND 
OP not in ("45. Mediasternal Lymph Node Dissection","17. Wedge Resection of Lung (+O1402)","18. Segmentectomy of Lung","19. Lobectomy of Lung","20. Pneumonectomy", " ") 
GROUP BY INDI_DSCM_NO ; QUIT; 
PROC SQL; CREATE TABLE DB.T30_Others_OP5 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS Others_OP_5YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365*4)<T30_DATE AND T30_DATE<=(C_DATE+365*5) AND 
OP not in ("45. Mediasternal Lymph Node Dissection","17. Wedge Resection of Lung (+O1402)","18. Segmentectomy of Lung","19. Lobectomy of Lung","20. Pneumonectomy", " ") 
GROUP BY INDI_DSCM_NO ; QUIT; 

/*요양개시일이 진단 N-1~N년 사이이고, CTx 중 아래리스트를 받은 사람들의 DISTINCT한 요양개시일 수*/
PROC SQL; CREATE TABLE DB.T30_TO_CT1 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS TO_CT_1YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND T30_DATE<=(C_DATE+365) AND 
CTx in ("Cisplatin","Carboplatin","Gemcitabine","Pemetrexed","Irinotecan","Topotecan","Belotecan","Etoposide","Paclitaxel",
"Docetaxel","Vinorelbine","Cyclophosphamide","Doxorubicin","Ifosfamide","Methotrexate","Vincristine","Mitomycin C","Vinblastine") 
GROUP BY INDI_DSCM_NO ; QUIT;
PROC SQL; CREATE TABLE DB.T30_TO_CT2 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS TO_CT_2YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365)<T30_DATE AND T30_DATE<=(C_DATE+365*2) AND 
CTx in ("Cisplatin","Carboplatin","Gemcitabine","Pemetrexed","Irinotecan","Topotecan","Belotecan","Etoposide","Paclitaxel",
"Docetaxel","Vinorelbine","Cyclophosphamide","Doxorubicin","Ifosfamide","Methotrexate","Vincristine","Mitomycin C","Vinblastine") 
GROUP BY INDI_DSCM_NO ; QUIT;
PROC SQL; CREATE TABLE DB.T30_TO_CT3 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS TO_CT_3YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365*2)<T30_DATE AND T30_DATE<=(C_DATE+365*3) AND 
CTx in ("Cisplatin","Carboplatin","Gemcitabine","Pemetrexed","Irinotecan","Topotecan","Belotecan","Etoposide","Paclitaxel",
"Docetaxel","Vinorelbine","Cyclophosphamide","Doxorubicin","Ifosfamide","Methotrexate","Vincristine","Mitomycin C","Vinblastine") 
GROUP BY INDI_DSCM_NO ; QUIT;
PROC SQL; CREATE TABLE DB.T30_TO_CT4 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS TO_CT_4YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365*3)<T30_DATE AND T30_DATE<=(C_DATE+365*4)AND 
CTx in ("Cisplatin","Carboplatin","Gemcitabine","Pemetrexed","Irinotecan","Topotecan","Belotecan","Etoposide","Paclitaxel",
"Docetaxel","Vinorelbine","Cyclophosphamide","Doxorubicin","Ifosfamide","Methotrexate","Vincristine","Mitomycin C","Vinblastine") 
GROUP BY INDI_DSCM_NO ; QUIT;
PROC SQL; CREATE TABLE DB.T30_TO_CT5 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS TO_CT_5YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365*4)<T30_DATE AND T30_DATE<=(C_DATE+365*5) AND 
CTx in ("Cisplatin","Carboplatin","Gemcitabine","Pemetrexed","Irinotecan","Topotecan","Belotecan","Etoposide","Paclitaxel",
"Docetaxel","Vinorelbine","Cyclophosphamide","Doxorubicin","Ifosfamide","Methotrexate","Vincristine","Mitomycin C","Vinblastine") 
GROUP BY INDI_DSCM_NO ; QUIT;
/*요양개시일이 진단 N-1~N년 사이이고, CTx 중 아래리스트를 받은 사람들의 DISTINCT한 요양개시일 수*/
PROC SQL; CREATE TABLE DB.T30_TA_CT1 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS TA_CT_1YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND T30_DATE<=(C_DATE+365) AND 
CTx in ("Bevacizumab","Gefitinib","Erlotinib","Afatinib","Osimertinib","Crizotinib","Alectinib","Ceritinib","Brigatinib","Bortezomib") 
GROUP BY INDI_DSCM_NO ; QUIT;
PROC SQL; CREATE TABLE DB.T30_TA_CT2 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS TA_CT_2YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365)<T30_DATE AND T30_DATE<=(C_DATE+365*2) AND 
CTx in ("Bevacizumab","Gefitinib","Erlotinib","Afatinib","Osimertinib","Crizotinib","Alectinib","Ceritinib","Brigatinib","Bortezomib") 
GROUP BY INDI_DSCM_NO ; QUIT;
PROC SQL; CREATE TABLE DB.T30_TA_CT3 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS TA_CT_3YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365*2)<T30_DATE AND T30_DATE<=(C_DATE+365*3) AND 
CTx in ("Bevacizumab","Gefitinib","Erlotinib","Afatinib","Osimertinib","Crizotinib","Alectinib","Ceritinib","Brigatinib","Bortezomib") 
GROUP BY INDI_DSCM_NO ; QUIT;
PROC SQL; CREATE TABLE DB.T30_TA_CT4 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS TA_CT_4YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365*3)<T30_DATE AND T30_DATE<=(C_DATE+365*4)AND 
CTx in ("Bevacizumab","Gefitinib","Erlotinib","Afatinib","Osimertinib","Crizotinib","Alectinib","Ceritinib","Brigatinib","Bortezomib") 
GROUP BY INDI_DSCM_NO ; QUIT;
PROC SQL; CREATE TABLE DB.T30_TA_CT5 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS TA_CT_5YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365*4)<T30_DATE AND T30_DATE<=(C_DATE+365*5) AND 
CTx in ("Bevacizumab","Gefitinib","Erlotinib","Afatinib","Osimertinib","Crizotinib","Alectinib","Ceritinib","Brigatinib","Bortezomib") 
GROUP BY INDI_DSCM_NO ; QUIT;
/*요양개시일이 진단 N-1~N년 사이이고, CTx 중 아래리스트를 받은 사람들의 DISTINCT한 요양개시일 수*/
PROC SQL; CREATE TABLE DB.T30_IM_CT1 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS IM_CT_1YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND T30_DATE<=(C_DATE+365) AND 
CTx in ("Atezolizumab","Durvalumab","Nivolumab","Pembrolizumab") 
GROUP BY INDI_DSCM_NO ; QUIT;
PROC SQL; CREATE TABLE DB.T30_IM_CT2 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS IM_CT_2YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365)<T30_DATE AND T30_DATE<=(C_DATE+365*2) AND 
CTx in ("Atezolizumab","Durvalumab","Nivolumab","Pembrolizumab") 
GROUP BY INDI_DSCM_NO ; QUIT;
PROC SQL; CREATE TABLE DB.T30_IM_CT3 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS IM_CT_3YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365*2)<T30_DATE AND T30_DATE<=(C_DATE+365*3) AND 
CTx in ("Atezolizumab","Durvalumab","Nivolumab","Pembrolizumab") 
GROUP BY INDI_DSCM_NO ; QUIT;
PROC SQL; CREATE TABLE DB.T30_IM_CT4 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS IM_CT_4YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365*3)<T30_DATE AND T30_DATE<=(C_DATE+365*4) AND 
CTx in ("Atezolizumab","Durvalumab","Nivolumab","Pembrolizumab") 
GROUP BY INDI_DSCM_NO ; QUIT;
PROC SQL; CREATE TABLE DB.T30_IM_CT5 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS IM_CT_5YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365*4)<T30_DATE AND T30_DATE<=(C_DATE+365*5) AND 
CTx in ("Atezolizumab","Durvalumab","Nivolumab","Pembrolizumab") 
GROUP BY INDI_DSCM_NO ; QUIT;

/*요양개시일이 진단 N-1~N년 사이이고, CTx를 받은 사람들의 DISTINCT한 요양개시일 수*/
PROC SQL; CREATE TABLE DB.T30_CT1 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS CT_1YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND T30_DATE<=(C_DATE+365) AND CTx^=" " GROUP BY INDI_DSCM_NO ; QUIT;
PROC SQL; CREATE TABLE DB.T30_CT2 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS CT_2YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365)<T30_DATE AND T30_DATE<=(C_DATE+365*2) AND CTx^=" " GROUP BY INDI_DSCM_NO ; QUIT; 
PROC SQL; CREATE TABLE DB.T30_CT3 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS CT_3YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365*2)<T30_DATE AND T30_DATE<=(C_DATE+365*3) AND CTx^=" " GROUP BY INDI_DSCM_NO ; QUIT; 
PROC SQL; CREATE TABLE DB.T30_CT4 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS CT_4YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365*3)<T30_DATE AND T30_DATE<=(C_DATE+365*4)AND CTx^=" "  GROUP BY INDI_DSCM_NO ; QUIT; 
PROC SQL; CREATE TABLE DB.T30_CT5 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS CT_5YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365*4)<T30_DATE AND T30_DATE<=(C_DATE+365*5) AND CTx^=" " GROUP BY INDI_DSCM_NO ; QUIT; 

/*뭘까 화깅ㄴ*/
PROC FREQ DATA=DB.TARGET_T30_LTC5YR; TABLE CTx;RUN;

/*요양개시일이 진단 N-1~N년 사이이고, RT를 받은 사람들의 DISTINCT한 요양개시일 수*/
PROC SQL; CREATE TABLE DB.T30_RT1 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS RT_1YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND T30_DATE<=(C_DATE+365) AND RT^=" " GROUP BY INDI_DSCM_NO ; QUIT;
PROC SQL; CREATE TABLE DB.T30_RT2 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS RT_2YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365)<T30_DATE AND T30_DATE<=(C_DATE+365*2) AND RT^=" " GROUP BY INDI_DSCM_NO ; QUIT; 
PROC SQL; CREATE TABLE DB.T30_RT3 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS RT_3YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365*2)<T30_DATE AND T30_DATE<=(C_DATE+365*3) AND RT^=" " GROUP BY INDI_DSCM_NO ; QUIT; 
PROC SQL; CREATE TABLE DB.T30_RT4 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS RT_4YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365*3)<T30_DATE AND T30_DATE<=(C_DATE+365*4)AND RT^=" "  GROUP BY INDI_DSCM_NO ; QUIT; 
PROC SQL; CREATE TABLE DB.T30_RT5 AS
SELECT DISTINCT INDI_DSCM_NO, COUNT(DISTINCT T30_DATE) AS RT_5YR FROM DB.TARGET_T30_LTC5YR
WHERE C_DATE<=T30_DATE AND T30_DATE^=. AND (C_DATE+365*4)<T30_DATE AND T30_DATE<=(C_DATE+365*5) AND RT^=" " GROUP BY INDI_DSCM_NO ; QUIT; 

DATA DB.TREATMENT; MERGE 
DB.T30_OP1-DB.T30_OP5  DB.T30_LN_OP1-DB.T30_LN_OP5 DB.T30_Wedge_OP1-DB.T30_Wedge_OP5 DB.T30_Segmen_OP1-DB.T30_Segmen_OP5
DB.T30_Lobe_OP1-DB.T30_Lobe_OP5 DB.T30_Pneum_OP1-DB.T30_Pneum_OP5 DB.T30_Others_OP1-DB.T30_Others_OP5
DB.T30_CT1-DB.T30_CT5 DB.T30_TO_CT1-DB.T30_TO_CT5 DB.T30_TA_CT1-DB.T30_TA_CT5 DB.T30_IM_CT1-DB.T30_IM_CT5
DB.T30_RT1-DB.T30_RT5; BY INDI_DSCM_NO;RUN;

DATA DB.TREATMENT; SET DB.TREATMENT;

IF OP_1YR>=1 THEN OP_1YR=1; ELSE OP_1YR=0; 
IF OP_2YR>=1 THEN OP_2YR=1; ELSE OP_2YR=0; 
IF OP_3YR>=1 THEN OP_3YR=1; ELSE OP_3YR=0; 
IF OP_4YR>=1 THEN OP_4YR=1; ELSE OP_4YR=0; 
IF OP_5YR>=1 THEN OP_5YR=1; ELSE OP_5YR=0; 

IF LN_OP_1YR>=1 THEN LN_OP_1YR=1; ELSE LN_OP_1YR=0; 
IF LN_OP_2YR>=1 THEN LN_OP_2YR=1; ELSE LN_OP_2YR=0; 
IF LN_OP_3YR>=1 THEN LN_OP_3YR=1; ELSE LN_OP_3YR=0; 
IF LN_OP_4YR>=1 THEN LN_OP_4YR=1; ELSE LN_OP_4YR=0; 
IF LN_OP_5YR>=1 THEN LN_OP_5YR=1; ELSE LN_OP_5YR=0; 

IF Wedge_OP_1YR>=1 THEN Wedge_OP_1YR=1; ELSE Wedge_OP_1YR=0; 
IF Wedge_OP_2YR>=1 THEN Wedge_OP_2YR=1; ELSE Wedge_OP_2YR=0; 
IF Wedge_OP_3YR>=1 THEN Wedge_OP_3YR=1; ELSE Wedge_OP_3YR=0; 
IF Wedge_OP_4YR>=1 THEN Wedge_OP_4YR=1; ELSE Wedge_OP_4YR=0; 
IF Wedge_OP_5YR>=1 THEN Wedge_OP_5YR=1; ELSE Wedge_OP_5YR=0; 

IF Segmen_OP_1YR>=1 THEN Segmen_OP_1YR=1; ELSE Segmen_OP_1YR=0; 
IF Segmen_OP_2YR>=1 THEN Segmen_OP_2YR=1; ELSE Segmen_OP_2YR=0; 
IF Segmen_OP_3YR>=1 THEN Segmen_OP_3YR=1; ELSE Segmen_OP_3YR=0; 
IF Segmen_OP_4YR>=1 THEN Segmen_OP_4YR=1; ELSE Segmen_OP_4YR=0; 
IF Segmen_OP_5YR>=1 THEN Segmen_OP_5YR=1; ELSE Segmen_OP_5YR=0; 

IF Lobe_OP_1YR>=1 THEN Lobe_OP_1YR=1; ELSE Lobe_OP_1YR=0; 
IF Lobe_OP_2YR>=1 THEN Lobe_OP_2YR=1; ELSE Lobe_OP_2YR=0; 
IF Lobe_OP_3YR>=1 THEN Lobe_OP_3YR=1; ELSE Lobe_OP_3YR=0; 
IF Lobe_OP_4YR>=1 THEN Lobe_OP_4YR=1; ELSE Lobe_OP_4YR=0; 
IF Lobe_OP_5YR>=1 THEN Lobe_OP_5YR=1; ELSE Lobe_OP_5YR=0; 

IF Pneum_OP_1YR>=1 THEN Pneum_OP_1YR=1; ELSE Pneum_OP_1YR=0; 
IF Pneum_OP_2YR>=1 THEN Pneum_OP_2YR=1; ELSE Pneum_OP_2YR=0; 
IF Pneum_OP_3YR>=1 THEN Pneum_OP_3YR=1; ELSE Pneum_OP_3YR=0; 
IF Pneum_OP_4YR>=1 THEN Pneum_OP_4YR=1; ELSE Pneum_OP_4YR=0; 
IF Pneum_OP_5YR>=1 THEN Pneum_OP_5YR=1; ELSE Pneum_OP_5YR=0; 

IF Others_OP_1YR>=1 THEN Others_OP_1YR=1; ELSE Others_OP_1YR=0; 
IF Others_OP_2YR>=1 THEN Others_OP_2YR=1; ELSE Others_OP_2YR=0; 
IF Others_OP_3YR>=1 THEN Others_OP_3YR=1; ELSE Others_OP_3YR=0; 
IF Others_OP_4YR>=1 THEN Others_OP_4YR=1; ELSE Others_OP_4YR=0; 
IF Others_OP_5YR>=1 THEN Others_OP_5YR=1; ELSE Others_OP_5YR=0; 

IF CT_1YR>=1 THEN CT_1YR=1; ELSE CT_1YR=0; 
IF CT_2YR>=1 THEN CT_2YR=1; ELSE CT_2YR=0; 
IF CT_3YR>=1 THEN CT_3YR=1; ELSE CT_3YR=0; 
IF CT_4YR>=1 THEN CT_4YR=1; ELSE CT_4YR=0; 
IF CT_5YR>=1 THEN CT_5YR=1; ELSE CT_5YR=0; 

IF TO_CT_1YR>=1 THEN TO_CT_1YR=1; ELSE TO_CT_1YR=0; 
IF TO_CT_2YR>=1 THEN TO_CT_2YR=1; ELSE TO_CT_2YR=0; 
IF TO_CT_3YR>=1 THEN TO_CT_3YR=1; ELSE TO_CT_3YR=0; 
IF TO_CT_4YR>=1 THEN TO_CT_4YR=1; ELSE TO_CT_4YR=0; 
IF TO_CT_5YR>=1 THEN TO_CT_5YR=1; ELSE TO_CT_5YR=0; 

IF TA_CT_1YR>=1 THEN TA_CT_1YR=1; ELSE TA_CT_1YR=0; 
IF TA_CT_2YR>=1 THEN TA_CT_2YR=1; ELSE TA_CT_2YR=0; 
IF TA_CT_3YR>=1 THEN TA_CT_3YR=1; ELSE TA_CT_3YR=0; 
IF TA_CT_4YR>=1 THEN TA_CT_4YR=1; ELSE TA_CT_4YR=0; 
IF TA_CT_5YR>=1 THEN TA_CT_5YR=1; ELSE TA_CT_5YR=0; 

IF IM_CT_1YR>=1 THEN IM_CT_1YR=1; ELSE IM_CT_1YR=0; 
IF IM_CT_2YR>=1 THEN IM_CT_2YR=1; ELSE IM_CT_2YR=0; 
IF IM_CT_3YR>=1 THEN IM_CT_3YR=1; ELSE IM_CT_3YR=0; 
IF IM_CT_4YR>=1 THEN IM_CT_4YR=1; ELSE IM_CT_4YR=0; 
IF IM_CT_5YR>=1 THEN IM_CT_5YR=1; ELSE IM_CT_5YR=0; 

IF RT_1YR>=1 THEN RT_1YR=1; ELSE RT_1YR=0; 
IF RT_2YR>=1 THEN RT_2YR=1; ELSE RT_2YR=0; 
IF RT_3YR>=1 THEN RT_3YR=1; ELSE RT_3YR=0; 
IF RT_4YR>=1 THEN RT_4YR=1; ELSE RT_4YR=0; 
IF RT_5YR>=1 THEN RT_5YR=1; ELSE RT_5YR=0; 

RUN;

PROC SORT DATA=DB.LTC_USE_TYPE; BY INDI_DSCM_NO ; RUN;
PROC SORT DATA=DB.TREATMENT; BY INDI_DSCM_NO ; RUN;
PROC SORT DATA=DB.LTC_HOSPITAL; BY INDI_DSCM_NO ; RUN;
 
DATA LTC_FINAL; MERGE DB.LTC_USE_TYPE (IN=A) DB.TREATMENT DB.LTC_HOSPITAL; BY INDI_DSCM_NO ;IF A; RUN;

/*4.27 여기까지 이해*/
/*0502 여기까지 돌리고 감*/
DATA LTC_FINAL; SET LTC_FINAL ;
ARRAY CHANGE _NUMERIC_;
DO OVER CHANGE;
IF CHANGE=. THEN CHANGE=0;
END;
RUN;

DATA LTC_FINAL; SET LTC_FINAL ;
FORMAT DTH_DATE YYMMDD10.;
IF DTH_ASSMD_DT=" " THEN DO; DTH_YEAR=.; DTH_DATE=.;END;RUN;

PROC SORT DATA=RAW.BFC_2008 OUT=SEX1(KEEP= INDI_DSCM_NO SEX_TYPE) NODUPKEY; BY INDI_DSCM_NO;RUN;
PROC SORT DATA=RAW.BFC_2009 OUT=SEX2(KEEP= INDI_DSCM_NO SEX_TYPE) NODUPKEY; BY INDI_DSCM_NO;RUN;
PROC SORT DATA=RAW.BFC_2010 OUT=SEX3(KEEP= INDI_DSCM_NO SEX_TYPE) NODUPKEY; BY INDI_DSCM_NO;RUN;
PROC SORT DATA=RAW.BFC_2011 OUT=SEX4(KEEP= INDI_DSCM_NO SEX_TYPE) NODUPKEY; BY INDI_DSCM_NO;RUN;
PROC SORT DATA=RAW.BFC_2012 OUT=SEX5(KEEP= INDI_DSCM_NO SEX_TYPE) NODUPKEY; BY INDI_DSCM_NO;RUN;
PROC SORT DATA=RAW.BFC_2013 OUT=SEX6(KEEP= INDI_DSCM_NO SEX_TYPE) NODUPKEY; BY INDI_DSCM_NO;RUN;
PROC SORT DATA=RAW.BFC_2014 OUT=SEX7(KEEP= INDI_DSCM_NO SEX_TYPE) NODUPKEY; BY INDI_DSCM_NO;RUN;
PROC SORT DATA=RAW.BFC_2015 OUT=SEX8(KEEP= INDI_DSCM_NO SEX_TYPE) NODUPKEY; BY INDI_DSCM_NO;RUN;
PROC SORT DATA=RAW.BFC_2016 OUT=SEX9(KEEP= INDI_DSCM_NO SEX_TYPE) NODUPKEY; BY INDI_DSCM_NO;RUN;
PROC SORT DATA=RAW.BFC_2017 OUT=SEX10(KEEP= INDI_DSCM_NO SEX_TYPE) NODUPKEY; BY INDI_DSCM_NO;RUN;
PROC SORT DATA=RAW.BFC_2018 OUT=SEX11(KEEP= INDI_DSCM_NO SEX_TYPE) NODUPKEY; BY INDI_DSCM_NO;RUN;
PROC SORT DATA=RAW.BFC_2019 OUT=SEX12(KEEP= INDI_DSCM_NO SEX_TYPE) NODUPKEY; BY INDI_DSCM_NO;RUN;
PROC SORT DATA=RAW.BFC_2020 OUT=SEX13(KEEP= INDI_DSCM_NO SEX_TYPE) NODUPKEY; BY INDI_DSCM_NO;RUN;

PROC SORT DATA=LTC_FINAL;BY INDI_DSCM_NO;RUN;

PROC FREQ DATA=DB.LTC_FINAL;TABLE SEX_TYPE;RUN;

DATA DB.LTC_FINAL;MERGE SEX1-SEX13 LTC_FINAL(IN=A); BY INDI_DSCM_NO;IF A;RUN;

DATA DB.LTC_FINAL; SET DB.LTC_FINAL ;

FORMAT C_AGE_GRP $20.;
IF C_AGE>=65 AND C_AGE<75 THEN C_AGE_GRP="1. 65-74";
ELSE IF C_AGE>=75 AND C_AGE<85 THEN C_AGE_GRP="2. 75-84";
ELSE IF C_AGE>=85 THEN C_AGE_GRP="3. 85+";

IF APLY_1YR=1 OR APLY_2YR=1 THEN APLY_YN=1; ELSE APLY_YN=0; 
IF JUDGE_1YR=1 OR JUDGE_2YR=1 THEN JUDGE_YN=1; ELSE JUDGE_YN=0; 
IF GRADE_1YR=1 OR GRADE_2YR=1 THEN GRADE_YN=1; ELSE GRADE_YN=0; 
IF USE_1YR=1 OR USE_2YR=1 THEN USE_YN=1; ELSE USE_YN=0; 
IF USE_INS_1YR=1 OR USE_INS_2YR=1 THEN USE_INS_YN=1; ELSE USE_INS_YN=0; 
IF USE_HOME_1YR=1 OR USE_HOME_2YR=1 THEN USE_HOME_YN=1; ELSE USE_HOME_YN=0; 
IF LTC_SYM_1YR=1 OR LTC_SYM_2YR=1 THEN LTC_SYM_YN=1; ELSE LTC_SYM_YN=0; 
IF LTC_ADJ_1YR=1 OR LTC_ADJ_2YR=1 THEN LTC_ADJ_YN=1; ELSE LTC_ADJ_YN=0; 
IF LTC_HOSPITAL_1YR=1 OR LTC_HOSPITAL_2YR=1 THEN LTC_HOSPITAL_YN=1; ELSE LTC_HOSPITAL_YN=0; 
IF OP_1YR=1 OR OP_2YR=1 THEN OP_YN=1; ELSE OP_YN=0; 
IF LN_OP_1YR=1 OR LN_OP_2YR=1 THEN LN_OP_YN=1; ELSE LN_OP_YN=0; 
IF Wedge_OP_1YR=1 OR Wedge_OP_2YR=1 THEN Wedge_OP_YN=1; ELSE Wedge_OP_YN=0; 
IF Segmen_OP_1YR=1 OR Segmen_OP_2YR=1 THEN Segmen_OP_YN=1; ELSE Segmen_OP_YN=0; 
IF Lobe_OP_1YR=1 OR Lobe_OP_2YR=1 THEN Lobe_OP_YN=1; ELSE Lobe_OP_YN=0; 
IF Pneum_OP_1YR=1 OR Pneum_OP_2YR=1 THEN Pneum_OP_YN=1; ELSE Pneum_OP_YN=0; 
IF Others_OP_1YR=1 OR Others_OP_2YR=1 THEN Others_OP_YN=1; ELSE Others_OP_YN=0; 
IF CT_1YR=1 OR CT_2YR=1 THEN CT_YN=1; ELSE CT_YN=0; 
IF TO_CT_1YR=1 OR TO_CT_2YR=1 THEN TO_CT_YN=1; ELSE TO_CT_YN=0; 
IF TA_CT_1YR=1 OR TA_CT_2YR=1 THEN TA_CT_YN=1; ELSE TA_CT_YN=0; 
IF IM_CT_1YR=1 OR IM_CT_2YR=1 THEN IM_CT_YN=1; ELSE IM_CT_YN=0; 
IF RT_1YR=1 OR RT_2YR=1 THEN RT_YN=1; ELSE RT_YN=0; 

IF APLY_1YR=1 OR APLY_2YR=1  OR APLY_3YR=1  OR APLY_4YR=1  OR APLY_5YR=1 THEN APLY_YN2=1; ELSE APLY_YN2=0; 
IF JUDGE_1YR=1 OR JUDGE_2YR=1  OR JUDGE_3YR=1  OR JUDGE_4YR=1  OR JUDGE_5YR=1 THEN JUDGE_YN2=1; ELSE JUDGE_YN2=0; 
IF GRADE_1YR=1 OR GRADE_2YR=1  OR GRADE_3YR=1  OR GRADE_4YR=1  OR GRADE_5YR=1 THEN GRADE_YN2=1; ELSE GRADE_YN2=0; 
IF USE_1YR=1 OR USE_2YR=1  OR USE_3YR=1  OR USE_4YR=1  OR USE_5YR=1 THEN USE_YN2=1; ELSE USE_YN2=0; 
IF USE_INS_1YR=1 OR USE_INS_2YR=1  OR USE_INS_3YR=1  OR USE_INS_4YR=1  OR USE_INS_5YR=1  THEN USE_INS_YN2=1; ELSE USE_INS_YN2=0; 
IF USE_HOME_1YR=1 OR USE_HOME_2YR=1 OR USE_HOME_3YR=1 OR USE_HOME_4YR=1 OR USE_HOME_5YR=1 THEN USE_HOME_YN2=1; ELSE USE_HOME_YN2=0; 

IF LTC_SYM_1YR=1 OR LTC_SYM_2YR=1 OR LTC_SYM_3YR=1 OR LTC_SYM_4YR=1 OR LTC_SYM_5YR=1 THEN LTC_SYM_YN2=1; ELSE LTC_SYM_YN2=0; 
IF LTC_ADJ_1YR=1 OR LTC_ADJ_2YR=1 OR LTC_ADJ_3YR=1 OR LTC_ADJ_4YR=1 OR LTC_ADJ_5YR=1 THEN LTC_ADJ_YN2=1; ELSE LTC_ADJ_YN2=0; 
IF LTC_HOSPITAL_1YR=1 OR LTC_HOSPITAL_2YR=1 OR LTC_HOSPITAL_3YR=1 OR LTC_HOSPITAL_4YR=1 OR LTC_HOSPITAL_5YR=1 THEN LTC_HOSPITAL_YN2=1; ELSE LTC_HOSPITAL_YN2=0; 

IF OP_1YR=1 OR OP_2YR=1 OR OP_3YR=1 OR OP_4YR=1 OR OP_5YR=1 THEN OP_YN2=1; ELSE OP_YN2=0; 
IF LN_OP_1YR=1 OR LN_OP_2YR=1 OR LN_OP_3YR=1 OR LN_OP_4YR=1 OR LN_OP_5YR=1 THEN LN_OP_YN2=1; ELSE LN_OP_YN2=20; 
IF Wedge_OP_1YR=1 OR Wedge_OP_2YR=1 OR Wedge_OP_3YR=1 OR Wedge_OP_4YR=1 OR Wedge_OP_5YR=1 THEN Wedge_OP_YN2=1; ELSE Wedge_OP_YN2=0; 
IF Segmen_OP_1YR=1 OR Segmen_OP_2YR=1 OR Segmen_OP_3YR=1 OR Segmen_OP_4YR=1 OR Segmen_OP_5YR=1 THEN Segmen_OP_YN2=1; ELSE Segmen_OP_YN2=0; 
IF Lobe_OP_1YR=1 OR Lobe_OP_2YR=1 OR Lobe_OP_3YR=1 OR Lobe_OP_4YR=1 OR Lobe_OP_5YR=1 THEN Lobe_OP_YN2=1; ELSE Lobe_OP_YN2=0; 
IF Pneum_OP_1YR=1 OR Pneum_OP_2YR=1 OR Pneum_OP_3YR=1 OR Pneum_OP_4YR=1 OR Pneum_OP_5YR=1 THEN Pneum_OP_YN2=1; ELSE Pneum_OP_YN2=0; 
IF Others_OP_1YR=1 OR Others_OP_2YR=1 OR Others_OP_3YR=1 OR Others_OP_4YR=1 OR Others_OP_5YR=1 THEN Others_OP_YN2=1; ELSE Others_OP_YN2=0; 

IF CT_1YR=1 OR CT_2YR=1 OR CT_3YR=1 OR CT_4YR=1 OR CT_5YR=1 THEN CT_YN2=1; ELSE CT_YN2=0; 
IF TO_CT_1YR=1 OR TO_CT_2YR=1 OR TO_CT_3YR=1 OR TO_CT_4YR=1 OR TO_CT_5YR=1 THEN TO_CT_YN2=1; ELSE TO_CT_YN2=0; 
IF TA_CT_1YR=1 OR TA_CT_2YR=1 OR TA_CT_3YR=1 OR TA_CT_4YR=1 OR TA_CT_5YR=1 THEN TA_CT_YN2=1; ELSE TA_CT_YN2=0; 
IF IM_CT_1YR=1 OR IM_CT_2YR=1 OR IM_CT_3YR=1 OR IM_CT_4YR=1 OR IM_CT_5YR=1 THEN IM_CT_YN2=1; ELSE IM_CT_YN2=0; 
IF RT_1YR=1 OR RT_2YR=1 OR RT_3YR=1 OR RT_4YR=1 OR RT_5YR=1 THEN RT_YN2=1; ELSE RT_YN2=0; 

FORMAT SURGERY_nm $20.;
IF Pneum_OP_YN=1 THEN SURGERY_nm="06. Pneumonectomy";
ELSE IF Lobe_OP_YN=1 THEN SURGERY_nm="05. Lobectomy";
ELSE IF Segmen_OP_YN=1 THEN SURGERY_nm="04. Segmentectomy";
ELSE IF Wedge_OP_YN=1 THEN SURGERY_nm="03. Wedge resection";
ELSE IF LN_OP_YN=1 THEN SURGERY_nm="02. LN Dissection";
ELSE IF Others_OP_YN=1 THEN SURGERY_nm="01. Others";
ELSE SURGERY_nm="00. None";

FORMAT SURGERY_nm2 $20.;
IF Pneum_OP_YN2=1 THEN SURGERY_nm2="06. Pneumonectomy";
ELSE IF Lobe_OP_YN2=1 THEN SURGERY_nm2="05. Lobectomy";
ELSE IF Segmen_OP_YN2=1 THEN SURGERY_nm2="04. Segmentectomy";
ELSE IF Wedge_OP_YN2=1 THEN SURGERY_nm2="03. Wedge resection";
ELSE IF LN_OP_YN2=1 THEN SURGERY_nm2="02. LN Dissection";
ELSE IF Others_OP_YN2=1 THEN SURGERY_nm2="01. Others";
ELSE SURGERY_nm2="00. None";

FORMAT Chemo_nm $20.;
IF TO_CT_YN=0 AND TA_CT_YN=0 AND IM_CT_YN=0 THEN Chemo_nm="00. None";
ELSE IF TO_CT_YN=1 AND TA_CT_YN=0 AND IM_CT_YN=0 THEN Chemo_nm="01. Only TO CT";
ELSE IF TO_CT_YN=0 AND TA_CT_YN=1 AND IM_CT_YN=0 THEN Chemo_nm="02. Only TA CT";
ELSE IF TO_CT_YN=0 AND TA_CT_YN=0 AND IM_CT_YN=1 THEN Chemo_nm="03. Only IM CT";
ELSE IF TO_CT_YN=1 AND TA_CT_YN=1 AND IM_CT_YN=0 THEN Chemo_nm="04. TO+TA CT";
ELSE IF TO_CT_YN=1 AND TA_CT_YN=0 AND IM_CT_YN=1 THEN Chemo_nm="05. TO+IM CT";
ELSE IF TO_CT_YN=0 AND TA_CT_YN=1 AND IM_CT_YN=1 THEN Chemo_nm="06. TA+IM CT";
ELSE IF TO_CT_YN=1 AND TA_CT_YN=1 AND IM_CT_YN=1 THEN Chemo_nm="07. TO+TA+IM";

FORMAT Chemo_nm2 $20.;
IF TO_CT_YN2=0 AND TA_CT_YN2=0 AND IM_CT_YN2=0 THEN Chemo_nm2="00. None";
ELSE IF TO_CT_YN2=1 AND TA_CT_YN2=0 AND IM_CT_YN2=0 THEN Chemo_nm2="01. Only TO CT";
ELSE IF TO_CT_YN2=0 AND TA_CT_YN2=1 AND IM_CT_YN2=0 THEN Chemo_nm2="02. Only TA CT";
ELSE IF TO_CT_YN2=0 AND TA_CT_YN2=0 AND IM_CT_YN2=1 THEN Chemo_nm2="03. Only IM CT";
ELSE IF TO_CT_YN2=1 AND TA_CT_YN2=1 AND IM_CT_YN2=0 THEN Chemo_nm2="04. TO+TA CT";
ELSE IF TO_CT_YN2=1 AND TA_CT_YN2=0 AND IM_CT_YN2=1 THEN Chemo_nm2="05. TO+IM CT";
ELSE IF TO_CT_YN2=0 AND TA_CT_YN2=1 AND IM_CT_YN2=1 THEN Chemo_nm2="06. TA+IM CT";
ELSE IF TO_CT_YN2=1 AND TA_CT_YN2=1 AND IM_CT_YN2=1 THEN Chemo_nm2="07. TO+TA+IM";

IF OP_YN=1 OR CT_YN=1 OR RT_YN=1 THEN C_TREATMENT=1; ELSE C_TREATMENT=0;
IF OP_YN2=1 OR CT_YN2=1 OR RT_YN2=1 THEN C_TREATMENT2=1; ELSE C_TREATMENT2=0;

FORMAT GROUP $30.;

IF C_TREATMENT=0 AND USE_INS_YN=0 AND USE_HOME_YN=0 AND LTC_HOSPITAL_YN=0 THEN GROUP="NoTrt_0";
ELSE IF C_TREATMENT=0 AND USE_INS_YN=1 AND USE_HOME_YN=0 AND LTC_HOSPITAL_YN=0 THEN GROUP="NoTrt_1";
ELSE IF C_TREATMENT=0 AND USE_INS_YN=0 AND USE_HOME_YN=1 AND LTC_HOSPITAL_YN=0 THEN GROUP="NoTrt_2";
ELSE IF C_TREATMENT=0 AND USE_INS_YN=0 AND USE_HOME_YN=0 AND LTC_HOSPITAL_YN=1 THEN GROUP="NoTrt_3";
ELSE IF C_TREATMENT=0 AND USE_INS_YN=1 AND USE_HOME_YN=1 AND LTC_HOSPITAL_YN=0 THEN GROUP="NoTrt_4";
ELSE IF C_TREATMENT=0 AND USE_INS_YN=1 AND USE_HOME_YN=0 AND LTC_HOSPITAL_YN=1 THEN GROUP="NoTrt_5";
ELSE IF C_TREATMENT=0 AND USE_INS_YN=0 AND USE_HOME_YN=1 AND LTC_HOSPITAL_YN=1 THEN GROUP="NoTrt_6";
ELSE IF C_TREATMENT=0 AND USE_INS_YN=1 AND USE_HOME_YN=1 AND LTC_HOSPITAL_YN=1 THEN GROUP="NoTrt_7";

ELSE IF C_TREATMENT=1 AND USE_INS_YN=0 AND USE_HOME_YN=0 AND LTC_HOSPITAL_YN=0 THEN GROUP="Trt_0";
ELSE IF C_TREATMENT=1 AND USE_INS_YN=1 AND USE_HOME_YN=0 AND LTC_HOSPITAL_YN=0 THEN GROUP="Trt_1";
ELSE IF C_TREATMENT=1 AND USE_INS_YN=0 AND USE_HOME_YN=1 AND LTC_HOSPITAL_YN=0 THEN GROUP="Trt_2";
ELSE IF C_TREATMENT=1 AND USE_INS_YN=0 AND USE_HOME_YN=0 AND LTC_HOSPITAL_YN=1 THEN GROUP="Trt_3";
ELSE IF C_TREATMENT=1 AND USE_INS_YN=1 AND USE_HOME_YN=1 AND LTC_HOSPITAL_YN=0 THEN GROUP="Trt_4";
ELSE IF C_TREATMENT=1 AND USE_INS_YN=1 AND USE_HOME_YN=0 AND LTC_HOSPITAL_YN=1 THEN GROUP="Trt_5";
ELSE IF C_TREATMENT=1 AND USE_INS_YN=0 AND USE_HOME_YN=1 AND LTC_HOSPITAL_YN=1 THEN GROUP="Trt_6";
ELSE IF C_TREATMENT=1 AND USE_INS_YN=1 AND USE_HOME_YN=1 AND LTC_HOSPITAL_YN=1 THEN GROUP="Trt_7";

/*2021-10-21*/
LAST_DATE=INPUT(PUT('20211021',8.), YYMMDD10.); 
FORMAT LAST_DATE YYMMDD10.;
IF DTH_DATE^=. THEN DO;SURVTIME=DTH_DATE-C_DATE; DEATH=1;END;
ELSE IF DTH_DATE=. THEN DO;SURVTIME=LAST_DATE-C_DATE; DEATH=0;END;
IF SURVTIME<=0 THEN SURVTIME=0.5;

IF DEATH=1 AND SURVTIME<=365*2 THEN DO;DTH_2YR=1;SURVTIME_2YR=SURVTIME;END;
ELSE IF DEATH=1 AND SURVTIME>365*2 THEN DO;DTH_2YR=0; SURVTIME_2YR=365*2;END;
ELSE IF DEATH=0 AND SURVTIME<=365*2 THEN DO;DTH_2YR=0; SURVTIME_2YR=SURVTIME;END;
ELSE IF DEATH=0 AND SURVTIME>365*2 THEN DO;DTH_2YR=0; SURVTIME_2YR=365*2;END;

IF DEATH=1 AND SURVTIME<=365*5 THEN DO;DTH_5YR=1;SURVTIME_5YR=SURVTIME;END;
ELSE IF DEATH=1 AND SURVTIME>365*5 THEN DO;DTH_5YR=0; SURVTIME_5YR=365*5;END;
ELSE IF DEATH=0 AND SURVTIME<=365*5 THEN DO;DTH_5YR=0; SURVTIME_5YR=SURVTIME;END;
ELSE IF DEATH=0 AND SURVTIME>365*5 THEN DO;DTH_5YR=0; SURVTIME_5YR=365*5;END;

;RUN;

/*위에서 가져옴*/
PROC SORT DATA=DB.LTC_FINAL OUT=SORT_ID(KEEP=INDI_DSCM_NO C_DATE LAST_DATE);BY INDI_DSCM_NO;RUN;
PROC SORT DATA=DB.FIRST_YMD;BY INDI_DSCM_NO;RUN;

DATA DB.FIRST_YMD; MERGE SORT_ID (IN=A) DB.FIRST_YMD;BY INDI_DSCM_NO;IF A;RUN;

DATA DB.FIRST_YMD2;SET  DB.FIRST_YMD;

IF LTC_FIRST_USE_INS^=. THEN TIME_USE_INS=LTC_FIRST_USE_INS-C_DATE;
IF LTC_FIRST_USE_HOME^=. THEN TIME_USE_HOME=LTC_FIRST_USE_HOME-C_DATE;
IF LTC_FIRST_SYM^=. THEN TIME_USE_SYM=LTC_FIRST_SYM-C_DATE;
IF LTC_FIRST_ADJ^=. THEN TIME_USE_ADJ=LTC_FIRST_SYM-C_DATE;/*얘 뭐야*/

TIME_USE_SYMADJ=MIN(TIME_USE_SYM,TIME_USE_ADJ);
RUN;
/**/

PROC SORT DATA=DB.LTC_FINAL; BY INDI_DSCM_NO;RUN;
PROC SORT DATA=DB.FIRST_YMD2; BY INDI_DSCM_NO;RUN;

DATA DB.LTC_FINAL2; MERGE DB.LTC_FINAL (IN=A) DB.FIRST_YMD2; BY INDI_DSCM_NO;IF A; RUN;

DATA DB.LTC_FINAL2; SET  DB.LTC_FINAL2;
IF FIRST_LTC_TYPE1=" " THEN FIRST_LTC_TYPE1="04. 해당사항없음";
IF FIRST_LTC_TYPE2=" " THEN FIRST_LTC_TYPE2="04. 해당사항없음";
IF FIRST_LTC_TYPE3=" " THEN FIRST_LTC_TYPE3="04. 해당사항없음";

FORMAT C_YEAR_GRP $30.;
IF C_YEAR IN (2008,2009,2010) THEN C_YEAR_GRP="01. 2008-2010";
IF C_YEAR IN (2011,2012,2013) THEN C_YEAR_GRP="02. 2011-2013";
IF C_YEAR IN (2014,2015,2016) THEN C_YEAR_GRP="03. 2014-2016";
IF C_YEAR IN (2017,2018,2019) THEN C_YEAR_GRP="04. 2017-2019";
RUN;

PROC FREQ DATA=DB.LTC_FINAL2;
TABLE 
C_AGE_GRP*DTH_2YR 
SEX_TYPE*DTH_2YR 
C_YEAR_GRP*DTH_2YR
SURGERY_nm*DTH_2YR 
Chemo_nm*DTH_2YR 
RT_YN*DTH_2YR
USE_INS_YN*DTH_2YR 
USE_HOME_YN*DTH_2YR 
LTC_HOSPITAL_YN*DTH_2YR

LN_OP_YN*DTH_2YR 
Wedge_OP_YN*DTH_2YR 
Segmen_OP_YN*DTH_2YR 
Lobe_OP_YN*DTH_2YR
Pneum_OP_YN*DTH_2YR 
Others_OP_YN*DTH_2YR
TO_CT_YN*DTH_2YR 
TA_CT_YN*DTH_2YR 
IM_CT_YN*DTH_2YR

/NOCOL NOROW NOPERCENT;
WHERE C_YEAR NOT IN (2020); RUN;

PROC PHREG DATA=DB.LTC_FINAL2;
CLASS 
C_AGE_GRP (REF='1. 65-74') SEX_TYPE (REF='2') C_YEAR_GRP (REF="01. 2008-2010")
SURGERY_nm (REF='02. LN Dissection') Chemo_nm (REF='01. Only TO CT') RT_YN (REF='1')
USE_INS_YN (REF='1') USE_HOME_YN (REF='1') LTC_HOSPITAL_YN (REF='1');
MODEL 
SURVTIME_2YR*DTH_2YR(0)=C_AGE_GRP SEX_TYPE C_YEAR_GRP
SURGERY_nm Chemo_nm RT_YN
USE_INS_YN USE_HOME_YN LTC_HOSPITAL_YN
/RL;WHERE C_YEAR NOT IN (2020); RUN;

PROC PHREG DATA=DB.LTC_FINAL2;
CLASS 
C_AGE_GRP (REF='1. 65-74') SEX_TYPE (REF='2') C_YEAR_GRP (REF="01. 2008-2010")
LN_OP_YN (REF='0') Wedge_OP_YN (REF='0') Segmen_OP_YN (REF='0') Lobe_OP_YN (REF='0') Pneum_OP_YN (REF='0') Others_OP_YN (REF='0') 
TO_CT_YN (REF='0') TA_CT_YN (REF='0') IM_CT_YN (REF='0') 
RT_YN (REF='1')
USE_INS_YN (REF='1') USE_HOME_YN (REF='1') LTC_HOSPITAL_YN (REF='1');
MODEL 
SURVTIME_2YR*DTH_2YR(0)=C_AGE_GRP SEX_TYPE C_YEAR_GRP
LN_OP_YN Wedge_OP_YN Segmen_OP_YN Lobe_OP_YN Pneum_OP_YN Others_OP_YN
TO_CT_YN TA_CT_YN IM_CT_YN
RT_YN
USE_INS_YN USE_HOME_YN LTC_HOSPITAL_YN
/RL;WHERE C_YEAR NOT IN (2020) ;RUN;

/*뭔지 모르겠어 : NOTE: 데이터셋 DB.LTC_FINAL2에서 선택된 관측값이 없습니다.*/
PROC PRINT DATA=DB.LTC_FINAL2; VAR indi_dscm_no DTH_DATE C_DATE last_date; WHERE SURVTIME_2YR<0; run;

PROC FREQ DATA=DB.LTC_FINAL2;
TABLE
SEX_TYPE*C_AGE_GRP*C_YEAR_GRP*FIRST_LTC_TYPE1
SEX_TYPE*C_AGE_GRP*C_YEAR_GRP*FIRST_LTC_TYPE2
SEX_TYPE*C_AGE_GRP*C_YEAR_GRP*FIRST_LTC_TYPE3
/NOCOL NOROW NOPERCENT;
WHERE C_YEAR NOT IN (2020) ;
;RUN;

PROC FREQ DATA=DB.LTC_FINAL2;
TABLE
SEX_TYPE*C_AGE_GRP*C_YEAR_GRP*FIRST_LTC_TYPE1
SEX_TYPE*C_AGE_GRP*C_YEAR_GRP*FIRST_LTC_TYPE2
SEX_TYPE*C_AGE_GRP*C_YEAR_GRP*FIRST_LTC_TYPE3
/NOCOL NOROW NOPERCENT;
WHERE C_YEAR NOT IN (2020) AND C_TREATMENT=0;
;RUN;

PROC FREQ DATA=DB.LTC_FINAL2;
TABLE
SEX_TYPE*C_AGE_GRP*C_YEAR_GRP*FIRST_LTC_TYPE1
SEX_TYPE*C_AGE_GRP*C_YEAR_GRP*FIRST_LTC_TYPE2
SEX_TYPE*C_AGE_GRP*C_YEAR_GRP*FIRST_LTC_TYPE3
/NOCOL NOROW NOPERCENT;
WHERE C_YEAR NOT IN (2020) AND C_TREATMENT=1;
;RUN;

/*AND PRE_C=0 추가*/
PROC FREQ DATA=DB.LTC_FINAL2;
TABLE
SEX_TYPE*C_AGE_GRP*C_YEAR_GRP*FIRST_LTC_TYPE1
SEX_TYPE*C_AGE_GRP*C_YEAR_GRP*FIRST_LTC_TYPE2
SEX_TYPE*C_AGE_GRP*C_YEAR_GRP*FIRST_LTC_TYPE3
/NOCOL NOROW NOPERCENT;
WHERE C_YEAR NOT IN (2020) AND PRE_C=0;
;RUN;

PROC FREQ DATA=DB.LTC_FINAL2;
TABLE
SEX_TYPE*C_AGE_GRP*C_YEAR_GRP*FIRST_LTC_TYPE1
SEX_TYPE*C_AGE_GRP*C_YEAR_GRP*FIRST_LTC_TYPE2
SEX_TYPE*C_AGE_GRP*C_YEAR_GRP*FIRST_LTC_TYPE3
/NOCOL NOROW NOPERCENT;
WHERE C_YEAR NOT IN (2020) AND C_TREATMENT=0 AND PRE_C=0;
;RUN;

PROC FREQ DATA=DB.LTC_FINAL2;
TABLE
SEX_TYPE*C_AGE_GRP*C_YEAR_GRP*FIRST_LTC_TYPE1
SEX_TYPE*C_AGE_GRP*C_YEAR_GRP*FIRST_LTC_TYPE2
SEX_TYPE*C_AGE_GRP*C_YEAR_GRP*FIRST_LTC_TYPE3
/NOCOL NOROW NOPERCENT;
WHERE C_YEAR NOT IN (2020) AND C_TREATMENT=1AND PRE_C=0;
;RUN;
/**/

ODS GRAPHICS ON;
PROC SORT DATA=DB.LTC_FINAL2 OUT=SORT;BY SEX_TYPE C_AGE_GRP C_TREATMENT;
WHERE C_YEAR NOT IN (2020) ;RUN;
PROC LIFETEST DATA=SORT NOTABLE PLOTS=SURVIVAL;
TIME SURVTIME_2YR*DTH_2YR(0);
STRATA FIRST_LTC_TYPE1;
BY SEX_TYPE C_AGE_GRP C_TREATMENT;
RUN;

PROC LIFETEST DATA=SORT NOTABLE PLOTS=SURVIVAL;
TIME SURVTIME_2YR*DTH_2YR(0);
STRATA FIRST_LTC_TYPE2;
BY SEX_TYPE C_AGE_GRP C_TREATMENT;
RUN;

PROC LIFETEST DATA=SORT NOTABLE PLOTS=SURVIVAL;
TIME SURVTIME_2YR*DTH_2YR(0);
STRATA FIRST_LTC_TYPE3;
BY SEX_TYPE C_AGE_GRP C_TREATMENT;
RUN;


PROC SORT DATA=DB.LTC_FINAL2 OUT=SORT;BY SEX_TYPE C_AGE_GRP C_TREATMENT;
PROC means DATA=SORT mean std median q1 q3 min max;
VAR
TIME_USE_INS
TIME_USE_HOME
TIME_USE_SYM
TIME_USE_ADJ
TIME_USE_SYMADJ
;BY SEX_TYPE C_AGE_GRP C_TREATMENT;
WHERE C_YEAR NOT IN (2020) ;
RUN;



PROC SORT DATA=DB.LTC_FINAL2 OUT=SORT;BY SEX_TYPE C_AGE_GRP C_YEAR_GRP;RUN;
PROC FREQ DATA=SORT;
TABLE 

APLY_YN*C_YEAR_GRP
JUDGE_YN*C_YEAR_GRP
GRADE_YN*C_YEAR_GRP
USE_YN*C_YEAR_GRP
USE_INS_YN*C_YEAR_GRP
USE_HOME_YN*C_YEAR_GRP

LTC_HOSPITAL_YN*C_YEAR_GRP
LTC_SYM_YN*C_YEAR_GRP
LTC_ADJ_YN*C_YEAR_GRP

C_TREATMENT*C_YEAR_GRP

SURGERY_nm*C_YEAR_GRP

OP_YN*C_YEAR_GRP
LN_OP_YN*C_YEAR_GRP
Wedge_OP_YN*C_YEAR_GRP
Segmen_OP_YN*C_YEAR_GRP
Lobe_OP_YN*C_YEAR_GRP
Pneum_OP_YN*C_YEAR_GRP
Others_OP_YN*C_YEAR_GRP

Chemo_nm*C_YEAR_GRP

CT_YN*C_YEAR_GRP
TO_CT_YN*C_YEAR_GRP
TA_CT_YN*C_YEAR_GRP
IM_CT_YN*C_YEAR_GRP

RT_YN
/NOCOL NOROW NOPERCENT
;BY SEX_TYPE C_AGE_GRP ;
WHERE C_YEAR NOT IN (2020) ;
;RUN;


PROC SORT DATA=DB.LTC_FINAL OUT=SORT;BY  C_AGE_GRP ;RUN;

PROC FREQ DATA=SORT;
TABLE 
USE_INS_YN*USE_HOME_YN*LTC_HOSPITAL_YN
USE_INS_YN*USE_HOME_YN*LTC_SYM_YN
USE_INS_YN*USE_HOME_YN*LTC_ADJ_YN
/NOCOL NOROW NOPERCENT;
WHERE C_YEAR NOT IN (2020) AND C_TREATMENT=0  AND SEX_TYPE='1' ;
BY  C_AGE_GRP ;RUN;
RUN;
PROC FREQ DATA=SORT;
TABLE 
USE_INS_YN*USE_HOME_YN*LTC_HOSPITAL_YN
USE_INS_YN*USE_HOME_YN*LTC_SYM_YN
USE_INS_YN*USE_HOME_YN*LTC_ADJ_YN
/NOCOL NOROW NOPERCENT;
WHERE C_YEAR NOT IN (2020) AND C_TREATMENT=0  AND SEX_TYPE='2' ;
BY  C_AGE_GRP ;RUN;
RUN;

PROC FREQ DATA=SORT;
TABLE 
USE_INS_YN*USE_HOME_YN*LTC_HOSPITAL_YN
USE_INS_YN*USE_HOME_YN*LTC_SYM_YN
USE_INS_YN*USE_HOME_YN*LTC_ADJ_YN
/NOCOL NOROW NOPERCENT;
WHERE C_YEAR NOT IN (2020) AND C_TREATMENT=1  AND SEX_TYPE='1' ;
BY  C_AGE_GRP ;RUN;
RUN;
PROC FREQ DATA=SORT;
TABLE 
USE_INS_YN*USE_HOME_YN*LTC_HOSPITAL_YN
USE_INS_YN*USE_HOME_YN*LTC_SYM_YN
USE_INS_YN*USE_HOME_YN*LTC_ADJ_YN
/NOCOL NOROW NOPERCENT;
WHERE C_YEAR NOT IN (2020) AND C_TREATMENT=1  AND SEX_TYPE='2' ;
BY  C_AGE_GRP ;RUN;
RUN;

/*0503여기까지*/
PROC FREQ DATA=SORT;
TABLE 
APLY_1YR*C_YEAR_GRP APLY_2YR*C_YEAR_GRP APLY_3YR*C_YEAR_GRP APLY_4YR*C_YEAR_GRP APLY_5YR*C_YEAR_GRP
JUDGE_1YR*C_YEAR_GRP JUDGE_2YR*C_YEAR_GRP JUDGE_3YR*C_YEAR_GRP JUDGE_4YR*C_YEAR_GRP JUDGE_5YR*C_YEAR_GRP
GRADE_1YR*C_YEAR_GRP GRADE_2YR*C_YEAR_GRP GRADE_3YR*C_YEAR_GRP GRADE_4YR*C_YEAR_GRP GRADE_5YR*C_YEAR_GRP
/*장기요양급여*/
USE_1YR*C_YEAR_GRP USE_2YR*C_YEAR_GRP USE_3YR*C_YEAR_GRP USE_4YR*C_YEAR_GRP USE_5YR*C_YEAR_GRP
USE_INS_1YR*C_YEAR_GRP USE_INS_2YR*C_YEAR_GRP USE_INS_3YR*C_YEAR_GRP USE_INS_4YR*C_YEAR_GRP USE_INS_5YR*C_YEAR_GRP
USE_HOME_1YR*C_YEAR_GRP USE_HOME_2YR*C_YEAR_GRP USE_HOME_3YR*C_YEAR_GRP USE_HOME_4YR*C_YEAR_GRP USE_HOME_5YR*C_YEAR_GRP
/*장기요양병원*/
LTC_SYM_1YR*C_YEAR_GRP LTC_SYM_2YR*C_YEAR_GRP LTC_SYM_3YR*C_YEAR_GRP LTC_SYM_4YR*C_YEAR_GRP LTC_SYM_5YR*C_YEAR_GRP
LTC_ADJ_1YR*C_YEAR_GRP LTC_ADJ_2YR*C_YEAR_GRP LTC_ADJ_3YR*C_YEAR_GRP LTC_ADJ_4YR*C_YEAR_GRP LTC_ADJ_5YR*C_YEAR_GRP
LTC_HOSPITAL_1YR*C_YEAR_GRP LTC_HOSPITAL_2YR*C_YEAR_GRP LTC_HOSPITAL_3YR*C_YEAR_GRP LTC_HOSPITAL_4YR*C_YEAR_GRP LTC_HOSPITAL_5YR*C_YEAR_GRP
/*치료*/
OP_1YR*C_YEAR_GRP OP_2YR*C_YEAR_GRP OP_3YR*C_YEAR_GRP OP_4YR*C_YEAR_GRP OP_5YR*C_YEAR_GRP
LN_OP_1YR*C_YEAR_GRP LN_OP_2YR*C_YEAR_GRP LN_OP_3YR*C_YEAR_GRP LN_OP_4YR*C_YEAR_GRP LN_OP_5YR*C_YEAR_GRP
Wedge_OP_1YR*C_YEAR_GRP Wedge_OP_2YR*C_YEAR_GRP Wedge_OP_3YR*C_YEAR_GRP Wedge_OP_4YR*C_YEAR_GRP Wedge_OP_5YR*C_YEAR_GRP
Segmen_OP_1YR*C_YEAR_GRP Segmen_OP_2YR*C_YEAR_GRP Segmen_OP_3YR*C_YEAR_GRP Segmen_OP_4YR*C_YEAR_GRP Segmen_OP_5YR*C_YEAR_GRP
Lobe_OP_1YR*C_YEAR_GRP Lobe_OP_2YR*C_YEAR_GRP Lobe_OP_3YR*C_YEAR_GRP Lobe_OP_4YR*C_YEAR_GRP Lobe_OP_5YR*C_YEAR_GRP
Pneum_OP_1YR*C_YEAR_GRP Pneum_OP_2YR*C_YEAR_GRP Pneum_OP_3YR*C_YEAR_GRP Pneum_OP_4YR*C_YEAR_GRP Pneum_OP_5YR*C_YEAR_GRP
Others_OP_1YR*C_YEAR_GRP Others_OP_2YR*C_YEAR_GRP Others_OP_3YR*C_YEAR_GRP Others_OP_4YR*C_YEAR_GRP Others_OP_5YR*C_YEAR_GRP
CT_1YR*C_YEAR_GRP CT_2YR*C_YEAR_GRP CT_3YR*C_YEAR_GRP CT_4YR*C_YEAR_GRP CT_5YR*C_YEAR_GRP
TO_CT_1YR*C_YEAR_GRP TO_CT_2YR*C_YEAR_GRP TO_CT_3YR*C_YEAR_GRP TO_CT_4YR*C_YEAR_GRP TO_CT_5YR*C_YEAR_GRP
TA_CT_1YR*C_YEAR_GRP TA_CT_2YR*C_YEAR_GRP TA_CT_3YR*C_YEAR_GRP TA_CT_4YR*C_YEAR_GRP TA_CT_5YR*C_YEAR_GRP
IM_CT_1YR*C_YEAR_GRP IM_CT_2YR*C_YEAR_GRP IM_CT_3YR*C_YEAR_GRP IM_CT_4YR*C_YEAR_GRP IM_CT_5YR*C_YEAR_GRP
RT_1YR*C_YEAR_GRP RT_2YR*C_YEAR_GRP RT_3YR*C_YEAR_GRP RT_4YR*C_YEAR_GRP RT_5YR*C_YEAR_GRP
/NOCOL NOROW NOPERCENT
;BY SEX_TYPE C_AGE_GRP;
;RUN;


PROC FREQ DATA=SORT;
TABLE 
APLY_1YR*C_YEAR APLY_2YR*C_YEAR APLY_3YR*C_YEAR APLY_4YR*C_YEAR APLY_5YR*C_YEAR
JUDGE_1YR*C_YEAR JUDGE_2YR*C_YEAR JUDGE_3YR*C_YEAR JUDGE_4YR*C_YEAR JUDGE_5YR*C_YEAR
GRADE_1YR*C_YEAR GRADE_2YR*C_YEAR GRADE_3YR*C_YEAR GRADE_4YR*C_YEAR GRADE_5YR*C_YEAR

APLY_YN*C_YEAR
JUDGE_YN*C_YEAR
GRADE_YN*C_YEAR
/NOCOL NOROW NOPERCENT
;BY  C_AGE_GRP;
WHERE SEX_TYPE='2';
;RUN;

PROC FREQ DATA=SORT;
TABLE 
/*장기요양급여*/
USE_1YR*C_YEAR USE_2YR*C_YEAR USE_3YR*C_YEAR USE_4YR*C_YEAR USE_5YR*C_YEAR
USE_INS_1YR*C_YEAR USE_INS_2YR*C_YEAR USE_INS_3YR*C_YEAR USE_INS_4YR*C_YEAR USE_INS_5YR*C_YEAR
USE_HOME_1YR*C_YEAR USE_HOME_2YR*C_YEAR USE_HOME_3YR*C_YEAR USE_HOME_4YR*C_YEAR USE_HOME_5YR*C_YEAR

/NOCOL NOROW NOPERCENT
;BY  C_AGE_GRP;
WHERE SEX_TYPE='2';
;RUN;

PROC FREQ DATA=SORT;
TABLE 
USE_YN*C_YEAR
USE_INS_YN*C_YEAR
USE_HOME_YN*C_YEAR
/NOCOL NOROW NOPERCENT
;BY  C_AGE_GRP;
WHERE SEX_TYPE='2';
;RUN;

PROC FREQ DATA=SORT;
TABLE 
/*장기요양병원*/
LTC_SYM_1YR*C_YEAR LTC_SYM_2YR*C_YEAR LTC_SYM_3YR*C_YEAR LTC_SYM_4YR*C_YEAR LTC_SYM_5YR*C_YEAR
LTC_ADJ_1YR*C_YEAR LTC_ADJ_2YR*C_YEAR LTC_ADJ_3YR*C_YEAR LTC_ADJ_4YR*C_YEAR LTC_ADJ_5YR*C_YEAR
LTC_HOSPITAL_1YR*C_YEAR LTC_HOSPITAL_2YR*C_YEAR LTC_HOSPITAL_3YR*C_YEAR LTC_HOSPITAL_4YR*C_YEAR LTC_HOSPITAL_5YR*C_YEAR

/NOCOL NOROW NOPERCENT
;BY  C_AGE_GRP;
WHERE SEX_TYPE='2';
;RUN;

PROC FREQ DATA=SORT;
TABLE 
LTC_HOSPITAL_YN*C_YEAR
LTC_SYM_YN*C_YEAR
LTC_ADJ_YN*C_YEAR
/NOCOL NOROW NOPERCENT
;BY  C_AGE_GRP;
WHERE SEX_TYPE='2';
;RUN;

PROC FREQ DATA=SORT;
TABLE 
/*치료*/
OP_1YR*C_YEAR OP_2YR*C_YEAR OP_3YR*C_YEAR OP_4YR*C_YEAR OP_5YR*C_YEAR
LN_OP_1YR*C_YEAR LN_OP_2YR*C_YEAR LN_OP_3YR*C_YEAR LN_OP_4YR*C_YEAR LN_OP_5YR*C_YEAR
Wedge_OP_1YR*C_YEAR Wedge_OP_2YR*C_YEAR Wedge_OP_3YR*C_YEAR Wedge_OP_4YR*C_YEAR Wedge_OP_5YR*C_YEAR
Segmen_OP_1YR*C_YEAR Segmen_OP_2YR*C_YEAR Segmen_OP_3YR*C_YEAR Segmen_OP_4YR*C_YEAR Segmen_OP_5YR*C_YEAR
Lobe_OP_1YR*C_YEAR Lobe_OP_2YR*C_YEAR Lobe_OP_3YR*C_YEAR Lobe_OP_4YR*C_YEAR Lobe_OP_5YR*C_YEAR
Pneum_OP_1YR*C_YEAR Pneum_OP_2YR*C_YEAR Pneum_OP_3YR*C_YEAR Pneum_OP_4YR*C_YEAR Pneum_OP_5YR*C_YEAR
Others_OP_1YR*C_YEAR Others_OP_2YR*C_YEAR Others_OP_3YR*C_YEAR Others_OP_4YR*C_YEAR Others_OP_5YR*C_YEAR

/NOCOL NOROW NOPERCENT
;BY  C_AGE_GRP;
WHERE SEX_TYPE='2';
;RUN;


PROC FREQ DATA=SORT;
TABLE 
SURGERY_NM*C_YEAR
OP_YN*C_YEAR
LN_OP_YN*C_YEAR
Wedge_OP_YN*C_YEAR
Segmen_OP_YN*C_YEAR
Lobe_OP_YN*C_YEAR
Pneum_OP_YN*C_YEAR
Others_OP_YN*C_YEAR
/NOCOL NOROW NOPERCENT
;BY  C_AGE_GRP;
WHERE SEX_TYPE='2';
;RUN;


PROC FREQ DATA=SORT;
TABLE 
CT_1YR*C_YEAR CT_2YR*C_YEAR CT_3YR*C_YEAR CT_4YR*C_YEAR CT_5YR*C_YEAR
TO_CT_1YR*C_YEAR TO_CT_2YR*C_YEAR TO_CT_3YR*C_YEAR TO_CT_4YR*C_YEAR TO_CT_5YR*C_YEAR
TA_CT_1YR*C_YEAR TA_CT_2YR*C_YEAR TA_CT_3YR*C_YEAR TA_CT_4YR*C_YEAR TA_CT_5YR*C_YEAR
IM_CT_1YR*C_YEAR IM_CT_2YR*C_YEAR IM_CT_3YR*C_YEAR IM_CT_4YR*C_YEAR IM_CT_5YR*C_YEAR

RT_1YR*C_YEAR RT_2YR*C_YEAR RT_3YR*C_YEAR RT_4YR*C_YEAR RT_5YR*C_YEAR

/NOCOL NOROW NOPERCENT
;BY  C_AGE_GRP;
WHERE SEX_TYPE='2';
;RUN;

PROC FREQ DATA=SORT;
TABLE 
CHEMO_NM*C_YEAR
CT_YN*C_YEAR
TO_CT_YN*C_YEAR
TA_CT_YN*C_YEAR
IM_CT_YN*C_YEAR

RT_YN*C_YEAR
/NOCOL NOROW NOPERCENT
;BY  C_AGE_GRP;
WHERE SEX_TYPE='2';
;RUN;
