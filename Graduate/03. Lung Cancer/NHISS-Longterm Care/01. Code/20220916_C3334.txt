libname raw "/userdata20/rroom029/data_source/user_data";/*raw data*/
/*libname mywork "/userdata20/rroom029/mywork"; work, 추가됨*/
libname db "/userdata20/rroom029/data_out/data_store"; 
libname db_out "/userdata20/rroom029/data_out/data_out";


/****** STEP1. T20에서 폐암 정의 가능한 환자 추출 ******/
%MACRO MONTHLY(STRT, STP);
%DO YM=&STRT. %TO &STP.;
%IF %SUBSTR(&YM,5)=13 %THEN %LET YM=%EVAL(%SUBSTR(&YM,1,4)+1)01;
%IF &YM.=&STRT. %THEN %DO; %LET CREATE_OR_INSERT=CREATE TABLE; %LET AS_YN=AS; %END;
%ELSE %DO; %LET CREATE_OR_INSERT=INSERT INTO; %LET AS_YN=; %END;
PROC SQL; &CREATE_OR_INSERT. TARGET_T20 &AS_YN. 
SELECT DISTINCT A.INDI_DSCM_NO, CMN_KEY
	, SICK_SYM1, SICK_SYM2, SICK_SYM3, SICK_SYM4, SICK_SYM5
	, MDCARE_STRT_DT, FORM_CD, SPCF_SYM_TYPE
FROM RAW.TARGET_REQ202102931 AS A /*데이터명 수정*/
INNER JOIN RAW.T20_&YM. AS B
ON A.INDI_DSCM_NO=B.INDI_DSCM_NO
WHERE B.ED_RC_TOT_AMT^=. AND B.ED_RC_TOT_AMT^=0 AND FORM_CD IN ('02','03')
	AND CASE_YN=1
; QUIT;
%END; %MEND MONTHLY; 
%MONTHLY(STRT=200201, STP=202012);


/****** STEP2. T40에서 폐암 정의 가능한 환자 추출 ******/
%MACRO MONTHLY(STRT, STP);
%DO YM=&STRT. %TO &STP.;
%IF %SUBSTR(&YM,5)=13 %THEN %LET YM=%EVAL(%SUBSTR(&YM,1,4)+1)01;
%IF &YM.=&STRT. %THEN %DO; %LET CREATE_OR_INSERT=CREATE TABLE; %LET AS_YN=AS; %END;
%ELSE %DO; %LET CREATE_OR_INSERT=INSERT INTO; %LET AS_YN=; %END;
PROC SQL; &CREATE_OR_INSERT. TARGET_T40 &AS_YN. 
SELECT DISTINCT B.CMN_KEY, B.MCEX_SICK_SYM, B.SICK_CLSF_TYPE
FROM TARGET_T20 AS A
INNER JOIN RAW.T40_&YM. AS B
ON A.CMN_KEY=B.CMN_KEY
WHERE B.SICK_CLSF_TYPE^='3'
; QUIT;
%END; %MEND MONTHLY; 
%MONTHLY(STRT=200201, STP=202012);

/****** STEP3. 폐암환자 대상자 정의를 위한 RAW_DB 구축 ******/
PROC SORT DATA=TARGET_T20; BY CMN_KEY; RUN;
PROC SORT DATA=TARGET_T40; BY CMN_KEY; RUN;
DATA DB.TARGET_RAW; MERGE TARGET_T20 (IN=A) TARGET_T40 (IN=B); BY CMN_KEY; IF A=1 AND B=1; RUN;


/****** STEP4. 대상자 조작적 정의 ******/
/*DB.TARGET_RAW에서 C코드로 산정특례 받은 기록만 선택*/
PROC SQL;
CREATE TABLE VC_RAW AS
SELECT DISTINCT *
FROM DB.TARGET_RAW
WHERE SUBSTR(MCEX_SICK_SYM,1,1) IN ('C') 
AND SUBSTR(SPCF_SYM_TYPE,1,4) IN ('V011', 'V027', 'V193', 'V194')
ORDER BY INDI_DSCM_NO, MDCARE_STRT_DT
;QUIT;

/*최초로 산특이 기록된 CMN_KEY : 최초 산특 명세서에 C코드가 여러개일 수 있기 때문*/
DATA FIRST_VC_CMN (KEEP=/*INDI_DSCM_NO*/ CMN_KEY /*MDCARE_STRT_DT SPCF_SYM_TYPE MCEX_SICK_SYM*/); 
SET VC_RAW; IF FIRST.INDI_DSCM_NO; BY INDI_DSCM_NO; RUN;

/*최초 산특 명세서의 C코드로 산정특례 받은 내역 전체*/
PROC SQL;
CREATE TABLE FIRST_VC_RAW AS
SELECT A.*
FROM VC_RAW AS A
INNER JOIN FIRST_VC_CMN AS B
ON A.CMN_KEY=B.CMN_KEY
;QUIT;

/*[1] 최초로 암 산정특례 받은 건이 폐암인 환자의 ID 및 요양개시일*/
PROC SQL; CREATE TABLE LC_INDI AS
SELECT DISTINCT INDI_DSCM_NO, INPUT(MDCARE_STRT_DT,yymmdd8.) AS MS_DATE
FROM FIRST_VC_RAW
WHERE SUBSTR(MCEX_SICK_SYM,1,3) IN ('C33','C34') 
ORDER BY INDI_DSCM_NO
; QUIT;
/*DISTINCT 환자수랑 동일한지 체크 : O
PROC SQL; CREATE TABLE INDI_N_CHECK AS SELECT DISTINCT INDI_DSCM_NO FROM LC_INDI; QUIT;*/

PROC SQL; CREATE TABLE OC_INDI AS
SELECT DISTINCT INDI_DSCM_NO, INPUT(MDCARE_STRT_DT,yymmdd8.) AS MS_DATE
FROM FIRST_VC_RAW
WHERE SUBSTR(MCEX_SICK_SYM,1,3) NOT IN ('C33','C34') 
ORDER BY INDI_DSCM_NO
; QUIT;
/*DISTINCT 환자수랑 동일한지 체크 : O 
PROC SQL; CREATE TABLE INDI_N_CHECK AS SELECT DISTINCT INDI_DSCM_NO FROM OC_INDI; QUIT;*/


/*[2] 입원 1회 이상인 환자의 ID 및 최초입원일*/
PROC SQL; CREATE TABLE IN_TARGET AS
SELECT DISTINCT INDI_DSCM_NO, INPUT(MDCARE_STRT_DT,yymmdd8.) AS MS_DATE
FROM DB.TARGET_RAW
WHERE SUBSTR(MCEX_SICK_SYM,1,3) IN ('C33','C34') AND FORM_CD IN ('02')
ORDER BY INDI_DSCM_NO, MS_DATE
; QUIT;

DATA IN_INDI; SET IN_TARGET ; BY INDI_DSCM_NO; IF FIRST.INDI_DSCM_NO; RUN;
/*DISTINCT 환자수랑 동일한지 체크 : O 
PROC SQL; CREATE TABLE INDI_N_CHECK AS SELECT DISTINCT INDI_DSCM_NO FROM IN_INDI; QUIT;*/


/*[3] 외래 365일내 3회 이상 환자의 ID 및 최초 외래일*/
PROC SQL; CREATE TABLE IN_TARGET AS
SELECT DISTINCT INDI_DSCM_NO, INPUT(MDCARE_STRT_DT,yymmdd8.) AS MS_DATE
FROM DB.TARGET_RAW
WHERE SUBSTR(MCEX_SICK_SYM,1,3) IN ('C33','C34') AND FORM_CD IN ('03')
ORDER BY INDI_DSCM_NO, MS_DATE
; QUIT;

/*외래 간 간격 계산*/
DATA OUT_DIFF; SET IN_TARGET; BY INDI_DSCM_NO;
DIFF1=DIF(MS_DATE);
DIFF2=DIF2(MS_DATE);
IF FIRST.INDI_DSCM_NO THEN DO; DIFF1=.; DIFF2=.; N=1; END; ELSE N+1;
IF N=2 THEN DIFF2=.; 
RUN;

/*3회 이상 방문 & 간격이 365일 이하이면서 최초인 것을 선택*/
PROC SQL;
CREATE TABLE OUT_DIFF365 AS
SELECT INDI_DSCM_NO, MS_DATE, DIFF2, N
FROM OUT_DIFF
WHERE N >= 3 AND DIFF2 <= 365
;QUIT;
DATA OUT_FIRSTDIFF365; SET OUT_DIFF365; IF FIRST.INDI_DSCM_NO; BY INDI_DSCM_NO; RUN;

/*최초 외래일의 요양개시일자를 선택*/
PROC SQL;
CREATE TABLE OUT_INDI AS
SELECT A.INDI_DSCM_NO, B.MS_DATE
FROM OUT_FIRSTDIFF365 AS A
INNER JOIN OUT_DIFF AS B
ON A.INDI_DSCM_NO=B.INDI_DSCM_NO AND (A.N-2)=B.N
;QUIT;


/*[1],[2],[3], 타암 데이터셋 조인*/
PROC SORT DATA=IN_INDI; BY INDI_DSCM_NO; RUN;
PROC SORT DATA=OUT_INDI; BY INDI_DSCM_NO; RUN;

DATA TARGET;
MERGE LC_INDI (RENAME=(MS_DATE=DT_VCODE) IN=A)
			IN_INDI (RENAME=(MS_DATE=DT_IN) IN=B)
			OUT_INDI (RENAME=(MS_DATE=DT_OUT) IN=C)
			OC_INDI (RENAME=(MS_DATE=OC_STRT_DT) IN=D)
			;
BY INDI_DSCM_NO;
IF A=1 OR B=1 OR C=1
; RUN;

/*[1],[2],[3], 중 최초일자를 폐암 진단일로 선택*/
DATA TARGET_LC_OC (KEEP=INDI_DSCM_NO LC_STRT_DT OC_STRT_DT); SET TARGET;
LC_STRT_DT = MIN(DT_VCODE, DT_IN, DT_OUT)
; RUN;

/*폐암 진단일과 타암 진단일을 비교하여 INDICATOR VAR 생성*/
DATA DB.TARGET_INDI;
SET TARGET_LC_OC;
IF (OC_STRT_DT^=. AND OC_STRT_DT < LC_STRT_DT) THEN PRE_C=1;
ELSE IF (OC_STRT_DT^=. AND OC_STRT_DT >= LC_STRT_DT ) THEN PRE_C=0;
ELSE IF (OC_STRT_DT=.) THEN PRE_C=0; /*폐암, 타암 동시 산특 최초면 PRE_C=0*/
RUN;



/*폐암 진단일을 기준으로 연도별 신환자 데이터셋 만들기*/
%MACRO TARGET_YEAR;
%DO YEAR=2008 %TO 2020;
PROC SQL; CREATE TABLE DB.TARGET_&YEAR. AS
SELECT DISTINCT INDI_DSCM_NO, PRE_C, YEAR(LC_STRT_DT) AS C_YEAR, LC_STRT_DT AS C_DATE
FROM TARGET_INDI
WHERE YEAR(LC_STRT_DT) =  &YEAR.
ORDER BY INDI_DSCM_NO
;QUIT;

/*자격정보 붙이기 : 성별 연령 소득분위 거주지*/
PROC SQL; CREATE TABLE DB.TG_BFC_&YEAR. AS
SELECT DISTINCT A.*, B.SEX_TYPE, C_YEAR-INPUT(B.BYEAR,10.) AS C_AGE, CEIL(B.CALC_CTRB_VTILE_FD/4) AS INC_QUINTILE, SUBSTR(B.RVSN_ADDR_CD,1,2) AS SIDO_CD
FROM DB.TARGET_&YEAR. AS A
LEFT JOIN RAW.BFC_&YEAR. AS B /*진단연도의 자격정보를 이용*/
ON A.INDI_DSCM_NO=B.INDI_DSCM_NO 
WHERE B.SEX_TYPE IS NOT NULL AND B.BYEAR IS NOT NULL AND B.RVSN_ADDR_CD IS NOT NULL ; QUIT; 
/*LEFT JOIN다음에 WHERE써서 성별 출생연도 거주코드 없는것 제거*/

/*연도별 환자 수 COUNT*/
PROC SQL; INSERT INTO PATIENT_NO 
SELECT &YEAR. AS YEAR, COUNT(*) AS N, SUM(CASE WHEN PRE_C=0 THEN 1 ELSE 0 END) AS N_0
FROM TG_BFC_&YEAR.; QUIT;

%END;
%MEND TARGET_YEAR;

PROC SQL; CREATE TABLE PATIENT_NO (YEAR NUM, N NUM, N_0 NUM) ;QUIT;
%TARGET_YEAR;


DATA DB.TARGET_IDBFC; SET DB.TG_BFC_2008-DB.TG_BFC_2020; C_YEAR=YEAR(C_DATE); RUN;

/*연도, PRE_C, 연령, 성별별 환자 수*/
PROC SQL; CREATE TABLE DB.TG_SEXAGE AS 
SELECT DISTINCT C_YEAR, PRE_C, SEX_TYPE, FLOOR(C_AGE/10) AS C_AGEGRP, FLOOR(C_AGE/5) AS C_AGEGRP2, COUNT(DISTINCT  INDI_DSCM_NO) AS CNT
FROM DB.TARGET_IDBFC GROUP BY C_YEAR, PRE_C, SEX_TYPE, FLOOR(C_AGE/10), FLOOR(C_AGE/5); QUIT;

PROC SORT DATA=DB.TARGET_IDBFC NODUPKEY; BY INDI_DSCM_NO;RUN; /*371,254*/

/*중복확인 : UNIQUE PATIENT : 371254
PROC SQL; CREATE TABLE ID AS SELECT COUNT(DISTINCT INDI_DSCM_NO) AS N
FROM DB.TARGET_IDBFC ;QUIT;*/

/*사망일자 붙이기*/
PROC SQL; CREATE TABLE TARGET_IDBFCDTH AS SELECT A.*, INPUT(B.DTH_ASSMD_DT,yymmdd8.) AS DTH_DATE/*사망일자*/ 
FROM DB.TARGET_IDBFC AS A LEFT JOIN RAW.TG_DTH AS B /*DTH -> TG_DTH로 수정*/
ON A.INDI_DSCM_NO=B.INDI_DSCM_NO; QUIT;/*371254*/ 


DATA DB.TARGET_IDBFCDTH; SET TARGET_IDBFCDTH;
IF INC_QUINTILE=. THEN INC_QUINTILE=0; /*결측치는 MEDICAID 등급으로 */

FORMAT RESID_GRP $20.;
IF SIDO_CD IN ('11','26','27','28','29','30','31') THEN RESID_GRP='01.METRO';
ELSE RESID_GRP='02.NON-METRO';

FORMAT C_DATE yymmdd10. DTH_DATE yymmdd10.; 
IF C_AGE >= 65 THEN C_AGE_GRP1='02. 65+'; ELSE C_AGE_GRP1='02. 65-';
IF 65<=C_AGE<= 74 THEN C_AGE_GRP2='01. 65-74';
ELSE IF 75<=C_AGE<=84 THEN C_AGE_GRP2='02. 75-84';
ELSE IF 85<=C_AGE THEN C_AGE_GRP2='03. 85+';
IF 40<=C_AGE<=64 THEN C_AGE_GRP3='01. 40-64';
ELSE IF 65<=C_AGE<=74 THEN C_AGE_GRP3='02. 65-74';
ELSE IF 75<=C_AGE THEN C_AGE_GRP3='03. 75';
IF 2009<=C_YEAR<=2011 THEN C_YEAR_GRP1='01. 2009-2011';
ELSE IF 2012<=C_YEAR<=2014 THEN C_YEAR_GRP1='02. 2012-2014';
ELSE IF 2015<=C_YEAR<=2017 THEN C_YEAR_GRP1='03. 2015-2017';
ELSE IF 2018<=C_YEAR<=2020 THEN C_YEAR_GRP1='04. 2018-2020';


IF DTH_DATE^=. THEN DO;SURVTIME=DTH_DATE-C_DATE; DEATH=1; SURVIVAL=0; END;
ELSE IF DTH_DATE=. THEN DO;SURVTIME=INPUT(PUT('20211021',8.), YYMMDD10.)-C_DATE; DEATH=0; SURVIVAL=1;END;
IF SURVTIME<=0 THEN SURVTIME=0.5;

IF DEATH=1 AND SURVTIME<=365 THEN DO;DEATH_1YR=1; SURVIVAL_1YR=0; SURVTIME_1YR=SURVTIME;END;
ELSE IF DEATH=1 AND SURVTIME>365 THEN DO;DEATH_1YR=0; SURVIVAL_1YR=1; SURVTIME_1YR=365;END;
ELSE IF DEATH=0 AND SURVTIME<=365 THEN DO;DEATH_1YR=0; SURVIVAL_1YR=1; SURVTIME_1YR=SURVTIME;END;
ELSE IF DEATH=0 AND SURVTIME>365 THEN DO;DEATH_1YR=0; SURVIVAL_1YR=1;  SURVTIME_1YR=365;END;

IF DEATH=1 AND SURVTIME<=365*2 THEN DO;DEATH_2YR=1; SURVIVAL_2YR=0; SURVTIME_2YR=SURVTIME;END;
ELSE IF DEATH=1 AND SURVTIME>365*2 THEN DO;DEATH_2YR=0;  SURVIVAL_2YR=1; SURVTIME_2YR=365*2;END;
ELSE IF DEATH=0 AND SURVTIME<=365*2 THEN DO;DEATH_2YR=0; SURVIVAL_2YR=1; SURVTIME_2YR=SURVTIME;END;
ELSE IF DEATH=0 AND SURVTIME>365*2 THEN DO;DEATH_2YR=0;  SURVIVAL_2YR=1; SURVTIME_2YR=365*2;END;

IF DEATH=1 AND SURVTIME<=365*3 THEN DO;DEATH_3YR=1; SURVIVAL_3YR=0; SURVTIME_3YR=SURVTIME;END;
ELSE IF DEATH=1 AND SURVTIME>365*3 THEN DO;DEATH_3YR=0; SURVIVAL_3YR=1; SURVTIME_3YR=365*3;END;
ELSE IF DEATH=0 AND SURVTIME<=365*3 THEN DO;DEATH_3YR=0; SURVIVAL_3YR=1; SURVTIME_3YR=SURVTIME;END;
ELSE IF DEATH=0 AND SURVTIME>365*3 THEN DO;DEATH_3YR=0; SURVIVAL_3YR=1; SURVTIME_3YR=365*3;END;

IF DEATH=1 AND SURVTIME<=365*5 THEN DO;DEATH_5YR=1; SURVIVAL_5YR=0; SURVTIME_5YR=SURVTIME;END;
ELSE IF DEATH=1 AND SURVTIME>365*5 THEN DO;DEATH_5YR=0; SURVIVAL_5YR=1; SURVTIME_5YR=365*5;END;
ELSE IF DEATH=0 AND SURVTIME<=365*5 THEN DO;DEATH_5YR=0; SURVIVAL_5YR=1; SURVTIME_5YR=SURVTIME;END;
ELSE IF DEATH=0 AND SURVTIME>365*5 THEN DO;DEATH_5YR=0; SURVIVAL_5YR=1; SURVTIME_5YR=365*5;END;
RUN;

DATA DB.TARGET_ID(KEEP=INDI_DSCM_NO); SET DB.TARGET_IDBFCDTH;RUN;


/******************************************************/


/*연도, 연령, PRE_C별 환자 수 */
PROC SQL; CREATE TABLE ID_NO0 AS
SELECT C_YEAR, COUNT(DISTINCT INDI_DSCM_NO) AS CNT
FROM DB.TARGET_DTH
WHERE (C_AGE >= 65 AND C_AGE<75) AND PRE_C=0
GROUP BY C_YEAR
; QUIT;

PROC SQL; CREATE TABLE ID_NO AS
SELECT C_YEAR, COUNT(DISTINCT INDI_DSCM_NO) AS CNT
FROM DB.TARGET_DTH
WHERE (C_AGE >= 65 AND C_AGE<75) 
GROUP BY C_YEAR
; QUIT;

PROC SQL; CREATE TABLE ID_NO0 AS
SELECT C_YEAR, COUNT(DISTINCT INDI_DSCM_NO) AS CNT
FROM DB.TARGET_DTH
WHERE (C_AGE >= 75 AND C_AGE<85) AND PRE_C=0
GROUP BY C_YEAR
; QUIT;

PROC SQL; CREATE TABLE ID_NO AS
SELECT C_YEAR, COUNT(DISTINCT INDI_DSCM_NO) AS CNT
FROM DB.TARGET_DTH
WHERE (C_AGE >= 75 AND C_AGE<85) 
GROUP BY C_YEAR
; QUIT;

PROC SQL; CREATE TABLE ID_NO0 AS
SELECT C_YEAR, COUNT(DISTINCT INDI_DSCM_NO) AS CNT
FROM DB.TARGET_DTH
WHERE (C_AGE >= 85 )  AND PRE_C=0
GROUP BY C_YEAR
; QUIT;

PROC SQL; CREATE TABLE ID_NO AS
SELECT C_YEAR, COUNT(DISTINCT INDI_DSCM_NO) AS CNT
FROM DB.TARGET_DTH
WHERE (C_AGE >= 85 ) 
GROUP BY C_YEAR
; QUIT;




