

/*********2009 CANCER PATIENTS VS GENERAL POPULATION**********/

PROC SQL; CREATE TABLE SAPTMP.C_TARGET3B AS SELECT *  FROM DB.C_TARGET3A WHERE D_YEAR=2009;QUIT; /*N=206270*/
PROC SQL; CREATE TABLE SAPTMP.C_LUNG AS SELECT *  FROM DB.C_TARGET3A WHERE D_YEAR=2009 AND C_ICD24="C33-C34";QUIT; /*N=20778*/

%MACRO GENPOP;  %DO Y=2009 %TO 2009; %MACRO GENPOP2; %DO M=&Y.01 %TO &Y.01;
PROC SQL; 
connect to saphana as x1(server=pepper1 port=30015 user=Nhis_&사번 password=!Nhis_&사번.1 readbuff=32767 insertbuff=32767);
execute(
CREATE TABLE C_LUNG2 AS (
	SELECT A.INDI_DSCM_NO, A.SEX_TYPE, A.AGE_GRP, B.RVSN_ADDR_CD
	FROM NHIS_&사번..C_LUNG AS A
	INNER JOIN "NHISBDA"."HHDT_POPULATION_MM" AS B
	ON A.INDI_DSCM_NO=B.INDI_DSCM_NO
	WHERE  B.STD_YYYYMM=%nrbquote('&M.') AND B.PRTY=1 AND B.INDI_DSCM_NO IS NOT NULL AND B.INDI_DSCM_NO <> 0 
)) by x1;
disconnect from x1;
QUIT;
%END; %MEND GENPOP2; %GENPOP2; %END; %MEND GENPOP; %GENPOP;

/*2009년 일반인구 표본추출*/
/*method1: Frequeuncy Matching (age, sex, sido)*/
PROC SQL;
connect to saphana as x1(server=pepper1 port=30015 user=Nhis_&사번 password=!Nhis_&사번.1 readbuff=32767 insertbuff=32767);
CREATE TABLE DB.LUNG_2009 AS 
SELECT INDI_DSCM_NO,AGE_GRP, SEX_TYPE,SIDO_CD FROM CONNECTION TO X1(
SELECT INDI_DSCM_NO,AGE_GRP,SEX_TYPE,SUBSTR(RVSN_ADDR_CD,1,2) AS SIDO_CD
FROM NHIS_&사번..C_LUNG2);
disconnect from x1;
QUIT;

DATA DB.LUNG_2009; SET DB.LUNG_2009;
FORMAT SIDO_NM $15.;
IF SIDO_CD=' ' THEN SIDO_NM=' ';
ELSE IF SIDO_CD='36' THEN SIDO_NM='세종특별자치시';
ELSE IF SIDO_CD='11' THEN SIDO_NM='서울특별시';
ELSE IF SIDO_CD='26' THEN SIDO_NM='부산광역시';
ELSE IF SIDO_CD='27' THEN SIDO_NM='대구광역시';
ELSE IF SIDO_CD='28' THEN SIDO_NM='인천광역시';
ELSE IF SIDO_CD='29' THEN SIDO_NM='광주광역시';
ELSE IF SIDO_CD='30' THEN SIDO_NM='대전광역시';
ELSE IF SIDO_CD='31' THEN SIDO_NM='울산광역시';
ELSE IF SIDO_CD='41' THEN SIDO_NM='경기도';
ELSE IF SIDO_CD='42' THEN SIDO_NM='강원도';
ELSE IF SIDO_CD='43' THEN SIDO_NM='충청북도';
ELSE IF SIDO_CD='44' THEN SIDO_NM='충청남도';
ELSE IF SIDO_CD='45' THEN SIDO_NM='전라북도';
ELSE IF SIDO_CD='46' THEN SIDO_NM='전라남도';
ELSE IF SIDO_CD='47' THEN SIDO_NM='경상북도';
ELSE IF SIDO_CD='48' THEN SIDO_NM='경상남도';
ELSE IF SIDO_CD='49' THEN SIDO_NM='제주도';
ELSE IF SIDO_CD='50' THEN SIDO_NM='제주특별자치도';
ELSE IF SIDO_CD='90' THEN SIDO_NM=' ';
ELSE IF SIDO_CD='z' THEN SIDO_NM=' ';
RUN;

PROC SORT DATA=DB.LUNG_2009 ; BY SEX_TYPE AGE_GRP SIDO_CD; 
WHERE SEX_TYPE^=" " AND AGE_GRP^=. AND SIDO_CD^=" " ;RUN; /*20581*/
PROC SQL; CREATE TABLE SAPTMP.LUNG_2009 AS SELECT *  FROM DB.LUNG_2009; QUIT; 

/*사망DB*/
PROC SQL;
connect to saphana as x1(server=pepper1 port=30015 user=Nhis_&사번 password=!Nhis_&사번.1 readbuff=32767 insertbuff=32767);
CREATE TABLE DB.LUNG_2009_DTH AS 
SELECT * FROM CONNECTION TO X1(
SELECT *
FROM LUNG_2009 AS A 
LEFT JOIN "NHISBDA"."HHDT_DEATH" AS B
	ON A.INDI_DSCM_NO=B.INDI_DSCM_NO
); disconnect from x1;
QUIT;

PROC SORT DATA=DB.C_HFVT_TBNYBASE_ID3;BY INDI_DSCM_NO ; RUN;
PROC SORT DATA=DB.LUNG_2009_DTH;BY INDI_DSCM_NO ; RUN;
PROC SORT DATA=DB.LUNG_2009_DTH OUT=TMP;BY DTH_DATE ; RUN; /*2020.11.17*/
PROC SQL; CREATE TABLE TMP AS SELECT  MAX(DTH_ASSMD_DT) AS A, MAX(DTH_HM_DT) AS B, MAX(DTH_BFC_DT) AS C FROM DB.N_CAN_POP_2009_DTH; QUIT; /*2020.11.24*/

DATA DB.LUNG_2009_DTH2;MERGE  DB.LUNG_2009_DTH(IN=A) DB.C_HFVT_TBNYBASE_ID3;BY INDI_DSCM_NO ; IF A;RUN;

DATA DB.LUNG_2009_DTH2; SET DB.LUNG_2009_DTH2;
IF DTH_ASSMD_DT^=" " OR DTH_HM_DT^=" " OR DTH_BFC_DT^=" " THEN DEATH=1; ELSE DEATH=0;

IF DTH_ASSMD_DT^=" " THEN DTH_DATE=INPUT(PUT(DTH_ASSMD_DT,8.),yymmdd8.);
ELSE IF DTH_HM_DT^=" " THEN DTH_DATE=INPUT(PUT(DTH_HM_DT ,8.),yymmdd8.);
ELSE IF DTH_BFC_DT^=" " THEN DTH_DATE=INPUT(PUT(DTH_BFC_DT,8.),yymmdd8.);
D_YR=YEAR(DTH_DATE);
LUNG_DATE=INPUT(PUT(MDCARE_STRT_DT,8.),yymmdd8.);

IF DEATH=1  THEN DO; SURVTIME=DTH_DATE-LUNG_DATE; END;
ELSE DO; SURVTIME=INPUT(PUT('20201124',8.),yymmdd8.)-LUNG_DATE; DEATH=0; END;

IF SURVTIME=0 THEN SURVTIME=0.5;
SURVTIME_M=CEIL(SURVTIME/(365/12));
IF DEATH=0 AND SURVTIME_M>=112 THEN SURVTIME_M=112;

IF SURVTIME>365*5 THEN SURV5YR=1; ELSE SURV5YR=0;
RUN;

PROC FREQ DATA=DB.LUNG_2009_DTH2; TABLE SEX_TYPE*AGE_GRP2*SURV5YR /NOCOL NOROW NOPERCENT;RUN;
PROC FREQ DATA=DB.CONTROL_LUNG_dth; TABLE  SEX_TYPE*AGE_GRP2*SURV5YR/NOCOL NOROW NOPERCENT;RUN;

PROC FREQ DATA=DB.LUNG_2009_DTH2; TABLE SEX_TYPE*AGE_GRP2*SIDO_CD /NOCOL NOROW NOPERCENT;RUN;
PROC FREQ DATA=DB.CONTROL_LUNG_dth; TABLE  SEX_TYPE*AGE_GRP2*SIDO_CD/NOCOL NOROW NOPERCENT;RUN;

DATA DB.LUNG_INDI; SET DB.LUNG_2009_DTH2; KEEP INDI_DSCM_NO SURV5YR;RUN;
DATA DB.LUNG_CONTORL_INDI; SET DB.CONTROL_LUNG_dth; KEEP INDI_DSCM_NO SURV5YR;RUN;

DATA DB.CONTROL_LUNG;SET DB.CONTROL_LUNG;
KEEP
SEX_TYPE
AGE_GRP
SIDO_CD
INDI_DSCM_NO
DEATH
SURVTIME
YEND_POTM_AGE_ID
;RUN;
PROC SQL; CREATE TABLE SAPTMP.LUNG_CONTROL AS SELECT *  FROM DB.CONTROL_LUNG; QUIT; 

/*사망DB*/
PROC SQL;
connect to saphana as x1(server=pepper1 port=30015 user=Nhis_&사번 password=!Nhis_&사번.1 readbuff=32767 insertbuff=32767);
CREATE TABLE DB.CONTROL_LUNG_dth AS 
SELECT * FROM CONNECTION TO X1(
SELECT *
FROM LUNG_CONTROL AS A 
LEFT JOIN "NHISBDA"."HHDT_DEATH" AS B
	ON A.INDI_DSCM_NO=B.INDI_DSCM_NO
); disconnect from x1;
QUIT;

DATA DB.CONTROL_LUNG_dth; SET DB.CONTROL_LUNG_dth;

IF DTH_ASSMD_DT^=" " OR DTH_HM_DT^=" " OR DTH_BFC_DT^=" " THEN DEATH=1; ELSE DEATH=0;

IF DEATH=1 AND DTH_ASSMD_DT^=" " THEN DTH_DATE=INPUT(PUT(DTH_ASSMD_DT,8.),yymmdd8.);
ELSE IF DEATH=1 AND DTH_HM_DT^=" " THEN DTH_DATE=INPUT(PUT(DTH_HM_DT ,8.),yymmdd8.);
ELSE IF DEATH=1 AND DTH_BFC_DT^=" " THEN DTH_DATE=INPUT(PUT(DTH_BFC_DT,8.),yymmdd8.);

IF DEATH=1  THEN DO; SURVTIME=DTH_DATE-INPUT(PUT('20090101',8.),yymmdd8.); END;
ELSE DO; SURVTIME=INPUT(PUT('20201124',8.),yymmdd8.)-INPUT(PUT('20090101',8.),yymmdd8.); DEATH=0; END;

IF SURVTIME=0 THEN SURVTIME=0.5;
IF SURVTIME^=. AND SURVTIME>=0 THEN SURVTIME_M=INT(SURVTIME/(365/12));
IF SURVTIME<0 THEN DO; SURVTIME=.; SURVTIME_M=.;END;

SURVTIME_M=CEIL(SURVTIME/(365/12));

IF SURVTIME>365*5 THEN SURV5YR=1; ELSE SURV5YR=0;
IF YEND_POTM_AGE_ID=. THEN AGE_GRP2=.;
ELSE IF YEND_POTM_AGE_ID^=. AND YEND_POTM_AGE_ID<=9 THEN AGE_GRP2=1;
ELSE IF YEND_POTM_AGE_ID^=. AND YEND_POTM_AGE_ID<=19 THEN AGE_GRP2=2;
ELSE IF YEND_POTM_AGE_ID^=. AND YEND_POTM_AGE_ID<=29 THEN AGE_GRP2=3;
ELSE IF YEND_POTM_AGE_ID^=. AND YEND_POTM_AGE_ID<=39 THEN AGE_GRP2=4;
ELSE IF YEND_POTM_AGE_ID^=. AND YEND_POTM_AGE_ID<=49 THEN AGE_GRP2=5;
ELSE IF YEND_POTM_AGE_ID^=. AND YEND_POTM_AGE_ID<=59 THEN AGE_GRP2=6;
ELSE IF YEND_POTM_AGE_ID^=. AND YEND_POTM_AGE_ID<=69 THEN AGE_GRP2=7;
ELSE IF YEND_POTM_AGE_ID^=. AND YEND_POTM_AGE_ID<=79 THEN AGE_GRP2=8;
ELSE IF YEND_POTM_AGE_ID^=. AND YEND_POTM_AGE_ID<=89 THEN AGE_GRP2=9;
ELSE IF YEND_POTM_AGE_ID^=. AND YEND_POTM_AGE_ID>89 THEN AGE_GRP2=10;
ELSE AGE_GRP2=.;


IF YEND_POTM_AGE_ID^=. AND YEND_POTM_AGE_ID<65 THEN AGE_GRP65=0;
ELSE IF YEND_POTM_AGE_ID^=. AND YEND_POTM_AGE_ID>=65 THEN AGE_GRP65=1;
ELSE AGE_GRP65=.;
RUN;

DATA DB.N_CAN_POP_2009_DTH; SET DB.N_CAN_POP_2009_DTH; 

IF DTH_ASSMD_DT^=" " OR DTH_HM_DT^=" " OR DTH_BFC_DT^=" " THEN DEATH=1; ELSE DEATH=0;

IF DEATH=1 AND DTH_ASSMD_DT^=" " THEN DTH_DATE=INPUT(PUT(DTH_ASSMD_DT,8.),yymmdd8.);
ELSE IF DEATH=1 AND DTH_HM_DT^=" " THEN DTH_DATE=INPUT(PUT(DTH_HM_DT ,8.),yymmdd8.);
ELSE IF DEATH=1 AND DTH_BFC_DT^=" " THEN DTH_DATE=INPUT(PUT(DTH_BFC_DT,8.),yymmdd8.);

IF DEATH=1  THEN DO; SURVTIME=DTH_DATE-INPUT(PUT('20090101',8.),yymmdd8.); END;
ELSE DO; SURVTIME=INPUT(PUT('20201124',8.),yymmdd8.)-INPUT(PUT('20090101',8.),yymmdd8.); DEATH=0; END;

IF SURVTIME=0 THEN SURVTIME=0.5;
IF SURVTIME^=. AND SURVTIME>=0 THEN SURVTIME_M=INT(SURVTIME/(365/12));
IF SURVTIME<0 THEN DO; SURVTIME=.; SURVTIME_M=.;END;

SURVTIME_M=CEIL(SURVTIME/(365/12));

SIDO_CD=SUBSTR(RVSN_ADDR_CD,1,2);
YEND_STD_AGE=2009-BYEAR;

FORMAT SIDO_NM $15.;
IF SIDO_CD=' ' THEN SIDO_NM=' ';
ELSE IF SIDO_CD='36' THEN SIDO_NM='세종특별자치시';
ELSE IF SIDO_CD='11' THEN SIDO_NM='서울특별시';
ELSE IF SIDO_CD='26' THEN SIDO_NM='부산광역시';
ELSE IF SIDO_CD='27' THEN SIDO_NM='대구광역시';
ELSE IF SIDO_CD='28' THEN SIDO_NM='인천광역시';
ELSE IF SIDO_CD='29' THEN SIDO_NM='광주광역시';
ELSE IF SIDO_CD='30' THEN SIDO_NM='대전광역시';
ELSE IF SIDO_CD='31' THEN SIDO_NM='울산광역시';

ELSE IF SIDO_CD='41' THEN SIDO_NM='경기도';
ELSE IF SIDO_CD='42' THEN SIDO_NM='강원도';
ELSE IF SIDO_CD='43' THEN SIDO_NM='충청북도';
ELSE IF SIDO_CD='44' THEN SIDO_NM='충청남도';
ELSE IF SIDO_CD='45' THEN SIDO_NM='전라북도';
ELSE IF SIDO_CD='46' THEN SIDO_NM='전라남도';
ELSE IF SIDO_CD='47' THEN SIDO_NM='경상북도';
ELSE IF SIDO_CD='48' THEN SIDO_NM='경상남도';
ELSE IF SIDO_CD='49' THEN SIDO_NM='제주도';

ELSE IF SIDO_CD='50' THEN SIDO_NM='제주특별자치도';
ELSE IF SIDO_CD='90' THEN SIDO_NM=' ';
ELSE IF SIDO_CD='z' THEN SIDO_NM=' ';

IF YEND_STD_AGE=. THEN AGE_GRP=.;
ELSE IF YEND_STD_AGE^=. AND YEND_STD_AGE<=4 THEN AGE_GRP=1;
ELSE IF YEND_STD_AGE^=. AND YEND_STD_AGE<=9 THEN AGE_GRP=2;
ELSE IF YEND_STD_AGE^=. AND YEND_STD_AGE<=14 THEN AGE_GRP=3;
ELSE IF YEND_STD_AGE^=. AND YEND_STD_AGE<=19 THEN AGE_GRP=4;
ELSE IF YEND_STD_AGE^=. AND YEND_STD_AGE<=24 THEN AGE_GRP=5;
ELSE IF YEND_STD_AGE^=. AND YEND_STD_AGE<=29 THEN AGE_GRP=6;
ELSE IF YEND_STD_AGE^=. AND YEND_STD_AGE<=34 THEN AGE_GRP=7;
ELSE IF YEND_STD_AGE^=. AND YEND_STD_AGE<=39 THEN AGE_GRP=8;
ELSE IF YEND_STD_AGE^=. AND YEND_STD_AGE<=44 THEN AGE_GRP=9;
ELSE IF YEND_STD_AGE^=. AND YEND_STD_AGE<=49 THEN AGE_GRP=10;
ELSE IF YEND_STD_AGE^=. AND YEND_STD_AGE<=54 THEN AGE_GRP=11;
ELSE IF YEND_STD_AGE^=. AND YEND_STD_AGE<=59 THEN AGE_GRP=12;
ELSE IF YEND_STD_AGE^=. AND YEND_STD_AGE<=64 THEN AGE_GRP=13;
ELSE IF YEND_STD_AGE^=. AND YEND_STD_AGE<=69 THEN AGE_GRP=14;
ELSE IF YEND_STD_AGE^=. AND YEND_STD_AGE<=74 THEN AGE_GRP=15;
ELSE IF YEND_STD_AGE^=. AND YEND_STD_AGE<=79 THEN AGE_GRP=16;
ELSE IF YEND_STD_AGE^=. AND YEND_STD_AGE<=84 THEN AGE_GRP=17;
ELSE IF YEND_STD_AGE^=. AND YEND_STD_AGE>=85 THEN AGE_GRP=18;

RUN; 

PROC CONTENTS DATA=DB.N_CAN_POP_2009_DTH;RUN;

PROC SORT DATA=DB.N_CAN_POP_2009_DTH; BY SEX_TYPE AGE_GRP SIDO_CD; RUN; 

%LET SIZE=14031810 ;
PROC SURVEYSELECT DATA=DB.N_CAN_POP_2009_DTH OUT=DB.CONTROL2 /*2009년 전체 인구의 20% 임의표본 추출*/
METHOD=SRS SAMPSIZE=&SIZE SEED=2020 ; /*2009년01월 자격대상자 47406021명의 20% 명*/
STRATA SEX_TYPE AGE_GRP SIDO_CD /ALLOC=PROP; RUN;

/*14023141*/
PROC SORT DATA=DB.CONTROL2 ;BY SEX_TYPE AGE_GRP SIDO_CD;WHERE SEX_TYPE^=" " AND AGE_GRP^=. AND SIDO_CD^=" " ; RUN;

/*1:1*/
PROC FREQ DATA=DB.LUNG_2009_DTH2;
TABLE SEX_TYPE*AGE_GRP*SIDO_CD/OUT=DB.NEWFREQ1_a NOPRINT ;RUN;

DATA DB.NEWFREQ1_b DB.ERROR;
SET DB.NEWFREQ1_a ;
SAMPNUM=(PERCENT*20581)/100; /*총 위함환자 수*/
_NSIZE_=ROUND(SAMPNUM,1);
SAMPNUM=ROUND(SAMPNUM,0.01);
IF _NSIZE_=0 THEN OUTPUT DB.ERROR;
IF _NSIZE_=0 THEN DELETE;
OUTPUT DB.NEWFREQ1_b; RUN;

DATA DB.NEWFREQ1_c (KEEP= SEX_TYPE AGE_GRP SIDO_CD   _NSIZE_);SET DB.NEWFREQ1_b;RUN;
DATA DB.NEWFREQ1_d;SET DB.NEWFREQ1_c; IF _NSIZE_  >= 0;run;


DATA DB.CONTROL3; 
MERGE DB.CONTROL2 (IN=A KEEP=INDI_DSCM_NO SEX_TYPE AGE_GRP SIDO_CD DEATH  SURVTIME YEND_STD_AGE)  
	         DB.NEWFREQ1_d (IN=B KEEP=SEX_TYPE AGE_GRP SIDO_CD  _NSIZE_); 
BY  SEX_TYPE AGE_GRP  SIDO_CD; IF B=1; RUN; /*34091035*/

PROC SORT DATA=DB.CONTROL3;BY SEX_TYPE AGE_GRP  SIDO_CD; RUN;
PROC PRINT DATA=DB.NEWFREQ1_d; RUN;

PROC SURVEYSELECT
DATA=DB.CONTROL3
OUT= DB.CONTROL_LUNG
METHOD=SRS
SEED=2020
SAMPSIZE=(
1
1
2
3
7
1
3
6
3
1
2
1
6
5
1
5
2
3
1
2
2
3
7
4
1
3
2
3
2
11
1
3
1
1
1
3
14
3
1
2
1
3
23
2
2
3
2
1
3
3
26
11
2
5
4
1
4
44
7
2
17
7
4
4
9
2
48
29
12
21
9
10
8
51
7
13
15
5
8
12
14
2
84
51
20
21
10
12
14
114
20
18
33
16
25
26
44
8
165
80
42
37
20
18
16
186
22
27
46
31
41
61
74
7
209
103
67
71
42
30
37
167
39
38
61
61
60
94
84
11
306
170
93
96
49
47
38
306
69
50
87
68
119
112
126
20
438
183
128
113
63
78
48
414
128
111
152
104
170
209
205
22
350
198
142
98
62
57
39
485
135
114
205
150
225
228
226
35
272
108
97
82
38
46
33
340
100
91
157
113
186
210
190
27
131
57
61
40
28
40
11
190
65
48
75
74
95
117
97
12
96
34
23
25
11
10
8
86
48
29
36
33
56
64
48
7
1
6
1
1
2
1
1
1
1
6
2
2
1
5
1
2
2
4
12
8
1
1
1
4
9
2
1
5
2
2
1
10
3
2
2
5
2
4
10
3
1
4
2
1
6
21
15
7
6
4
2
7
27
3
4
5
4
5
9
24
10
10
8
2
7
4
39
4
6
8
6
4
6
13
1
57
23
6
17
8
7
7
65
13
5
16
5
8
14
21
99
41
17
14
10
4
20
99
17
17
26
14
12
20
27
6
108
37
18
19
12
13
15
94
14
13
24
20
34
25
36
3
121
55
33
32
14
18
14
107
16
14
20
27
23
25
25
7
117
79
38
37
28
19
10
158
36
30
45
29
65
57
63
13
121
63
47
29
25
27
18
167
55
52
62
46
72
96
88
7
155
78
45
34
31
23
26
151
53
31
56
54
82
84
120
8
103
70
33
30
16
21
21
141
43
44
44
44
64
87
85
7
76
30
20
35
16
16
3
109
34
26
39
37
80
75
72
5
);
STRATA SEX_TYPE AGE_GRP SIDO_CD ; 
RUN;


DATA DB.CONTROL_LUNG; SET DB.CONTROL_LUNG;DROP _NSIZE_ SamplingWeight SelectionProb ; RENAME YEND_STD_AGE=YEND_POTM_AGE_ID; RUN;
DATA DB.CAN; SET CAN;RUN;

PROC FREQ DATA=DB.CONTROL_LUNG; TABLE SEX_TYPE  AGE_GRP  SIDO_CD ;  RUN; /*일반인구 분포 확인*/
PROC FREQ DATA=DB.LUNG_2009_DTH2; TABLE SEX_TYPE  AGE_GRP  SIDO_CD ; RUN; /*암환자 분포 확인*/

PROC SQL; CREATE TABLE SAPTMP.LUNG2009 AS SELECT *  FROM  DB.LUNG_2009_DTH2; QUIT;
PROC SQL;
connect to saphana as x1(server=pepper1 port=30015 user=Nhis_&사번 password=!Nhis_&사번.1 readbuff=32767 insertbuff=32767);
CREATE TABLE DB.LUNG_HFVT_TBNYBASE AS SELECT * FROM CONNECTION TO X1(
SELECT * FROM LUNG2009 AS A
LEFT JOIN "NHISBDA"."RVSN_HFVT_TBNYBASE"  AS B	ON A.INDI_DSCM_NO=B.INDI_DSCM_NO); 
disconnect from x1;QUIT;

PROC SORT DATA=DB.LUNG_HFVT_TBNYBASE; BY INDI_DSCM_NO APLY_YM;RUN;

DATA DB.LUNG_HFVT_TBNYBASE; SET DB.LUNG_HFVT_TBNYBASE;

IF APLY_YM^=" " THEN DO;
IF RCGT_EDA_FR_DT^=" " AND RCGT_EDA_TO_DT^=" " THEN APLY=1;/*N=800391*/
ELSE IF RCGT_EDA_FR_DT=" " OR RCGT_EDA_TO_DT=" " THEN APLY=2; /*N=274254*/
ELSE IF  RCGT_EDA_FR_DT^=" " AND RCGT_EDA_TO_DT=" " THEN APLY=3;/*N=0*/
ELSE IF  RCGT_EDA_FR_DT=" " AND RCGT_EDA_TO_DT^=" " THEN APLY=4;/*N=0*/
APLY_Y=SUBSTR(APLY_YM,1,4);
IF 2009<APLY_Y THEN DO;APLY_BF=1; APLY_AF=0;END;/*N=405377*/
ELSE  IF 2009>=APLY_Y THEN DO;APLY_BF=0; APLY_AF=1;END;/*N=669268*/
END;

ELSE IF APLY_YM=" " THEN DO; APLY=0; APLY_Y=9999;
APLY_BF=0;APLY_AF=0;END;/*N=3252102*/

IF YEND_POTM_AGE_ID=. THEN AGE_GRP2=.;
ELSE IF YEND_POTM_AGE_ID^=. AND YEND_POTM_AGE_ID<=9 THEN AGE_GRP2=1;
ELSE IF YEND_POTM_AGE_ID^=. AND YEND_POTM_AGE_ID<=19 THEN AGE_GRP2=2;
ELSE IF YEND_POTM_AGE_ID^=. AND YEND_POTM_AGE_ID<=29 THEN AGE_GRP2=3;
ELSE IF YEND_POTM_AGE_ID^=. AND YEND_POTM_AGE_ID<=39 THEN AGE_GRP2=4;
ELSE IF YEND_POTM_AGE_ID^=. AND YEND_POTM_AGE_ID<=49 THEN AGE_GRP2=5;
ELSE IF YEND_POTM_AGE_ID^=. AND YEND_POTM_AGE_ID<=59 THEN AGE_GRP2=6;
ELSE IF YEND_POTM_AGE_ID^=. AND YEND_POTM_AGE_ID<=69 THEN AGE_GRP2=7;
ELSE IF YEND_POTM_AGE_ID^=. AND YEND_POTM_AGE_ID<=79 THEN AGE_GRP2=8;
ELSE IF YEND_POTM_AGE_ID^=. AND YEND_POTM_AGE_ID<=89 THEN AGE_GRP2=9;
ELSE IF YEND_POTM_AGE_ID^=. AND YEND_POTM_AGE_ID>89 THEN AGE_GRP2=10;
ELSE AGE_GRP2=.;


IF YEND_POTM_AGE_ID^=. AND YEND_POTM_AGE_ID<65 THEN AGE_GRP65=0;
ELSE IF YEND_POTM_AGE_ID^=. AND YEND_POTM_AGE_ID>=65 THEN AGE_GRP65=1;
ELSE AGE_GRP65=.;

RUN;

DATA DB.LUNG_CONTROL_HFVT_TBNYBASE_BF; SET DB.LUNG_CONTROL_HFVT_TBNYBASE; WHERE APLY_BF=1;RUN;
DATA DB.LUNG_CONTROL_HFVT_TBNYBASE_AF; SET DB.LUNG_CONTROL_HFVT_TBNYBASE; WHERE APLY_AF=1;RUN;
DATA DB.LUNG_CONTROL_HFVT_TBNYBASE_NONE; SET DB.LUNG_CONTROL_HFVT_TBNYBASE; WHERE APLY_BF=0 AND APLY_AF=0; RUN;

PROC SORT DATA=DB.LUNG_CONTROL_HFVT_TBNYBASE_BF OUT=DB.LUNG_CONTROL_TBNYBASE_BF_ID
(KEEP=INDI_DSCM_NO   SEX_TYPE  YEND_POTM_AGE_ID    AGE_GRP  AGE_GRP2 AGE_GRP65 APLY_BF ) NODUPKEY;
BY INDI_DSCM_NO ; RUN;
PROC SORT DATA=DB.LUNG_CONTROL_HFVT_TBNYBASE_AF OUT=DB.LUNG_CONTROL_TBNYBASE_AF_ID
(KEEP=INDI_DSCM_NO   SEX_TYPE  YEND_POTM_AGE_ID AGE_GRP AGE_GRP2 AGE_GRP65  APLY_AF) NODUPKEY;
BY INDI_DSCM_NO ; RUN;
PROC SORT DATA=DB.LUNG_CONTROL_HFVT_TBNYBASE_NONE OUT=DB.LUNG_CONTROL_TBNYBASE_NONE_ID
(KEEP=INDI_DSCM_NO   SEX_TYPE  YEND_POTM_AGE_ID  AGE_GRP AGE_GRP2 AGE_GRP65 APLY_BF APLY_AF) NODUPKEY;
BY INDI_DSCM_NO ; RUN;

DATA DB.LUNG_CONTROL_TBNYBASE_ID; MERGE 
DB.LUNG_CONTROL_TBNYBASE_BF_ID DB.LUNG_CONTROL_TBNYBASE_AF_ID DB.LUNG_CONTROL_TBNYBASE_NONE_ID;
BY INDI_DSCM_NO ; RUN;

DATA DB.LUNG_CONTROL_TBNYBASE_ID; SET DB.LUNG_CONTROL_TBNYBASE_ID;
FORMAT APLY_TYPE $15.;
IF APLY_BF=. THEN APLY_BF=0;  IF APLY_AF=. THEN APLY_AF=0;
IF  APLY_BF=0 AND APLY_AF=0 THEN APLY_TYPE="NEVER";
ELSE IF APLY_BF=1 AND APLY_AF=0 THEN APLY_TYPE="BEFORE";
ELSE IF APLY_BF=0 AND APLY_AF=1 THEN APLY_TYPE="AFTER";
ELSE IF APLY_BF=1 AND APLY_AF=1 THEN APLY_TYPE="BOTH";
RUN;


/*PROC FREQ DATA=DB.C_HFVT_TBNYBASE;TABLE APLY APLY_C;RUN;*/
PROC SQL; CREATE TABLE TABLE6  AS SELECT 
SEX_TYPE,AGE_GRP,COUNT(DISTINCT INDI_DSCM_NO) AS C_PAT
FROM DB.LUNG_CONTROL_TBNYBASE_ID GROUP BY  SEX_TYPE,AGE_GRP; QUIT;

PROC SQL; CREATE TABLE TABLE7A AS SELECT 
SEX_TYPE,AGE_GRP,APLY_TYPE, COUNT(DISTINCT INDI_DSCM_NO) AS C_PAT
FROM DB.LUNG_CONTROL_TBNYBASE_ID GROUP BY SEX_TYPE,AGE_GRP,APLY_TYPE; QUIT;
PROC SQL; CREATE TABLE TABLE7B AS SELECT 
SEX_TYPE,AGE_GRP2,APLY_TYPE, COUNT(DISTINCT INDI_DSCM_NO) AS C_PAT
FROM DB.LUNG_CONTROL_TBNYBASE_ID GROUP BY  SEX_TYPE,AGE_GRP2,APLY_TYPE; QUIT;
PROC SQL; CREATE TABLE TABLE7C AS SELECT 
SEX_TYPE,AGE_GRP65,APLY_TYPE, COUNT(DISTINCT INDI_DSCM_NO) AS C_PAT
FROM DB.LUNG_CONTROL_TBNYBASE_ID GROUP BY  SEX_TYPE,AGE_GRP65,APLY_TYPE; QUIT;


/******************APLY TYPE (BEFORE, AFTER)-> RESULT******************/

DATA DB.LUNG_CONTROL_TBNYBASE_BF_N; SET DB.LUNG_CONTROL_HFVT_TBNYBASE; 
RENAME APLY=APLY_BF_N;
WHERE APLY_BF=1 AND APLY=2;RUN;
DATA DB.LUNG_CONTROL_TBNYBASE_BF_Y; SET DB.LUNG_CONTROL_HFVT_TBNYBASE;
RENAME APLY=APLY_BF_Y;
WHERE APLY_BF=1 AND APLY=1;RUN;
DATA DB.LUNG_CONTROL_TBNYBASE_AF_N; SET DB.LUNG_CONTROL_HFVT_TBNYBASE; 
RENAME APLY=APLY_AF_N;
WHERE APLY_AF=1 AND APLY=2;RUN;
DATA DB.LUNG_CONTROL_TBNYBASE_AF_Y; SET DB.LUNG_CONTROL_HFVT_TBNYBASE; 
RENAME APLY=APLY_AF_Y;
WHERE APLY_AF=1 AND APLY=1;RUN;
DATA DB.LUNG_CONTROL_TBNYBASE_NEVER; SET DB.LUNG_CONTROL_HFVT_TBNYBASE; 
RENAME APLY=APLY_NEVER;
WHERE APLY_BF=0 AND APLY_AF=0 AND APLY=0;RUN;


DATA DB.LUNG_CONTROL_TBNYBASE_BF_N_ID; SET DB.LUNG_CONTROL_TBNYBASE_BF_N; 
KEEP INDI_DSCM_NO   SEX_TYPE  YEND_POTM_AGE_ID
AGE_GRP  AGE_GRP2 AGE_GRP65 LTC_MGMT_NO_SEQ APLY_BF_N;
RUN;
DATA DB.LUNG_CONTROL_TBNYBASE_BF_Y_ID; SET DB.LUNG_CONTROL_TBNYBASE_BF_Y;
KEEP INDI_DSCM_NO   SEX_TYPE  YEND_POTM_AGE_ID
AGE_GRP  AGE_GRP2 AGE_GRP65 LTC_MGMT_NO_SEQ APLY_BF_Y;
RUN;
DATA DB.LUNG_CONTROL_TBNYBASE_AF_N_ID; SET DB.LUNG_CONTROL_TBNYBASE_AF_N; 
KEEP INDI_DSCM_NO   SEX_TYPE  YEND_POTM_AGE_ID
AGE_GRP  AGE_GRP2 AGE_GRP65 LTC_MGMT_NO_SEQ APLY_AF_N;
RUN;
DATA DB.LUNG_CONTROL_TBNYBASE_AF_Y_ID; SET DB.LUNG_CONTROL_TBNYBASE_AF_Y; 
KEEP INDI_DSCM_NO   SEX_TYPE  YEND_POTM_AGE_ID
AGE_GRP  AGE_GRP2 AGE_GRP65 LTC_MGMT_NO_SEQ APLY_AF_Y;
RUN;
DATA DB.LUNG_CONTROL_TBNYBASE_NEVER_ID; SET DB.LUNG_CONTROL_TBNYBASE_NEVER; 
KEEP INDI_DSCM_NO   SEX_TYPE  YEND_POTM_AGE_ID
AGE_GRP  AGE_GRP2 AGE_GRP65 LTC_MGMT_NO_SEQ APLY_NEVER;
RUN;

PROC SQL; CREATE TABLE DB.LUNG_CONTROL_TBNYBASE_BF_N_ID AS SELECT 
INDI_DSCM_NO, SEX_TYPE,  YEND_POTM_AGE_ID,AGE_GRP,  AGE_GRP2, AGE_GRP65, 
APLY_BF_N, COUNT(DISTINCT LTC_MGMT_NO_SEQ) AS N_APLY_BF_N
FROM DB.LUNG_CONTROL_TBNYBASE_BF_N_ID GROUP BY  
INDI_DSCM_NO,  SEX_TYPE,  YEND_POTM_AGE_ID,
AGE_GRP,  AGE_GRP2, AGE_GRP65,APLY_BF_N; QUIT;
PROC SQL; CREATE TABLE DB.LUNG_CONTROL_TBNYBASE_BF_Y_ID AS SELECT 
INDI_DSCM_NO,  SEX_TYPE,  YEND_POTM_AGE_ID,AGE_GRP,  AGE_GRP2, AGE_GRP65, 
APLY_BF_Y, COUNT(DISTINCT LTC_MGMT_NO_SEQ) AS N_APLY_BF_Y
FROM DB.LUNG_CONTROL_TBNYBASE_BF_Y_ID GROUP BY  
INDI_DSCM_NO,  SEX_TYPE,  YEND_POTM_AGE_ID,
AGE_GRP,  AGE_GRP2, AGE_GRP65,APLY_BF_Y; QUIT;
PROC SQL; CREATE TABLE DB.LUNG_CONTROL_TBNYBASE_AF_N_ID AS SELECT 
INDI_DSCM_NO,  SEX_TYPE,  YEND_POTM_AGE_ID,AGE_GRP,  AGE_GRP2, AGE_GRP65, 
APLY_AF_N, COUNT(DISTINCT LTC_MGMT_NO_SEQ) AS N_APLY_AF_N
FROM DB.LUNG_CONTROL_TBNYBASE_AF_N_ID GROUP BY  
INDI_DSCM_NO,   SEX_TYPE,  YEND_POTM_AGE_ID,
AGE_GRP,  AGE_GRP2, AGE_GRP65,APLY_AF_N; QUIT;
PROC SQL; CREATE TABLE DB.LUNG_CONTROL_TBNYBASE_AF_Y_ID AS SELECT 
INDI_DSCM_NO,  SEX_TYPE,  YEND_POTM_AGE_ID,AGE_GRP,  AGE_GRP2, AGE_GRP65, 
APLY_AF_Y, COUNT(DISTINCT LTC_MGMT_NO_SEQ) AS N_APLY_AF_Y
FROM DB.LUNG_CONTROL_TBNYBASE_AF_Y_ID GROUP BY  
INDI_DSCM_NO,  SEX_TYPE,  YEND_POTM_AGE_ID,
 AGE_GRP,  AGE_GRP2, AGE_GRP65,APLY_AF_Y; QUIT;
PROC SQL; CREATE TABLE DB.LUNG_CONTROL_TBNYBASE_NEVER_ID AS SELECT 
INDI_DSCM_NO, SEX_TYPE,  YEND_POTM_AGE_ID,AGE_GRP,  AGE_GRP2, AGE_GRP65, 
APLY_NEVER, COUNT(DISTINCT LTC_MGMT_NO_SEQ) AS N_APLY_NEVER
FROM DB.LUNG_CONTROL_TBNYBASE_NEVER_ID GROUP BY  
INDI_DSCM_NO, SEX_TYPE,  YEND_POTM_AGE_ID,
AGE_GRP,  AGE_GRP2, AGE_GRP65,APLY_NEVER; QUIT;

DATA DB.LUNG_CONTROL_TBNYBASE_ID2; MERGE 
DB.LUNG_CONTROL_TBNYBASE_BF_N_ID DB.LUNG_CONTROL_TBNYBASE_BF_Y_ID 
DB.LUNG_CONTROL_TBNYBASE_AF_N_ID  DB.LUNG_CONTROL_TBNYBASE_AF_Y_ID
DB.LUNG_CONTROL_TBNYBASE_NEVER_ID;
BY INDI_DSCM_NO ; RUN;

DATA DB.LUNG_CONTROL_TBNYBASE_ID3; SET DB.LUNG_CONTROL_TBNYBASE_ID2;
FORMAT APLY_TYPE2 $30.;
IF APLY_BF_N=. THEN APLY_BF_N=0;  IF APLY_BF_N=2 THEN APLY_BF_N=1;  IF N_APLY_BF_N=. THEN N_APLY_BF_N=0;
IF APLY_BF_Y=. THEN APLY_BF_Y=0;  IF APLY_BF_Y=1 THEN APLY_BF_Y=1; IF N_APLY_BF_Y=. THEN N_APLY_BF_Y=0;
IF APLY_AF_N=. THEN APLY_AF_N=0;  IF APLY_AF_N=2 THEN APLY_AF_N=1; IF N_APLY_AF_N=. THEN N_APLY_AF_N=0;
IF APLY_AF_Y=. THEN APLY_AF_Y=0;IF APLY_AF_Y=1 THEN APLY_AF_Y=1;  IF N_APLY_AF_Y=. THEN N_APLY_AF_Y=0;
IF APLY_NEVER=0 THEN APLY_NEVER=1; IF APLY_NEVER=. THEN APLY_NEVER=0;  IF N_APLY_NEVER=. THEN N_APLY_NEVER=0;

IF  APLY_NEVER=1 AND APLY_BF_N=0 AND APLY_AF_N=0 AND APLY_BF_Y=0 AND APLY_AF_Y=0 THEN APLY_TYPE2="NEVER APPLY";
IF  APLY_NEVER=0 THEN DO;
IF APLY_BF_N=1 AND APLY_AF_N=1 THEN APLY_TYPE2="APLY BOTH, NEVER GET";
ELSE IF APLY_BF_Y=1 AND APLY_AF_Y=1 THEN APLY_TYPE2="APLY BOTH, BOTH GET";

ELSE IF APLY_BF_N=1 AND APLY_AF_N=0 THEN APLY_TYPE2="APLY BEFORE, NEVER GET";
ELSE IF APLY_BF_N=0 AND APLY_AF_N=1 THEN APLY_TYPE2="APLY AFTER, NEVER GET";

ELSE IF APLY_BF_Y=1 AND APLY_AF_Y=0 THEN APLY_TYPE2="APLY BEFORE,  GET";
ELSE IF APLY_BF_Y=0 AND APLY_AF_Y=1 THEN APLY_TYPE2="APLY AFTER,  GET";
END;
RUN;

/*PROC FREQ DATA=DB.C_HFVT_TBNYBASE_ID3; TABLE APLY_TYPE2;RUN;*/
PROC SQL; CREATE TABLE TABLE8A AS SELECT 
SEX_TYPE,AGE_GRP,APLY_TYPE2, COUNT(DISTINCT INDI_DSCM_NO) AS G_PAT
FROM DB.LUNG_CONTROL_TBNYBASE_ID3 GROUP BY  SEX_TYPE,AGE_GRP,APLY_TYPE2; QUIT;
PROC SQL; CREATE TABLE TABLE8B AS SELECT 
 SEX_TYPE,AGE_GRP2,APLY_TYPE2, COUNT(DISTINCT INDI_DSCM_NO) AS G_PAT
FROM DB.LUNG_CONTROL_TBNYBASE_ID3 GROUP BY  SEX_TYPE,AGE_GRP2,APLY_TYPE2; QUIT;
PROC SQL; CREATE TABLE TABLE8C AS SELECT 
SEX_TYPE,AGE_GRP65,APLY_TYPE2, COUNT(DISTINCT INDI_DSCM_NO) AS G_PAT
FROM DB.LUNG_CONTROL_TBNYBASE_ID3 GROUP BY   SEX_TYPE,AGE_GRP65,APLY_TYPE2; QUIT;

/*PROC FREQ DATA=DB.C_HFVT_TBNYBASE_ID3; TABLE APLY_TYPE2;RUN;*/
PROC SQL; CREATE TABLE TABLE9_BFA AS SELECT 
SEX_TYPE,AGE_GRP,
MEAN(EVRDY_LIFE_ARFF_SCOR) AS MEAN_EVRDY_LIFE,MEDIAN(EVRDY_LIFE_ARFF_SCOR) AS MED_EVRDY_LIFE,
MIN(EVRDY_LIFE_ARFF_SCOR) AS MIN_EVRDY_LIFE,MAX(EVRDY_LIFE_ARFF_SCOR) AS MAX_EVRDY_LIFE,
MEAN(PCT_ARFF_SCOR) AS MEAN_PCT,MEDIAN(PCT_ARFF_SCOR) AS MED_PCT,
MIN(PCT_ARFF_SCOR) AS MIN_PCT,MAX(PCT_ARFF_SCOR) AS MAX_PCT,
MEAN(BHVR_ARFF_SCOR) AS MEAN_BHVR,MEDIAN(BHVR_ARFF_SCOR) AS MED_BHVR,
MIN(BHVR_ARFF_SCOR) AS MIN_BHVR,MAX(BHVR_ARFF_SCOR) AS MAX_BHVR,
MEAN(TNDNC_ARFF_SCOR) AS MEAN_TNDNC,MEDIAN(TNDNC_ARFF_SCOR) AS MED_TNDNC,
MIN(TNDNC_ARFF_SCOR) AS MIN_TNDNC,MAX(TNDNC_ARFF_SCOR) AS MAX_TNDNC,
MEAN(REHBT_ARFF_SCOR) AS MEAN_REHBT,MEDIAN(REHBT_ARFF_SCOR) AS MED_REHBT,
MIN(REHBT_ARFF_SCOR) AS MIN_REHBT,MAX(REHBT_ARFF_SCOR) AS MAX_REHBT,
MEAN(RCG_RCGT_SCOR) AS MEAN_RCG_RCGT,MEDIAN(RCG_RCGT_SCOR) AS MED_RCG_RCGT,
MIN(RCG_RCGT_SCOR) AS MIN_RCG_RCGT,MAX(RCG_RCGT_SCOR) AS MAX_RCG_RCGT
FROM DB.LUNG_CONTROL_HFVT_TBNYBASE_BF
GROUP BY  SEX_TYPE,AGE_GRP; QUIT;

PROC SQL; CREATE TABLE TABLE9_BFB AS SELECT 
SEX_TYPE,AGE_GRP2,
MEAN(EVRDY_LIFE_ARFF_SCOR) AS MEAN_EVRDY_LIFE,MEDIAN(EVRDY_LIFE_ARFF_SCOR) AS MED_EVRDY_LIFE,
MIN(EVRDY_LIFE_ARFF_SCOR) AS MIN_EVRDY_LIFE,MAX(EVRDY_LIFE_ARFF_SCOR) AS MAX_EVRDY_LIFE,
MEAN(PCT_ARFF_SCOR) AS MEAN_PCT,MEDIAN(PCT_ARFF_SCOR) AS MED_PCT,
MIN(PCT_ARFF_SCOR) AS MIN_PCT,MAX(PCT_ARFF_SCOR) AS MAX_PCT,
MEAN(BHVR_ARFF_SCOR) AS MEAN_BHVR,MEDIAN(BHVR_ARFF_SCOR) AS MED_BHVR,
MIN(BHVR_ARFF_SCOR) AS MIN_BHVR,MAX(BHVR_ARFF_SCOR) AS MAX_BHVR,
MEAN(TNDNC_ARFF_SCOR) AS MEAN_TNDNC,MEDIAN(TNDNC_ARFF_SCOR) AS MED_TNDNC,
MIN(TNDNC_ARFF_SCOR) AS MIN_TNDNC,MAX(TNDNC_ARFF_SCOR) AS MAX_TNDNC,
MEAN(REHBT_ARFF_SCOR) AS MEAN_REHBT,MEDIAN(REHBT_ARFF_SCOR) AS MED_REHBT,
MIN(REHBT_ARFF_SCOR) AS MIN_REHBT,MAX(REHBT_ARFF_SCOR) AS MAX_REHBT,
MEAN(RCG_RCGT_SCOR) AS MEAN_RCG_RCGT,MEDIAN(RCG_RCGT_SCOR) AS MED_RCG_RCGT,
MIN(RCG_RCGT_SCOR) AS MIN_RCG_RCGT,MAX(RCG_RCGT_SCOR) AS MAX_RCG_RCGT
FROM DB.LUNG_CONTROL_HFVT_TBNYBASE_BF
GROUP BY  SEX_TYPE,AGE_GRP2; QUIT;

PROC SQL; CREATE TABLE TABLE9_BFC AS SELECT 
SEX_TYPE,AGE_GRP65,
MEAN(EVRDY_LIFE_ARFF_SCOR) AS MEAN_EVRDY_LIFE,MEDIAN(EVRDY_LIFE_ARFF_SCOR) AS MED_EVRDY_LIFE,
MIN(EVRDY_LIFE_ARFF_SCOR) AS MIN_EVRDY_LIFE,MAX(EVRDY_LIFE_ARFF_SCOR) AS MAX_EVRDY_LIFE,
MEAN(PCT_ARFF_SCOR) AS MEAN_PCT,MEDIAN(PCT_ARFF_SCOR) AS MED_PCT,
MIN(PCT_ARFF_SCOR) AS MIN_PCT,MAX(PCT_ARFF_SCOR) AS MAX_PCT,
MEAN(BHVR_ARFF_SCOR) AS MEAN_BHVR,MEDIAN(BHVR_ARFF_SCOR) AS MED_BHVR,
MIN(BHVR_ARFF_SCOR) AS MIN_BHVR,MAX(BHVR_ARFF_SCOR) AS MAX_BHVR,
MEAN(TNDNC_ARFF_SCOR) AS MEAN_TNDNC,MEDIAN(TNDNC_ARFF_SCOR) AS MED_TNDNC,
MIN(TNDNC_ARFF_SCOR) AS MIN_TNDNC,MAX(TNDNC_ARFF_SCOR) AS MAX_TNDNC,
MEAN(REHBT_ARFF_SCOR) AS MEAN_REHBT,MEDIAN(REHBT_ARFF_SCOR) AS MED_REHBT,
MIN(REHBT_ARFF_SCOR) AS MIN_REHBT,MAX(REHBT_ARFF_SCOR) AS MAX_REHBT,
MEAN(RCG_RCGT_SCOR) AS MEAN_RCG_RCGT,MEDIAN(RCG_RCGT_SCOR) AS MED_RCG_RCGT,
MIN(RCG_RCGT_SCOR) AS MIN_RCG_RCGT,MAX(RCG_RCGT_SCOR) AS MAX_RCG_RCGT
FROM DB.LUNG_CONTROL_HFVT_TBNYBASE_BF
GROUP BY  SEX_TYPE,AGE_GRP65; QUIT;

PROC SQL; CREATE TABLE TABLE9_AFA AS SELECT 
 SEX_TYPE,AGE_GRP,
MEAN(EVRDY_LIFE_ARFF_SCOR) AS MEAN_EVRDY_LIFE,MEDIAN(EVRDY_LIFE_ARFF_SCOR) AS MED_EVRDY_LIFE,
MIN(EVRDY_LIFE_ARFF_SCOR) AS MIN_EVRDY_LIFE,MAX(EVRDY_LIFE_ARFF_SCOR) AS MAX_EVRDY_LIFE,
MEAN(PCT_ARFF_SCOR) AS MEAN_PCT,MEDIAN(PCT_ARFF_SCOR) AS MED_PCT,
MIN(PCT_ARFF_SCOR) AS MIN_PCT,MAX(PCT_ARFF_SCOR) AS MAX_PCT,
MEAN(BHVR_ARFF_SCOR) AS MEAN_BHVR,MEDIAN(BHVR_ARFF_SCOR) AS MED_BHVR,
MIN(BHVR_ARFF_SCOR) AS MIN_BHVR,MAX(BHVR_ARFF_SCOR) AS MAX_BHVR,
MEAN(TNDNC_ARFF_SCOR) AS MEAN_TNDNC,MEDIAN(TNDNC_ARFF_SCOR) AS MED_TNDNC,
MIN(TNDNC_ARFF_SCOR) AS MIN_TNDNC,MAX(TNDNC_ARFF_SCOR) AS MAX_TNDNC,
MEAN(REHBT_ARFF_SCOR) AS MEAN_REHBT,MEDIAN(REHBT_ARFF_SCOR) AS MED_REHBT,
MIN(REHBT_ARFF_SCOR) AS MIN_REHBT,MAX(REHBT_ARFF_SCOR) AS MAX_REHBT,
MEAN(RCG_RCGT_SCOR) AS MEAN_RCG_RCGT,MEDIAN(RCG_RCGT_SCOR) AS MED_RCG_RCGT,
MIN(RCG_RCGT_SCOR) AS MIN_RCG_RCGT,MAX(RCG_RCGT_SCOR) AS MAX_RCG_RCGT
FROM DB.LUNG_CONTROL_HFVT_TBNYBASE_AF
GROUP BY  SEX_TYPE,AGE_GRP; QUIT;

PROC SQL; CREATE TABLE TABLE9_AFB AS SELECT 
SEX_TYPE,AGE_GRP2,
MEAN(EVRDY_LIFE_ARFF_SCOR) AS MEAN_EVRDY_LIFE,MEDIAN(EVRDY_LIFE_ARFF_SCOR) AS MED_EVRDY_LIFE,
MIN(EVRDY_LIFE_ARFF_SCOR) AS MIN_EVRDY_LIFE,MAX(EVRDY_LIFE_ARFF_SCOR) AS MAX_EVRDY_LIFE,
MEAN(PCT_ARFF_SCOR) AS MEAN_PCT,MEDIAN(PCT_ARFF_SCOR) AS MED_PCT,
MIN(PCT_ARFF_SCOR) AS MIN_PCT,MAX(PCT_ARFF_SCOR) AS MAX_PCT,
MEAN(BHVR_ARFF_SCOR) AS MEAN_BHVR,MEDIAN(BHVR_ARFF_SCOR) AS MED_BHVR,
MIN(BHVR_ARFF_SCOR) AS MIN_BHVR,MAX(BHVR_ARFF_SCOR) AS MAX_BHVR,
MEAN(TNDNC_ARFF_SCOR) AS MEAN_TNDNC,MEDIAN(TNDNC_ARFF_SCOR) AS MED_TNDNC,
MIN(TNDNC_ARFF_SCOR) AS MIN_TNDNC,MAX(TNDNC_ARFF_SCOR) AS MAX_TNDNC,
MEAN(REHBT_ARFF_SCOR) AS MEAN_REHBT,MEDIAN(REHBT_ARFF_SCOR) AS MED_REHBT,
MIN(REHBT_ARFF_SCOR) AS MIN_REHBT,MAX(REHBT_ARFF_SCOR) AS MAX_REHBT,
MEAN(RCG_RCGT_SCOR) AS MEAN_RCG_RCGT,MEDIAN(RCG_RCGT_SCOR) AS MED_RCG_RCGT,
MIN(RCG_RCGT_SCOR) AS MIN_RCG_RCGT,MAX(RCG_RCGT_SCOR) AS MAX_RCG_RCGT
FROM DB.LUNG_CONTROL_HFVT_TBNYBASE_AF
GROUP BY  SEX_TYPE,AGE_GRP2; QUIT;

PROC SQL; CREATE TABLE TABLE9_AFC AS SELECT 
SEX_TYPE,AGE_GRP65,
MEAN(EVRDY_LIFE_ARFF_SCOR) AS MEAN_EVRDY_LIFE,MEDIAN(EVRDY_LIFE_ARFF_SCOR) AS MED_EVRDY_LIFE,
MIN(EVRDY_LIFE_ARFF_SCOR) AS MIN_EVRDY_LIFE,MAX(EVRDY_LIFE_ARFF_SCOR) AS MAX_EVRDY_LIFE,
MEAN(PCT_ARFF_SCOR) AS MEAN_PCT,MEDIAN(PCT_ARFF_SCOR) AS MED_PCT,
MIN(PCT_ARFF_SCOR) AS MIN_PCT,MAX(PCT_ARFF_SCOR) AS MAX_PCT,
MEAN(BHVR_ARFF_SCOR) AS MEAN_BHVR,MEDIAN(BHVR_ARFF_SCOR) AS MED_BHVR,
MIN(BHVR_ARFF_SCOR) AS MIN_BHVR,MAX(BHVR_ARFF_SCOR) AS MAX_BHVR,
MEAN(TNDNC_ARFF_SCOR) AS MEAN_TNDNC,MEDIAN(TNDNC_ARFF_SCOR) AS MED_TNDNC,
MIN(TNDNC_ARFF_SCOR) AS MIN_TNDNC,MAX(TNDNC_ARFF_SCOR) AS MAX_TNDNC,
MEAN(REHBT_ARFF_SCOR) AS MEAN_REHBT,MEDIAN(REHBT_ARFF_SCOR) AS MED_REHBT,
MIN(REHBT_ARFF_SCOR) AS MIN_REHBT,MAX(REHBT_ARFF_SCOR) AS MAX_REHBT,
MEAN(RCG_RCGT_SCOR) AS MEAN_RCG_RCGT,MEDIAN(RCG_RCGT_SCOR) AS MED_RCG_RCGT,
MIN(RCG_RCGT_SCOR) AS MIN_RCG_RCGT,MAX(RCG_RCGT_SCOR) AS MAX_RCG_RCGT
FROM DB.LUNG_CONTROL_HFVT_TBNYBASE_AF
GROUP BY SEX_TYPE,AGE_GRP65; QUIT;

/*******************/

PROC SQL; CREATE TABLE TABLE10_BF_NA AS SELECT 
SEX_TYPE,AGE_GRP,
MEAN(EVRDY_LIFE_ARFF_SCOR) AS MEAN_EVRDY_LIFE,MEDIAN(EVRDY_LIFE_ARFF_SCOR) AS MED_EVRDY_LIFE,
MIN(EVRDY_LIFE_ARFF_SCOR) AS MIN_EVRDY_LIFE,MAX(EVRDY_LIFE_ARFF_SCOR) AS MAX_EVRDY_LIFE,
MEAN(PCT_ARFF_SCOR) AS MEAN_PCT,MEDIAN(PCT_ARFF_SCOR) AS MED_PCT,
MIN(PCT_ARFF_SCOR) AS MIN_PCT,MAX(PCT_ARFF_SCOR) AS MAX_PCT,
MEAN(BHVR_ARFF_SCOR) AS MEAN_BHVR,MEDIAN(BHVR_ARFF_SCOR) AS MED_BHVR,
MIN(BHVR_ARFF_SCOR) AS MIN_BHVR,MAX(BHVR_ARFF_SCOR) AS MAX_BHVR,
MEAN(TNDNC_ARFF_SCOR) AS MEAN_TNDNC,MEDIAN(TNDNC_ARFF_SCOR) AS MED_TNDNC,
MIN(TNDNC_ARFF_SCOR) AS MIN_TNDNC,MAX(TNDNC_ARFF_SCOR) AS MAX_TNDNC,
MEAN(REHBT_ARFF_SCOR) AS MEAN_REHBT,MEDIAN(REHBT_ARFF_SCOR) AS MED_REHBT,
MIN(REHBT_ARFF_SCOR) AS MIN_REHBT,MAX(REHBT_ARFF_SCOR) AS MAX_REHBT,
MEAN(RCG_RCGT_SCOR) AS MEAN_RCG_RCGT,MEDIAN(RCG_RCGT_SCOR) AS MED_RCG_RCGT,
MIN(RCG_RCGT_SCOR) AS MIN_RCG_RCGT,MAX(RCG_RCGT_SCOR) AS MAX_RCG_RCGT
FROM DB.LUNG_CONTROL_TBNYBASE_BF_N
GROUP BY   SEX_TYPE,AGE_GRP; QUIT;

PROC SQL; CREATE TABLE TABLE10_BF_NB AS SELECT 
SEX_TYPE,AGE_GRP2,
MEAN(EVRDY_LIFE_ARFF_SCOR) AS MEAN_EVRDY_LIFE,MEDIAN(EVRDY_LIFE_ARFF_SCOR) AS MED_EVRDY_LIFE,
MIN(EVRDY_LIFE_ARFF_SCOR) AS MIN_EVRDY_LIFE,MAX(EVRDY_LIFE_ARFF_SCOR) AS MAX_EVRDY_LIFE,
MEAN(PCT_ARFF_SCOR) AS MEAN_PCT,MEDIAN(PCT_ARFF_SCOR) AS MED_PCT,
MIN(PCT_ARFF_SCOR) AS MIN_PCT,MAX(PCT_ARFF_SCOR) AS MAX_PCT,
MEAN(BHVR_ARFF_SCOR) AS MEAN_BHVR,MEDIAN(BHVR_ARFF_SCOR) AS MED_BHVR,
MIN(BHVR_ARFF_SCOR) AS MIN_BHVR,MAX(BHVR_ARFF_SCOR) AS MAX_BHVR,
MEAN(TNDNC_ARFF_SCOR) AS MEAN_TNDNC,MEDIAN(TNDNC_ARFF_SCOR) AS MED_TNDNC,
MIN(TNDNC_ARFF_SCOR) AS MIN_TNDNC,MAX(TNDNC_ARFF_SCOR) AS MAX_TNDNC,
MEAN(REHBT_ARFF_SCOR) AS MEAN_REHBT,MEDIAN(REHBT_ARFF_SCOR) AS MED_REHBT,
MIN(REHBT_ARFF_SCOR) AS MIN_REHBT,MAX(REHBT_ARFF_SCOR) AS MAX_REHBT,
MEAN(RCG_RCGT_SCOR) AS MEAN_RCG_RCGT,MEDIAN(RCG_RCGT_SCOR) AS MED_RCG_RCGT,
MIN(RCG_RCGT_SCOR) AS MIN_RCG_RCGT,MAX(RCG_RCGT_SCOR) AS MAX_RCG_RCGT
FROM DB.LUNG_CONTROL_TBNYBASE_BF_N
GROUP BY   SEX_TYPE,AGE_GRP2; QUIT;

PROC SQL; CREATE TABLE TABLE10_BF_NC AS SELECT 
 SEX_TYPE,AGE_GRP65,
MEAN(EVRDY_LIFE_ARFF_SCOR) AS MEAN_EVRDY_LIFE,MEDIAN(EVRDY_LIFE_ARFF_SCOR) AS MED_EVRDY_LIFE,
MIN(EVRDY_LIFE_ARFF_SCOR) AS MIN_EVRDY_LIFE,MAX(EVRDY_LIFE_ARFF_SCOR) AS MAX_EVRDY_LIFE,
MEAN(PCT_ARFF_SCOR) AS MEAN_PCT,MEDIAN(PCT_ARFF_SCOR) AS MED_PCT,
MIN(PCT_ARFF_SCOR) AS MIN_PCT,MAX(PCT_ARFF_SCOR) AS MAX_PCT,
MEAN(BHVR_ARFF_SCOR) AS MEAN_BHVR,MEDIAN(BHVR_ARFF_SCOR) AS MED_BHVR,
MIN(BHVR_ARFF_SCOR) AS MIN_BHVR,MAX(BHVR_ARFF_SCOR) AS MAX_BHVR,
MEAN(TNDNC_ARFF_SCOR) AS MEAN_TNDNC,MEDIAN(TNDNC_ARFF_SCOR) AS MED_TNDNC,
MIN(TNDNC_ARFF_SCOR) AS MIN_TNDNC,MAX(TNDNC_ARFF_SCOR) AS MAX_TNDNC,
MEAN(REHBT_ARFF_SCOR) AS MEAN_REHBT,MEDIAN(REHBT_ARFF_SCOR) AS MED_REHBT,
MIN(REHBT_ARFF_SCOR) AS MIN_REHBT,MAX(REHBT_ARFF_SCOR) AS MAX_REHBT,
MEAN(RCG_RCGT_SCOR) AS MEAN_RCG_RCGT,MEDIAN(RCG_RCGT_SCOR) AS MED_RCG_RCGT,
MIN(RCG_RCGT_SCOR) AS MIN_RCG_RCGT,MAX(RCG_RCGT_SCOR) AS MAX_RCG_RCGT
FROM DB.LUNG_CONTROL_TBNYBASE_BF_N
GROUP BY   SEX_TYPE,AGE_GRP65; QUIT;


PROC SQL; CREATE TABLE TABLE10_AF_NA AS SELECT 
 SEX_TYPE,AGE_GRP,
MEAN(EVRDY_LIFE_ARFF_SCOR) AS MEAN_EVRDY_LIFE,MEDIAN(EVRDY_LIFE_ARFF_SCOR) AS MED_EVRDY_LIFE,
MIN(EVRDY_LIFE_ARFF_SCOR) AS MIN_EVRDY_LIFE,MAX(EVRDY_LIFE_ARFF_SCOR) AS MAX_EVRDY_LIFE,
MEAN(PCT_ARFF_SCOR) AS MEAN_PCT,MEDIAN(PCT_ARFF_SCOR) AS MED_PCT,
MIN(PCT_ARFF_SCOR) AS MIN_PCT,MAX(PCT_ARFF_SCOR) AS MAX_PCT,
MEAN(BHVR_ARFF_SCOR) AS MEAN_BHVR,MEDIAN(BHVR_ARFF_SCOR) AS MED_BHVR,
MIN(BHVR_ARFF_SCOR) AS MIN_BHVR,MAX(BHVR_ARFF_SCOR) AS MAX_BHVR,
MEAN(TNDNC_ARFF_SCOR) AS MEAN_TNDNC,MEDIAN(TNDNC_ARFF_SCOR) AS MED_TNDNC,
MIN(TNDNC_ARFF_SCOR) AS MIN_TNDNC,MAX(TNDNC_ARFF_SCOR) AS MAX_TNDNC,
MEAN(REHBT_ARFF_SCOR) AS MEAN_REHBT,MEDIAN(REHBT_ARFF_SCOR) AS MED_REHBT,
MIN(REHBT_ARFF_SCOR) AS MIN_REHBT,MAX(REHBT_ARFF_SCOR) AS MAX_REHBT,
MEAN(RCG_RCGT_SCOR) AS MEAN_RCG_RCGT,MEDIAN(RCG_RCGT_SCOR) AS MED_RCG_RCGT,
MIN(RCG_RCGT_SCOR) AS MIN_RCG_RCGT,MAX(RCG_RCGT_SCOR) AS MAX_RCG_RCGT
FROM DB.LUNG_CONTROL_TBNYBASE_AF_N
GROUP BY   SEX_TYPE,AGE_GRP; QUIT;

PROC SQL; CREATE TABLE TABLE10_AF_NB AS SELECT 
SEX_TYPE,AGE_GRP2,
MEAN(EVRDY_LIFE_ARFF_SCOR) AS MEAN_EVRDY_LIFE,MEDIAN(EVRDY_LIFE_ARFF_SCOR) AS MED_EVRDY_LIFE,
MIN(EVRDY_LIFE_ARFF_SCOR) AS MIN_EVRDY_LIFE,MAX(EVRDY_LIFE_ARFF_SCOR) AS MAX_EVRDY_LIFE,
MEAN(PCT_ARFF_SCOR) AS MEAN_PCT,MEDIAN(PCT_ARFF_SCOR) AS MED_PCT,
MIN(PCT_ARFF_SCOR) AS MIN_PCT,MAX(PCT_ARFF_SCOR) AS MAX_PCT,
MEAN(BHVR_ARFF_SCOR) AS MEAN_BHVR,MEDIAN(BHVR_ARFF_SCOR) AS MED_BHVR,
MIN(BHVR_ARFF_SCOR) AS MIN_BHVR,MAX(BHVR_ARFF_SCOR) AS MAX_BHVR,
MEAN(TNDNC_ARFF_SCOR) AS MEAN_TNDNC,MEDIAN(TNDNC_ARFF_SCOR) AS MED_TNDNC,
MIN(TNDNC_ARFF_SCOR) AS MIN_TNDNC,MAX(TNDNC_ARFF_SCOR) AS MAX_TNDNC,
MEAN(REHBT_ARFF_SCOR) AS MEAN_REHBT,MEDIAN(REHBT_ARFF_SCOR) AS MED_REHBT,
MIN(REHBT_ARFF_SCOR) AS MIN_REHBT,MAX(REHBT_ARFF_SCOR) AS MAX_REHBT,
MEAN(RCG_RCGT_SCOR) AS MEAN_RCG_RCGT,MEDIAN(RCG_RCGT_SCOR) AS MED_RCG_RCGT,
MIN(RCG_RCGT_SCOR) AS MIN_RCG_RCGT,MAX(RCG_RCGT_SCOR) AS MAX_RCG_RCGT
FROM DB.LUNG_CONTROL_TBNYBASE_AF_N
GROUP BY   SEX_TYPE,AGE_GRP2; QUIT;

PROC SQL; CREATE TABLE TABLE10_AF_NC AS SELECT 
SEX_TYPE,AGE_GRP65,
MEAN(EVRDY_LIFE_ARFF_SCOR) AS MEAN_EVRDY_LIFE,MEDIAN(EVRDY_LIFE_ARFF_SCOR) AS MED_EVRDY_LIFE,
MIN(EVRDY_LIFE_ARFF_SCOR) AS MIN_EVRDY_LIFE,MAX(EVRDY_LIFE_ARFF_SCOR) AS MAX_EVRDY_LIFE,
MEAN(PCT_ARFF_SCOR) AS MEAN_PCT,MEDIAN(PCT_ARFF_SCOR) AS MED_PCT,
MIN(PCT_ARFF_SCOR) AS MIN_PCT,MAX(PCT_ARFF_SCOR) AS MAX_PCT,
MEAN(BHVR_ARFF_SCOR) AS MEAN_BHVR,MEDIAN(BHVR_ARFF_SCOR) AS MED_BHVR,
MIN(BHVR_ARFF_SCOR) AS MIN_BHVR,MAX(BHVR_ARFF_SCOR) AS MAX_BHVR,
MEAN(TNDNC_ARFF_SCOR) AS MEAN_TNDNC,MEDIAN(TNDNC_ARFF_SCOR) AS MED_TNDNC,
MIN(TNDNC_ARFF_SCOR) AS MIN_TNDNC,MAX(TNDNC_ARFF_SCOR) AS MAX_TNDNC,
MEAN(REHBT_ARFF_SCOR) AS MEAN_REHBT,MEDIAN(REHBT_ARFF_SCOR) AS MED_REHBT,
MIN(REHBT_ARFF_SCOR) AS MIN_REHBT,MAX(REHBT_ARFF_SCOR) AS MAX_REHBT,
MEAN(RCG_RCGT_SCOR) AS MEAN_RCG_RCGT,MEDIAN(RCG_RCGT_SCOR) AS MED_RCG_RCGT,
MIN(RCG_RCGT_SCOR) AS MIN_RCG_RCGT,MAX(RCG_RCGT_SCOR) AS MAX_RCG_RCGT
FROM DB.LUNG_CONTROL_TBNYBASE_AF_N
GROUP BY   SEX_TYPE,AGE_GRP65; QUIT;


/*******************/

PROC SQL; CREATE TABLE TABLE10_BF_YA AS SELECT 
 SEX_TYPE,AGE_GRP,
MEAN(EVRDY_LIFE_ARFF_SCOR) AS MEAN_EVRDY_LIFE,MEDIAN(EVRDY_LIFE_ARFF_SCOR) AS MED_EVRDY_LIFE,
MIN(EVRDY_LIFE_ARFF_SCOR) AS MIN_EVRDY_LIFE,MAX(EVRDY_LIFE_ARFF_SCOR) AS MAX_EVRDY_LIFE,
MEAN(PCT_ARFF_SCOR) AS MEAN_PCT,MEDIAN(PCT_ARFF_SCOR) AS MED_PCT,
MIN(PCT_ARFF_SCOR) AS MIN_PCT,MAX(PCT_ARFF_SCOR) AS MAX_PCT,
MEAN(BHVR_ARFF_SCOR) AS MEAN_BHVR,MEDIAN(BHVR_ARFF_SCOR) AS MED_BHVR,
MIN(BHVR_ARFF_SCOR) AS MIN_BHVR,MAX(BHVR_ARFF_SCOR) AS MAX_BHVR,
MEAN(TNDNC_ARFF_SCOR) AS MEAN_TNDNC,MEDIAN(TNDNC_ARFF_SCOR) AS MED_TNDNC,
MIN(TNDNC_ARFF_SCOR) AS MIN_TNDNC,MAX(TNDNC_ARFF_SCOR) AS MAX_TNDNC,
MEAN(REHBT_ARFF_SCOR) AS MEAN_REHBT,MEDIAN(REHBT_ARFF_SCOR) AS MED_REHBT,
MIN(REHBT_ARFF_SCOR) AS MIN_REHBT,MAX(REHBT_ARFF_SCOR) AS MAX_REHBT,
MEAN(RCG_RCGT_SCOR) AS MEAN_RCG_RCGT,MEDIAN(RCG_RCGT_SCOR) AS MED_RCG_RCGT,
MIN(RCG_RCGT_SCOR) AS MIN_RCG_RCGT,MAX(RCG_RCGT_SCOR) AS MAX_RCG_RCGT
FROM DB.LUNG_CONTROL_TBNYBASE_BF_Y
GROUP BY   SEX_TYPE,AGE_GRP; QUIT;

PROC SQL; CREATE TABLE TABLE10_BF_YB AS SELECT 
 SEX_TYPE,AGE_GRP2,
MEAN(EVRDY_LIFE_ARFF_SCOR) AS MEAN_EVRDY_LIFE,MEDIAN(EVRDY_LIFE_ARFF_SCOR) AS MED_EVRDY_LIFE,
MIN(EVRDY_LIFE_ARFF_SCOR) AS MIN_EVRDY_LIFE,MAX(EVRDY_LIFE_ARFF_SCOR) AS MAX_EVRDY_LIFE,
MEAN(PCT_ARFF_SCOR) AS MEAN_PCT,MEDIAN(PCT_ARFF_SCOR) AS MED_PCT,
MIN(PCT_ARFF_SCOR) AS MIN_PCT,MAX(PCT_ARFF_SCOR) AS MAX_PCT,
MEAN(BHVR_ARFF_SCOR) AS MEAN_BHVR,MEDIAN(BHVR_ARFF_SCOR) AS MED_BHVR,
MIN(BHVR_ARFF_SCOR) AS MIN_BHVR,MAX(BHVR_ARFF_SCOR) AS MAX_BHVR,
MEAN(TNDNC_ARFF_SCOR) AS MEAN_TNDNC,MEDIAN(TNDNC_ARFF_SCOR) AS MED_TNDNC,
MIN(TNDNC_ARFF_SCOR) AS MIN_TNDNC,MAX(TNDNC_ARFF_SCOR) AS MAX_TNDNC,
MEAN(REHBT_ARFF_SCOR) AS MEAN_REHBT,MEDIAN(REHBT_ARFF_SCOR) AS MED_REHBT,
MIN(REHBT_ARFF_SCOR) AS MIN_REHBT,MAX(REHBT_ARFF_SCOR) AS MAX_REHBT,
MEAN(RCG_RCGT_SCOR) AS MEAN_RCG_RCGT,MEDIAN(RCG_RCGT_SCOR) AS MED_RCG_RCGT,
MIN(RCG_RCGT_SCOR) AS MIN_RCG_RCGT,MAX(RCG_RCGT_SCOR) AS MAX_RCG_RCGT
FROM DB.LUNG_CONTROL_TBNYBASE_BF_Y
GROUP BY   SEX_TYPE,AGE_GRP2; QUIT;

PROC SQL; CREATE TABLE TABLE10_BF_YC AS SELECT 
 SEX_TYPE,AGE_GRP65,
MEAN(EVRDY_LIFE_ARFF_SCOR) AS MEAN_EVRDY_LIFE,MEDIAN(EVRDY_LIFE_ARFF_SCOR) AS MED_EVRDY_LIFE,
MIN(EVRDY_LIFE_ARFF_SCOR) AS MIN_EVRDY_LIFE,MAX(EVRDY_LIFE_ARFF_SCOR) AS MAX_EVRDY_LIFE,
MEAN(PCT_ARFF_SCOR) AS MEAN_PCT,MEDIAN(PCT_ARFF_SCOR) AS MED_PCT,
MIN(PCT_ARFF_SCOR) AS MIN_PCT,MAX(PCT_ARFF_SCOR) AS MAX_PCT,
MEAN(BHVR_ARFF_SCOR) AS MEAN_BHVR,MEDIAN(BHVR_ARFF_SCOR) AS MED_BHVR,
MIN(BHVR_ARFF_SCOR) AS MIN_BHVR,MAX(BHVR_ARFF_SCOR) AS MAX_BHVR,
MEAN(TNDNC_ARFF_SCOR) AS MEAN_TNDNC,MEDIAN(TNDNC_ARFF_SCOR) AS MED_TNDNC,
MIN(TNDNC_ARFF_SCOR) AS MIN_TNDNC,MAX(TNDNC_ARFF_SCOR) AS MAX_TNDNC,
MEAN(REHBT_ARFF_SCOR) AS MEAN_REHBT,MEDIAN(REHBT_ARFF_SCOR) AS MED_REHBT,
MIN(REHBT_ARFF_SCOR) AS MIN_REHBT,MAX(REHBT_ARFF_SCOR) AS MAX_REHBT,
MEAN(RCG_RCGT_SCOR) AS MEAN_RCG_RCGT,MEDIAN(RCG_RCGT_SCOR) AS MED_RCG_RCGT,
MIN(RCG_RCGT_SCOR) AS MIN_RCG_RCGT,MAX(RCG_RCGT_SCOR) AS MAX_RCG_RCGT
FROM DB.LUNG_CONTROL_TBNYBASE_BF_Y
GROUP BY   SEX_TYPE,AGE_GRP65; QUIT;


PROC SQL; CREATE TABLE TABLE10_AF_YA AS SELECT 
 SEX_TYPE,AGE_GRP,
MEAN(EVRDY_LIFE_ARFF_SCOR) AS MEAN_EVRDY_LIFE,MEDIAN(EVRDY_LIFE_ARFF_SCOR) AS MED_EVRDY_LIFE,
MIN(EVRDY_LIFE_ARFF_SCOR) AS MIN_EVRDY_LIFE,MAX(EVRDY_LIFE_ARFF_SCOR) AS MAX_EVRDY_LIFE,
MEAN(PCT_ARFF_SCOR) AS MEAN_PCT,MEDIAN(PCT_ARFF_SCOR) AS MED_PCT,
MIN(PCT_ARFF_SCOR) AS MIN_PCT,MAX(PCT_ARFF_SCOR) AS MAX_PCT,
MEAN(BHVR_ARFF_SCOR) AS MEAN_BHVR,MEDIAN(BHVR_ARFF_SCOR) AS MED_BHVR,
MIN(BHVR_ARFF_SCOR) AS MIN_BHVR,MAX(BHVR_ARFF_SCOR) AS MAX_BHVR,
MEAN(TNDNC_ARFF_SCOR) AS MEAN_TNDNC,MEDIAN(TNDNC_ARFF_SCOR) AS MED_TNDNC,
MIN(TNDNC_ARFF_SCOR) AS MIN_TNDNC,MAX(TNDNC_ARFF_SCOR) AS MAX_TNDNC,
MEAN(REHBT_ARFF_SCOR) AS MEAN_REHBT,MEDIAN(REHBT_ARFF_SCOR) AS MED_REHBT,
MIN(REHBT_ARFF_SCOR) AS MIN_REHBT,MAX(REHBT_ARFF_SCOR) AS MAX_REHBT,
MEAN(RCG_RCGT_SCOR) AS MEAN_RCG_RCGT,MEDIAN(RCG_RCGT_SCOR) AS MED_RCG_RCGT,
MIN(RCG_RCGT_SCOR) AS MIN_RCG_RCGT,MAX(RCG_RCGT_SCOR) AS MAX_RCG_RCGT
FROM DB.LUNG_CONTROL_TBNYBASE_AF_Y
GROUP BY   SEX_TYPE,AGE_GRP; QUIT;

PROC SQL; CREATE TABLE TABLE10_AF_YB AS SELECT 
 SEX_TYPE,AGE_GRP2,
MEAN(EVRDY_LIFE_ARFF_SCOR) AS MEAN_EVRDY_LIFE,MEDIAN(EVRDY_LIFE_ARFF_SCOR) AS MED_EVRDY_LIFE,
MIN(EVRDY_LIFE_ARFF_SCOR) AS MIN_EVRDY_LIFE,MAX(EVRDY_LIFE_ARFF_SCOR) AS MAX_EVRDY_LIFE,
MEAN(PCT_ARFF_SCOR) AS MEAN_PCT,MEDIAN(PCT_ARFF_SCOR) AS MED_PCT,
MIN(PCT_ARFF_SCOR) AS MIN_PCT,MAX(PCT_ARFF_SCOR) AS MAX_PCT,
MEAN(BHVR_ARFF_SCOR) AS MEAN_BHVR,MEDIAN(BHVR_ARFF_SCOR) AS MED_BHVR,
MIN(BHVR_ARFF_SCOR) AS MIN_BHVR,MAX(BHVR_ARFF_SCOR) AS MAX_BHVR,
MEAN(TNDNC_ARFF_SCOR) AS MEAN_TNDNC,MEDIAN(TNDNC_ARFF_SCOR) AS MED_TNDNC,
MIN(TNDNC_ARFF_SCOR) AS MIN_TNDNC,MAX(TNDNC_ARFF_SCOR) AS MAX_TNDNC,
MEAN(REHBT_ARFF_SCOR) AS MEAN_REHBT,MEDIAN(REHBT_ARFF_SCOR) AS MED_REHBT,
MIN(REHBT_ARFF_SCOR) AS MIN_REHBT,MAX(REHBT_ARFF_SCOR) AS MAX_REHBT,
MEAN(RCG_RCGT_SCOR) AS MEAN_RCG_RCGT,MEDIAN(RCG_RCGT_SCOR) AS MED_RCG_RCGT,
MIN(RCG_RCGT_SCOR) AS MIN_RCG_RCGT,MAX(RCG_RCGT_SCOR) AS MAX_RCG_RCGT
FROM DB.LUNG_CONTROL_TBNYBASE_AF_Y
GROUP BY   SEX_TYPE,AGE_GRP2; QUIT;

PROC SQL; CREATE TABLE TABLE10_AF_YC AS SELECT 
 SEX_TYPE,AGE_GRP65,
MEAN(EVRDY_LIFE_ARFF_SCOR) AS MEAN_EVRDY_LIFE,MEDIAN(EVRDY_LIFE_ARFF_SCOR) AS MED_EVRDY_LIFE,
MIN(EVRDY_LIFE_ARFF_SCOR) AS MIN_EVRDY_LIFE,MAX(EVRDY_LIFE_ARFF_SCOR) AS MAX_EVRDY_LIFE,
MEAN(PCT_ARFF_SCOR) AS MEAN_PCT,MEDIAN(PCT_ARFF_SCOR) AS MED_PCT,
MIN(PCT_ARFF_SCOR) AS MIN_PCT,MAX(PCT_ARFF_SCOR) AS MAX_PCT,
MEAN(BHVR_ARFF_SCOR) AS MEAN_BHVR,MEDIAN(BHVR_ARFF_SCOR) AS MED_BHVR,
MIN(BHVR_ARFF_SCOR) AS MIN_BHVR,MAX(BHVR_ARFF_SCOR) AS MAX_BHVR,
MEAN(TNDNC_ARFF_SCOR) AS MEAN_TNDNC,MEDIAN(TNDNC_ARFF_SCOR) AS MED_TNDNC,
MIN(TNDNC_ARFF_SCOR) AS MIN_TNDNC,MAX(TNDNC_ARFF_SCOR) AS MAX_TNDNC,
MEAN(REHBT_ARFF_SCOR) AS MEAN_REHBT,MEDIAN(REHBT_ARFF_SCOR) AS MED_REHBT,
MIN(REHBT_ARFF_SCOR) AS MIN_REHBT,MAX(REHBT_ARFF_SCOR) AS MAX_REHBT,
MEAN(RCG_RCGT_SCOR) AS MEAN_RCG_RCGT,MEDIAN(RCG_RCGT_SCOR) AS MED_RCG_RCGT,
MIN(RCG_RCGT_SCOR) AS MIN_RCG_RCGT,MAX(RCG_RCGT_SCOR) AS MAX_RCG_RCGT
FROM DB.LUNG_CONTROL_TBNYBASE_AF_Y
GROUP BY   SEX_TYPE,AGE_GRP65; QUIT;



/*******************/
PROC SQL; CREATE TABLE TABLE11_BF_YA AS SELECT 
 SEX_TYPE,AGE_GRP,
MEAN(VALID_TERM) AS MEAN_EVRDY_LIFE,MEDIAN(VALID_TERM) AS MED_EVRDY_LIFE,
MIN(VALID_TERM) AS MIN_EVRDY_LIFE,MAX(VALID_TERM) AS MAX_EVRDY_LIFE
FROM DB.LUNG_CONTROL_TBNYBASE_BF_Y
GROUP BY   SEX_TYPE,AGE_GRP; QUIT;

PROC SQL; CREATE TABLE TABLE11_BF_YB AS SELECT 
 SEX_TYPE,AGE_GRP2,
MEAN(VALID_TERM) AS MEAN_EVRDY_LIFE,MEDIAN(VALID_TERM) AS MED_EVRDY_LIFE,
MIN(VALID_TERM) AS MIN_EVRDY_LIFE,MAX(VALID_TERM) AS MAX_EVRDY_LIFE
FROM DB.LUNG_CONTROL_TBNYBASE_BF_Y
GROUP BY   SEX_TYPE,AGE_GRP2; QUIT;

PROC SQL; CREATE TABLE TABLE11_BF_YC AS SELECT 
 SEX_TYPE,AGE_GRP65,
MEAN(VALID_TERM) AS MEAN_EVRDY_LIFE,MEDIAN(VALID_TERM) AS MED_EVRDY_LIFE,
MIN(VALID_TERM) AS MIN_EVRDY_LIFE,MAX(VALID_TERM) AS MAX_EVRDY_LIFE
FROM DB.LUNG_CONTROL_TBNYBASE_BF_Y
GROUP BY   SEX_TYPE,AGE_GRP65; QUIT;

PROC SQL; CREATE TABLE TABLE11_AF_YA AS SELECT 
 SEX_TYPE,AGE_GRP,
MEAN(VALID_TERM) AS MEAN_EVRDY_LIFE,MEDIAN(VALID_TERM) AS MED_EVRDY_LIFE,
MIN(VALID_TERM) AS MIN_EVRDY_LIFE,MAX(VALID_TERM) AS MAX_EVRDY_LIFE
FROM DB.LUNG_CONTROL_TBNYBASE_AF_Y
GROUP BY   SEX_TYPE,AGE_GRP; QUIT;

PROC SQL; CREATE TABLE TABLE11_AF_YB AS SELECT 
 SEX_TYPE,AGE_GRP2,
MEAN(VALID_TERM) AS MEAN_EVRDY_LIFE,MEDIAN(VALID_TERM) AS MED_EVRDY_LIFE,
MIN(VALID_TERM) AS MIN_EVRDY_LIFE,MAX(VALID_TERM) AS MAX_EVRDY_LIFE
FROM DB.LUNG_CONTROL_TBNYBASE_AF_Y
GROUP BY   SEX_TYPE,AGE_GRP2; QUIT;

PROC SQL; CREATE TABLE TABLE11_AF_YC AS SELECT 
 SEX_TYPE,AGE_GRP65,
MEAN(VALID_TERM) AS MEAN_EVRDY_LIFE,MEDIAN(VALID_TERM) AS MED_EVRDY_LIFE,
MIN(VALID_TERM) AS MIN_EVRDY_LIFE,MAX(VALID_TERM) AS MAX_EVRDY_LIFE
FROM DB.LUNG_CONTROL_TBNYBASE_AF_Y
GROUP BY   SEX_TYPE,AGE_GRP65; QUIT;

/*******************/
PROC SQL; CREATE TABLE TABLE12_BF_YA AS SELECT 
 SEX_TYPE,AGE_GRP,GJU_RCGT_GRADE_CD,COUNT(INDI_DSCM_NO) AS N
FROM DB.LUNG_CONTROL_TBNYBASE_BF_Y
GROUP BY   SEX_TYPE,AGE_GRP,GJU_RCGT_GRADE_CD; QUIT;

PROC SQL; CREATE TABLE TABLE12_BF_YB AS SELECT 
 SEX_TYPE,AGE_GRP2,GJU_RCGT_GRADE_CD,COUNT(INDI_DSCM_NO) AS N
FROM DB.LUNG_CONTROL_TBNYBASE_BF_Y
GROUP BY   SEX_TYPE,AGE_GRP2,GJU_RCGT_GRADE_CD; QUIT;

PROC SQL; CREATE TABLE TABLE12_BF_YC AS SELECT 
 SEX_TYPE,AGE_GRP65,GJU_RCGT_GRADE_CD,COUNT(INDI_DSCM_NO) AS N
FROM DB.LUNG_CONTROL_TBNYBASE_BF_Y
GROUP BY   SEX_TYPE,AGE_GRP65,GJU_RCGT_GRADE_CD; QUIT;

PROC SQL; CREATE TABLE TABLE12_AF_YA AS SELECT 
 SEX_TYPE,AGE_GRP,GJU_RCGT_GRADE_CD,COUNT(INDI_DSCM_NO) AS N
FROM DB.LUNG_CONTROL_TBNYBASE_AF_Y
GROUP BY   SEX_TYPE,AGE_GRP,GJU_RCGT_GRADE_CD; QUIT;

PROC SQL; CREATE TABLE TABLE12_AF_YB AS SELECT 
 SEX_TYPE,AGE_GRP2,GJU_RCGT_GRADE_CD,COUNT(INDI_DSCM_NO) AS N
FROM DB.LUNG_CONTROL_TBNYBASE_AF_Y
GROUP BY   SEX_TYPE,AGE_GRP2,GJU_RCGT_GRADE_CD; QUIT;

PROC SQL; CREATE TABLE TABLE12_AF_YC AS SELECT 
 SEX_TYPE,AGE_GRP65,GJU_RCGT_GRADE_CD,COUNT(INDI_DSCM_NO) AS N
FROM DB.LUNG_CONTROL_TBNYBASE_AF_Y
GROUP BY   SEX_TYPE,AGE_GRP65,GJU_RCGT_GRADE_CD; QUIT;

