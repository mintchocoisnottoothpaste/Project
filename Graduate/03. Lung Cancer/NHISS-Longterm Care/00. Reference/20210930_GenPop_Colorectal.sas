/********************************RAW DATA LIBRARY*********************************/

/*Raw data for BFC, DTH, T20, T40*/
libname R1 "F:\관리자료\NHIS_2017_1_354\RAWDATA_CANCER(BFC,DTH,T20,T40)\180320B_암센터_암환자생존예후(E7388)_#49";
/*Raw data for 산정특*/
libname R2 "F:\관리자료\NHIS_2017_1_354\RAWDATA_CANCER(BFC,DTH,T20,T40)\산정특례";
/*Raw data for GJ (cbr, ccr, ccx, clv, cst, cq, g1e, g2e, l1e, l2e), T60*/
libname R3 "F:\관리자료\NHIS_2017_1_354\RAWDATA_CANCER(GJ)\E7388(49번자리)\E7388";
/*Raw data for T30*/
libname R4a "F:\관리자료\NHIS_2017_1_354\RAWDATA_CANCER(T30)\E7388\2002_2008";
libname R4b "F:\관리자료\NHIS_2017_1_354\RAWDATA_CANCER(T30)\E7388\2009_2012";
libname R4c "F:\관리자료\NHIS_2017_1_354\RAWDATA_CANCER(T30)\E7388\2013_2016";
/*Raw data for general population*/
libname R5 "F:\관리자료\NHIS_2017_1_354\RAWDATA_GENPOP";

/*ADD (2017-2020)*/
libname add "D:\2017-1-354(조현순) 오프라인8pc(2021.6.30.)";

/*
jk : add2_2_bfc_2002 - add2_2_bfc_2020
dth : add2_2_dth
t20 : add2_2_t20_200201- add2_2_t20_202012
t40 : add2_2_t40_200201- add2_2_t40_202012

*/
/********************************WORKING DATA LIBRARY*********************************/

libname DB "F:\관리자료\NHIS_2017_1_354\생존과제\Dataset\WORKING";
libname C18_C20 "F:\관리자료\NHIS_2017_1_354\생존과제\Dataset\Colon_DB";


libname DB "F:\관리자료\NHIS_2017_1_354\생존과제\Dataset\WORKING\NEW";
libname C18_C20 "F:\관리자료\NHIS_2017_1_354\생존과제\Dataset\Colon_DB\NEW";

libname FINAL "F:\관리자료\NHIS_2017_1_354\생존과제\Dataset\Colon_DB\Final";

/*general population*/
libname DBgen "F:\NHIS_2017_1_354\생존과제\Dataset\WORKING_GEN";
libname DBgen "F:\관리자료\NHIS_2017_1_354\생존과제\Dataset\FRAILTY_DB\GENERAL_RAW";

/********************************WORKING DATA LIBRARY*********************************/
%let icd=Colon;
%MACRO year(year); 
data cancer_&icd._&year; set final.c18_c20_cci_0920_modif;where c_year=&year and Cancer_grp="&icd";run;
%MEND;%MACRO DO_LIST; %DO I=2010 %TO 2020; %year(&I);%END; %MEND DO_LIST; %DO_LIST;

%let icd=Rectal;
%MACRO year(year); 
data cancer_&icd._&year; set final.c18_c20_cci_0920_modif;where c_year=&year and Cancer_grp="&icd";run;
%MEND;%MACRO DO_LIST; %DO I=2010 %TO 2020; %year(&I);%END; %MEND DO_LIST; %DO_LIST;


%LET SEED_N=20210913;
%let icd=Colon;

/*Colon*/
%LET N_PAT=14745; /*2010*/%let year=2010;
%LET N_PAT=15692; /*2011*/%let year=2011;
%LET N_PAT=16009; /*2012*/%let year=2012;
%LET N_PAT=15303; /*2013*/%let year=2013;
%LET N_PAT=15242; /*2014*/%let year=2014;
%LET N_PAT=15512; /*2015*/%let year=2015;
%LET N_PAT=16709; /*2016*/%let year=2016;
%LET N_PAT=16338; /*2017*/%let year=2017;
%LET N_PAT=16037; /*2018*/%let year=2018;
%LET N_PAT=16657; /*2019*/%let year=2019;
%LET N_PAT=15499; /*2020*/%let year=2020;

/*Rectal*/
%LET N_PAT=10793; /*2010*/%let year=2010;
%LET N_PAT=11529; /*2011*/%let year=2011;
%LET N_PAT=11995; /*2012*/%let year=2012;
%LET N_PAT=11454; /*2013*/%let year=2013;
%LET N_PAT=11076; /*2014*/%let year=2014;
%LET N_PAT=10661; /*2015*/%let year=2015;
%LET N_PAT=11076; /*2016*/%let year=2016;
%LET N_PAT=10709; /*2017*/%let year=2017;
%LET N_PAT=10384; /*2018*/%let year=2018;
%LET N_PAT=10722; /*2019*/%let year=2019;
%LET N_PAT=10120; /*2020*/%let year=2020;



proc sort data=C18_C20.GEN_wo_C out=gen_wo_c_id(keep=INDI_DSCM_NO);by INDI_DSCM_NO; run;
proc sort data=R5.Add_bfc_&year out=gen_&year;by INDI_DSCM_NO;run;
proc sort data=add.add2_bfc_&year out=gen_&year;by INDI_DSCM_NO;run;

/*data gen_&year;merge gen_&year (in=a) gen_wo_c_id(in=b) ; 
by INDI_DSCM_NO; if a=1 and b=1 ;run;*/


data gen_&year;merge gen_&year (in=a) gen_wo_c_id(in=b) 
ex_ID_2010(in=c) ex_ID_2011(in=d)  ex_ID_2012(in=e)  ex_ID_2013(in=f)  ex_ID_2014(in=g)
ex_ID_2015(in=h) ex_ID_2016(in=i)  ex_ID_2017(in=j) ex_ID_2018(in=k) ex_ID_2019(in=l); 
by INDI_DSCM_NO; 
if a=1 and b=1 and 
c^=1 and d^=1 and e^=1 and f^=1 and g^=1 and 
h^=1 and i^=1 and j^=1 and k^=1 and l^=1;run;

DATA gen_&year; SET gen_&year;

LENGTH SIDO_NM $15. AGE_GRP $10.;

SIDO_CD=SUBSTR(RVSN_ADDR_CD,1,2);

IF SIDO_CD=' ' THEN SIDO_NM=' ';
ELSE IF SIDO_CD='36' THEN SIDO_NM='세종특별자치시';
ELSE IF SIDO_CD='11' THEN SIDO_NM='서울특별시';
ELSE IF SIDO_CD='26' THEN SIDO_NM='부산광역시';
ELSE IF SIDO_CD='27' THEN SIDO_NM='대구광역시';
ELSE IF SIDO_CD='28' THEN SIDO_NM='인천광역시';
ELSE IF SIDO_CD='29' THEN SIDO_NM='광주광역시';
ELSE IF SIDO_CD='30' THEN SIDO_NM='대전광역시';
ELSE IF SIDO_CD='31' THEN SIDO_NM='울산광역시';

ELSE IF SIDO_CD='41' THEN SIDO_NM='경기도';
ELSE IF SIDO_CD='42' THEN SIDO_NM='강원도';
ELSE IF SIDO_CD='43' THEN SIDO_NM='충청북도';
ELSE IF SIDO_CD='44' THEN SIDO_NM='충청남도';
ELSE IF SIDO_CD='45' THEN SIDO_NM='전라북도';
ELSE IF SIDO_CD='46' THEN SIDO_NM='전라남도';
ELSE IF SIDO_CD='47' THEN SIDO_NM='경상북도';
ELSE IF SIDO_CD='48' THEN SIDO_NM='경상남도';
ELSE IF SIDO_CD='49' THEN SIDO_NM='제주도';

ELSE IF SIDO_CD='50' THEN SIDO_NM='제주특별자치도';
ELSE IF SIDO_CD='90' THEN SIDO_NM=' ';
ELSE IF SIDO_CD='z' THEN SIDO_NM=' ';

IF YEND_STD_AGE=. THEN AGE_GRP=" ";
ELSE IF 0<=YEND_STD_AGE<=4 THEN AGE_GRP='00-04';
ELSE IF 5<=YEND_STD_AGE<=9 THEN AGE_GRP='05-09';
ELSE IF 10<=YEND_STD_AGE<=14 THEN AGE_GRP='10-14';
ELSE IF 15<=YEND_STD_AGE<=19 THEN AGE_GRP='15-19';
ELSE IF 20<=YEND_STD_AGE<=24 THEN AGE_GRP='20-24';
ELSE IF 25<=YEND_STD_AGE<=29 THEN AGE_GRP='25-29';
ELSE IF 30<=YEND_STD_AGE<=34 THEN AGE_GRP='30-34';
ELSE IF 35<=YEND_STD_AGE<=39 THEN AGE_GRP='35-39';
ELSE IF 40<=YEND_STD_AGE<=44 THEN AGE_GRP='40-44';
ELSE IF 45<=YEND_STD_AGE<=49 THEN AGE_GRP='45-49';
ELSE IF 50<=YEND_STD_AGE<=54 THEN AGE_GRP='50-54';
ELSE IF 55<=YEND_STD_AGE<=59 THEN AGE_GRP='55-59';
ELSE IF 60<=YEND_STD_AGE<=64 THEN AGE_GRP='60-64';
ELSE IF 65<=YEND_STD_AGE<=69 THEN AGE_GRP='65-69';
ELSE IF 70<=YEND_STD_AGE<=74 THEN AGE_GRP='70-74';
ELSE IF 75<=YEND_STD_AGE<=79 THEN AGE_GRP='75-79';
ELSE IF 80<=YEND_STD_AGE<=84 THEN AGE_GRP='80-84';
ELSE IF YEND_STD_AGE>=85 THEN AGE_GRP='85+';

RUN;
proc sort data= gen_&year;by SEX_TYPE AGE_GRP ;run;

/********************************WORKING DATA LIBRARY*********************************/

data tmp; set cancer_&icd._&year; 
where SEX_TYPE^=" " and AGE_GRP^=" " and SIDO_CD^=" ";run;

%LET DATA=tmp;

PROC sort DATA=&DATA;
by SEX_TYPE AGE_GRP ;RUN;

PROC FREQ DATA=&DATA;
TABLE SEX_TYPE*AGE_GRP/ OUT=NEWFREQ ;RUN;

DATA NEWFREQ2 ERROR;
SET NEWFREQ;
SAMPNUM=PERCENT*&N_PAT/100; 
_NSIZE_=ROUND(SAMPNUM,1);
SAMPNUM=ROUND(SAMPNUM,0.01);
IF _NSIZE_=0 THEN OUTPUT ERROR;
IF _NSIZE_=0 THEN DELETE;
OUTPUT NEWFREQ2; RUN;

DATA NEWFREQ3;
SET NEWFREQ2;
KEEP SEX_TYPE AGE_GRP _NSIZE_;RUN;

PROC SORT DATA= NEWFREQ3;
BY SEX_TYPE AGE_GRP _NSIZE_;RUN;

DATA FREQ_1; SET NEWFREQ3;
IF _NSIZE_ GT 0; RUN;


DATA GEN_&icd._&YEAR; 
MERGE gen_&year (IN=A) FREQ_1 (IN=B); BY SEX_TYPE AGE_GRP; IF A AND B;RUN;

ods html close; ods html;
proc print data=FREQ_1 noobs; var _NSIZE_;run;

PROC SURVEYSELECT DATA=GEN_&icd._&YEAR OUT=final.GEN_&icd._&YEAR 
METHOD=SRS SEED=&SEED_N
SAMPSIZE=(44
103
190
334
698
1046
1484
1333
1259
1024
790
467
35
78
180
313
538
610
789
652
793
935
929
875
);
STRATA SEX_TYPE AGE_GRP ;RUN;
proc freq data=final.GEN_&icd._&year;table  SEX_TYPE AGE_GRP ;RUN;

/*MATCHED ID*/
proc sort data=final.GEN_&icd._2010 out=ex_ID_2010 (KEEP=INDI_DSCM_NO); by INDI_DSCM_NO ; run;
proc sort data=final.GEN_&icd._2011 out=ex_ID_2011 (KEEP=INDI_DSCM_NO); by INDI_DSCM_NO ; run;
proc sort data=final.GEN_&icd._2012 out=ex_ID_2012 (KEEP=INDI_DSCM_NO); by INDI_DSCM_NO ; run;
proc sort data=final.GEN_&icd._2013 out=ex_ID_2013 (KEEP=INDI_DSCM_NO); by INDI_DSCM_NO ; run;
proc sort data=final.GEN_&icd._2014 out=ex_ID_2014 (KEEP=INDI_DSCM_NO); by INDI_DSCM_NO ; run;
proc sort data=final.GEN_&icd._2015 out=ex_ID_2015 (KEEP=INDI_DSCM_NO); by INDI_DSCM_NO ; run;
proc sort data=final.GEN_&icd._2016 out=ex_ID_2016 (KEEP=INDI_DSCM_NO); by INDI_DSCM_NO ; run;
proc sort data=final.GEN_&icd._2017 out=ex_ID_2017 (KEEP=INDI_DSCM_NO); by INDI_DSCM_NO ; run;
proc sort data=final.GEN_&icd._2018 out=ex_ID_2018 (KEEP=INDI_DSCM_NO); by INDI_DSCM_NO ; run;
proc sort data=final.GEN_&icd._2019 out=ex_ID_2019 (KEEP=INDI_DSCM_NO); by INDI_DSCM_NO ; run;

data final.gen_colon;set final.GEN_colon_2010-final.GEN_colon_2020;run;
proc freq data= final.gen_colon;table std_yyyy*sex_type/nocol norow nopercent;run;
proc sql; create table id as select count(distinct INDI_DSCM_NO) from final.gen_colon;quit;

data final.gen_rectal;set final.GEN_rectal_2010-final.GEN_rectal_2020;run;
proc freq data= final.gen_rectal;table std_yyyy*sex_type/nocol norow nopercent;run;
proc sql; create table id as select count(distinct INDI_DSCM_NO) from final.gen_rectal;quit;


/*********************************************************************************************************************************************/
/* 							Comorbidity                                                                                                                                                                                                    */
/*********************************************************************************************************************************************/


proc sort data=final.gen_colon out=db1_id(KEEP=INDI_DSCM_NO std_yyyy); 
where  std_yyyy in ("2010","2011","2012","2013","2014","2015","2016"); by INDI_DSCM_NO;run;/*109212*/

proc sort data=final.gen_colon out=db2_id(KEEP=INDI_DSCM_NO std_yyyy); 
where  std_yyyy in ("2017","2018"); by INDI_DSCM_NO;run;/*32375*/

proc sort data=final.gen_colon out=db3_id(KEEP=INDI_DSCM_NO std_yyyy); 
where  std_yyyy in ("2017","2018","2019","2020"); by INDI_DSCM_NO;run;/*64531*/


/*Raw data for general population*/
libname R1 "F:\관리자료\NHIS_2017_1_354\RAWDATA_GENPOP";

/*****Step9. 2009년 암환자의 모든 상병기록 (T20)*****/
%MACRO SET(YR);
PROC SQL; CREATE TABLE RECORD_&YR.01 AS SELECT * FROM db1_id AS X LEFT JOIN R1.add_t20_&YR.01 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.02 AS SELECT * FROM db1_id AS X LEFT JOIN R1.add_t20_&YR.02 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.03 AS SELECT * FROM db1_id AS X LEFT JOIN R1.add_t20_&YR.03 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.04 AS SELECT * FROM db1_id AS X LEFT JOIN R1.add_t20_&YR.04 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.05 AS SELECT * FROM db1_id AS X LEFT JOIN R1.add_t20_&YR.05 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.06 AS SELECT * FROM db1_id AS X LEFT JOIN R1.add_t20_&YR.06 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.07 AS SELECT * FROM db1_id AS X LEFT JOIN R1.add_t20_&YR.07 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.08 AS SELECT * FROM db1_id AS X LEFT JOIN R1.add_t20_&YR.08 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.09 AS SELECT * FROM db1_id AS X LEFT JOIN R1.add_t20_&YR.09 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.10 AS SELECT * FROM db1_id AS X LEFT JOIN R1.add_t20_&YR.10 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.11 AS SELECT * FROM db1_id AS X LEFT JOIN R1.add_t20_&YR.11 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.12 AS SELECT * FROM db1_id AS X LEFT JOIN R1.add_t20_&YR.12 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;

DATA RECORD_&YR; SET RECORD_&YR.01-RECORD_&YR.12; 
KEEP 
CMN_KEY INDI_DSCM_NO
SICK_SYM1 SICK_SYM2 SICK_SYM3 SICK_SYM4 SICK_SYM5
MDCARE_STRT_DT FORM_CD SPCF_SYM_TYPE ED_RC_TOT_AMT
;RUN;
%MEND;%MACRO DOLIST; %DO I=2008 %TO 2016; %SET(&I); %END; %MEND; %DOLIST;

DATA C18_C20.Gen_RECORD_T20_all; SET RECORD_2007-RECORD_2016; RUN; 

PROC SQL; CREATE TABLE C18_C20.Gen_RECORD_T20_all_CMNKEY AS SELECT  DISTINCT CMN_KEY FROM C18_C20.Gen_RECORD_T20_all; QUIT;
PROC SORT DATA= C18_C20.Gen_RECORD_T20_all_CMNKEY; BY CMN_KEY; RUN;

/*****Step10. 2009년 위암환자의 모든 상병기록 (T40)*****/

%MACRO SET(YR);
PROC SQL; CREATE TABLE RECORD40_&YR.01 AS SELECT * FROM C18_C20.Gen_RECORD_T20_all_CMNKEY AS X LEFT JOIN R1.add_t40_&YR.01 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.02 AS SELECT * FROM C18_C20.Gen_RECORD_T20_all_CMNKEY AS X LEFT JOIN R1.add_t40_&YR.02 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.03 AS SELECT * FROM C18_C20.Gen_RECORD_T20_all_CMNKEY AS X LEFT JOIN R1.add_t40_&YR.03 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.04 AS SELECT * FROM C18_C20.Gen_RECORD_T20_all_CMNKEY AS X LEFT JOIN R1.add_t40_&YR.04 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.05 AS SELECT * FROM C18_C20.Gen_RECORD_T20_all_CMNKEY AS X LEFT JOIN R1.add_t40_&YR.05 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.06 AS SELECT * FROM C18_C20.Gen_RECORD_T20_all_CMNKEY AS X LEFT JOIN R1.add_t40_&YR.06 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.07 AS SELECT * FROM C18_C20.Gen_RECORD_T20_all_CMNKEY AS X LEFT JOIN R1.add_t40_&YR.07 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.08 AS SELECT * FROM C18_C20.Gen_RECORD_T20_all_CMNKEY AS X LEFT JOIN R1.add_t40_&YR.08 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.09 AS SELECT * FROM C18_C20.Gen_RECORD_T20_all_CMNKEY AS X LEFT JOIN R1.add_t40_&YR.09 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.10 AS SELECT * FROM C18_C20.Gen_RECORD_T20_all_CMNKEY AS X LEFT JOIN R1.add_t40_&YR.10 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.11 AS SELECT * FROM C18_C20.Gen_RECORD_T20_all_CMNKEY AS X LEFT JOIN R1.add_t40_&YR.11 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.12 AS SELECT * FROM C18_C20.Gen_RECORD_T20_all_CMNKEY AS X LEFT JOIN R1.add_t40_&YR.12 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;

DATA C18_C20.RECORD40_&YR; SET RECORD40_&YR.01-RECORD40_&YR.12; 
KEEP CMN_KEY MCEX_SICK_SYM SPCF_SYM_TYPE SICK_CLSF_TYPE;RUN;
%MEND;%MACRO DOLIST; %DO I=2007 %TO 2016; %SET(&I); %END; %MEND; %DOLIST;

DATA C18_C20.RECORD_T40_all; SET C18_C20.RECORD40_2007-C18_C20.RECORD40_2016; RUN; 




/**db_id2**/
/*****Step9. 2009년 암환자의 모든 상병기록 (T20)*****/
%MACRO SET(YR);
PROC SQL; CREATE TABLE RECORD_&YR.01 AS SELECT * FROM db2_id AS X LEFT JOIN R1.add_t20_&YR.01 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.02 AS SELECT * FROM db2_id AS X LEFT JOIN R1.add_t20_&YR.02 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.03 AS SELECT * FROM db2_id AS X LEFT JOIN R1.add_t20_&YR.03 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.04 AS SELECT * FROM db2_id AS X LEFT JOIN R1.add_t20_&YR.04 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.05 AS SELECT * FROM db2_id AS X LEFT JOIN R1.add_t20_&YR.05 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.06 AS SELECT * FROM db2_id AS X LEFT JOIN R1.add_t20_&YR.06 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.07 AS SELECT * FROM db2_id AS X LEFT JOIN R1.add_t20_&YR.07 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.08 AS SELECT * FROM db2_id AS X LEFT JOIN R1.add_t20_&YR.08 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.09 AS SELECT * FROM db2_id AS X LEFT JOIN R1.add_t20_&YR.09 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.10 AS SELECT * FROM db2_id AS X LEFT JOIN R1.add_t20_&YR.10 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.11 AS SELECT * FROM db2_id AS X LEFT JOIN R1.add_t20_&YR.11 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.12 AS SELECT * FROM db2_id AS X LEFT JOIN R1.add_t20_&YR.12 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;

DATA RECORD_&YR; SET RECORD_&YR.01-RECORD_&YR.12; 
KEEP 
CMN_KEY INDI_DSCM_NO
SICK_SYM1 SICK_SYM2 SICK_SYM3 SICK_SYM4 SICK_SYM5
MDCARE_STRT_DT FORM_CD SPCF_SYM_TYPE ED_RC_TOT_AMT
;RUN;
%MEND;%MACRO DOLIST; %DO I=2015 %TO 2016; %SET(&I); %END; %MEND; %DOLIST;

DATA C18_C20.Gen_RECORD_T20_all2; SET RECORD_2015-RECORD_2016; RUN; 

PROC SQL; CREATE TABLE C18_C20.Gen_RECORD_T20_all2_CMNKEY AS SELECT  DISTINCT CMN_KEY FROM C18_C20.Gen_RECORD_T20_all2; QUIT;
PROC SORT DATA= C18_C20.Gen_RECORD_T20_all2_CMNKEY; BY CMN_KEY; RUN;

/*****Step10. 2009년 위암환자의 모든 상병기록 (T40)*****/

%MACRO SET(YR);
PROC SQL; CREATE TABLE RECORD40_&YR.01 AS SELECT * FROM C18_C20.Gen_RECORD_T20_all2_CMNKEY AS X LEFT JOIN R1.add_t40_&YR.01 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.02 AS SELECT * FROM C18_C20.Gen_RECORD_T20_all2_CMNKEY AS X LEFT JOIN R1.add_t40_&YR.02 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.03 AS SELECT * FROM C18_C20.Gen_RECORD_T20_all2_CMNKEY AS X LEFT JOIN R1.add_t40_&YR.03 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.04 AS SELECT * FROM C18_C20.Gen_RECORD_T20_all2_CMNKEY AS X LEFT JOIN R1.add_t40_&YR.04 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.05 AS SELECT * FROM C18_C20.Gen_RECORD_T20_all2_CMNKEY AS X LEFT JOIN R1.add_t40_&YR.05 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.06 AS SELECT * FROM C18_C20.Gen_RECORD_T20_all2_CMNKEY AS X LEFT JOIN R1.add_t40_&YR.06 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.07 AS SELECT * FROM C18_C20.Gen_RECORD_T20_all2_CMNKEY AS X LEFT JOIN R1.add_t40_&YR.07 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.08 AS SELECT * FROM C18_C20.Gen_RECORD_T20_all2_CMNKEY AS X LEFT JOIN R1.add_t40_&YR.08 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.09 AS SELECT * FROM C18_C20.Gen_RECORD_T20_all2_CMNKEY AS X LEFT JOIN R1.add_t40_&YR.09 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.10 AS SELECT * FROM C18_C20.Gen_RECORD_T20_all2_CMNKEY AS X LEFT JOIN R1.add_t40_&YR.10 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.11 AS SELECT * FROM C18_C20.Gen_RECORD_T20_all2_CMNKEY AS X LEFT JOIN R1.add_t40_&YR.11 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.12 AS SELECT * FROM C18_C20.Gen_RECORD_T20_all2_CMNKEY AS X LEFT JOIN R1.add_t40_&YR.12 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;

DATA RECORD40_&YR; SET RECORD40_&YR.01-RECORD40_&YR.12; 
KEEP CMN_KEY MCEX_SICK_SYM SPCF_SYM_TYPE SICK_CLSF_TYPE;RUN;
%MEND;%MACRO DOLIST; %DO I=2015 %TO 2016; %SET(&I); %END; %MEND; %DOLIST;

DATA C18_C20.RECORD_T40_all2; SET RECORD40_2015-RECORD40_2016; RUN; 


/**db_id3**/
/*****Step9. 2009년 암환자의 모든 상병기록 (T20)*****/
libname add "D:\2017-1-354(조현순) 오프라인8pc(2021.6.30.)";

%MACRO SET(YR);
PROC SQL; CREATE TABLE RECORD_&YR.01 AS SELECT * FROM db3_id AS X LEFT JOIN add.add2_t20_&YR.01 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.02 AS SELECT * FROM db3_id AS X LEFT JOIN add.add2_t20_&YR.02 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.03 AS SELECT * FROM db3_id AS X LEFT JOIN add.add2_t20_&YR.03 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.04 AS SELECT * FROM db3_id AS X LEFT JOIN add.add2_t20_&YR.04 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.05 AS SELECT * FROM db3_id AS X LEFT JOIN add.add2_t20_&YR.05 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.06 AS SELECT * FROM db3_id AS X LEFT JOIN add.add2_t20_&YR.06 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.07 AS SELECT * FROM db3_id AS X LEFT JOIN add.add2_t20_&YR.07 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.08 AS SELECT * FROM db3_id AS X LEFT JOIN add.add2_t20_&YR.08 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.09 AS SELECT * FROM db3_id AS X LEFT JOIN add.add2_t20_&YR.09 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.10 AS SELECT * FROM db3_id AS X LEFT JOIN add.add2_t20_&YR.10 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.11 AS SELECT * FROM db3_id AS X LEFT JOIN add.add2_t20_&YR.11 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.12 AS SELECT * FROM db3_id AS X LEFT JOIN add.add2_t20_&YR.12 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;

DATA RECORD_&YR; SET RECORD_&YR.01-RECORD_&YR.12; 
KEEP 
CMN_KEY INDI_DSCM_NO
SICK_SYM1 SICK_SYM2 SICK_SYM3 SICK_SYM4 SICK_SYM5
MDCARE_STRT_DT FORM_CD SPCF_SYM_TYPE ED_RC_TOT_AMT
;RUN;
%MEND;%MACRO DOLIST; %DO I=2017 %TO 2020; %SET(&I); %END; %MEND; %DOLIST;

DATA C18_C20.Gen_RECORD_T20_all3; SET RECORD_2017-RECORD_2020; RUN; 

PROC SQL; CREATE TABLE C18_C20.Gen_RECORD_T20_all3_CMNKEY AS SELECT  DISTINCT CMN_KEY FROM C18_C20.Gen_RECORD_T20_all3; QUIT;
PROC SORT DATA= C18_C20.Gen_RECORD_T20_all3_CMNKEY; BY CMN_KEY; RUN;

/*****Step10. 2009년 위암환자의 모든 상병기록 (T40)*****/

%MACRO SET(YR);
PROC SQL; CREATE TABLE RECORD40_&YR.01 AS SELECT * FROM C18_C20.Gen_RECORD_T20_all3_CMNKEY AS X LEFT JOIN add.add2_t40_&YR.01 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.02 AS SELECT * FROM C18_C20.Gen_RECORD_T20_all3_CMNKEY AS X LEFT JOIN add.add2_t40_&YR.02 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.03 AS SELECT * FROM C18_C20.Gen_RECORD_T20_all3_CMNKEY AS X LEFT JOIN add.add2_t40_&YR.03 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.04 AS SELECT * FROM C18_C20.Gen_RECORD_T20_all3_CMNKEY AS X LEFT JOIN add.add2_t40_&YR.04 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.05 AS SELECT * FROM C18_C20.Gen_RECORD_T20_all3_CMNKEY AS X LEFT JOIN add.add2_t40_&YR.05 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.06 AS SELECT * FROM C18_C20.Gen_RECORD_T20_all3_CMNKEY AS X LEFT JOIN add.add2_t40_&YR.06 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.07 AS SELECT * FROM C18_C20.Gen_RECORD_T20_all3_CMNKEY AS X LEFT JOIN add.add2_t40_&YR.07 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.08 AS SELECT * FROM C18_C20.Gen_RECORD_T20_all3_CMNKEY AS X LEFT JOIN add.add2_t40_&YR.08 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.09 AS SELECT * FROM C18_C20.Gen_RECORD_T20_all3_CMNKEY AS X LEFT JOIN add.add2_t40_&YR.09 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.10 AS SELECT * FROM C18_C20.Gen_RECORD_T20_all3_CMNKEY AS X LEFT JOIN add.add2_t40_&YR.10 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.11 AS SELECT * FROM C18_C20.Gen_RECORD_T20_all3_CMNKEY AS X LEFT JOIN add.add2_t40_&YR.11 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.12 AS SELECT * FROM C18_C20.Gen_RECORD_T20_all3_CMNKEY AS X LEFT JOIN add.add2_t40_&YR.12 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;

DATA RECORD40_&YR; SET RECORD40_&YR.01-RECORD40_&YR.12; 
KEEP CMN_KEY MCEX_SICK_SYM SPCF_SYM_TYPE SICK_CLSF_TYPE;RUN;
%MEND;%MACRO DOLIST; %DO I=2017 %TO 2020; %SET(&I); %END; %MEND; %DOLIST;

DATA C18_C20.RECORD_T40_all3; SET RECORD40_2017-RECORD40_2020; RUN; 


%MACRO SET(year);

data t20_&year; set C18_C20.Gen_RECORD_T20_all; where substr(MDCARE_STRT_DT,1,4)="&year";run;
PROC SORT DATA=t20_&year;BY CMN_KEY;RUN;

PROC SORT DATA=C18_C20.record40_&year out=t40_&year; BY CMN_KEY;where MCEX_SICK_SYM^=" ";RUN;
DATA C18_C20.Gen_RECORD_all_&year; MERGE t20_&year(IN=A) t40_&year (IN=B);IF A=1 AND B=1; BY CMN_KEY; RUN; 

%MEND;%MACRO DOLIST; %DO I=2010 %TO 2016; %SET(&I); %END; %MEND; %DOLIST;

DATA C18_C20.Gen_RECORD_all1; set Gen_RECORD_all_2008 Gen_RECORD_all_2009 
                                                              C18_C20.Gen_RECORD_all_2010-C18_C20.Gen_RECORD_all_2016;run;


PROC SORT DATA=C18_C20.Gen_RECORD_T20_all2;BY CMN_KEY;RUN;
PROC SORT DATA=C18_C20.RECORD_T40_all2;BY CMN_KEY;RUN;
DATA C18_C20.Gen_RECORD_all2; MERGE C18_C20.Gen_RECORD_T20_all2(IN=A) C18_C20.RECORD_T40_all2 (IN=B); BY CMN_KEY; IF A=1 AND B=1;RUN; 

PROC SORT DATA=C18_C20.Gen_RECORD_T20_all3;BY CMN_KEY;RUN;
PROC SORT DATA=C18_C20.RECORD_T40_all3;BY CMN_KEY;RUN;
DATA C18_C20.Gen_RECORD_all3; MERGE C18_C20.Gen_RECORD_T20_all3(IN=A) C18_C20.RECORD_T40_all3 (IN=B); BY CMN_KEY; IF A=1 AND B=1;RUN;   

proc sort data=C18_C20.Gen_RECORD_all1 out=Colon_all1; where MCEX_SICK_SYM^=" ";by INDI_DSCM_NO MDCARE_STRT_DT; run;
proc sort data=C18_C20.Gen_RECORD_all2  out=Colon_all2;where MCEX_SICK_SYM^=" ";by INDI_DSCM_NO MDCARE_STRT_DT; run;
proc sort data=C18_C20.Gen_RECORD_all3  out=Colon_all3;where MCEX_SICK_SYM^=" ";by INDI_DSCM_NO MDCARE_STRT_DT; run;

data C18_C20.Gen_RECORD_all; set Colon_all1 Colon_all2 Colon_all3;run;
proc sort data=C18_C20.Gen_RECORD_all;by INDI_DSCM_NO MDCARE_STRT_DT; run;

proc sort data=final.gen_colon out=Gen_Colon_id(KEEP=INDI_DSCM_NO std_yyyy); by INDI_DSCM_NO;run;/*173743*/
proc sort data=Gen_Colon_id;by INDI_DSCM_NO ; run;

data C18_C20.Gen_RECORD_all;merge Gen_Colon_id C18_C20.Gen_RECORD_all;by INDI_DSCM_NO ; run;


/**********************************************************Rectal Cancer***********************************************************/

proc sort data=final.gen_rectal out=db1_id(KEEP=INDI_DSCM_NO std_yyyy); 
where  std_yyyy in ("2010","2011","2012","2013","2014","2015","2016","2017","2018"); by INDI_DSCM_NO;run;/*109212*/

proc sort data=final.gen_rectal out=db2_id(KEEP=INDI_DSCM_NO std_yyyy); 
where  std_yyyy in ("2017","2018","2019","2020"); by INDI_DSCM_NO;run;/*64531*/

/*Raw data for general population*/
libname R1 "F:\관리자료\NHIS_2017_1_354\RAWDATA_GENPOP";

/*****Step9. 2009년 암환자의 모든 상병기록 (T20)*****/
%MACRO SET(YR);
PROC SQL; CREATE TABLE RECORD_&YR.01 AS SELECT * FROM db1_id AS X LEFT JOIN R1.add_t20_&YR.01 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.02 AS SELECT * FROM db1_id AS X LEFT JOIN R1.add_t20_&YR.02 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.03 AS SELECT * FROM db1_id AS X LEFT JOIN R1.add_t20_&YR.03 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.04 AS SELECT * FROM db1_id AS X LEFT JOIN R1.add_t20_&YR.04 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.05 AS SELECT * FROM db1_id AS X LEFT JOIN R1.add_t20_&YR.05 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.06 AS SELECT * FROM db1_id AS X LEFT JOIN R1.add_t20_&YR.06 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.07 AS SELECT * FROM db1_id AS X LEFT JOIN R1.add_t20_&YR.07 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.08 AS SELECT * FROM db1_id AS X LEFT JOIN R1.add_t20_&YR.08 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.09 AS SELECT * FROM db1_id AS X LEFT JOIN R1.add_t20_&YR.09 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.10 AS SELECT * FROM db1_id AS X LEFT JOIN R1.add_t20_&YR.10 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.11 AS SELECT * FROM db1_id AS X LEFT JOIN R1.add_t20_&YR.11 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.12 AS SELECT * FROM db1_id AS X LEFT JOIN R1.add_t20_&YR.12 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;

DATA RECORD_&YR; SET RECORD_&YR.01-RECORD_&YR.12; 
KEEP 
CMN_KEY INDI_DSCM_NO
SICK_SYM1 SICK_SYM2 SICK_SYM3 SICK_SYM4 SICK_SYM5
MDCARE_STRT_DT FORM_CD SPCF_SYM_TYPE ED_RC_TOT_AMT
;RUN;
%MEND;%MACRO DOLIST; %DO I=2008 %TO 2016; %SET(&I); %END; %MEND; %DOLIST;

DATA C18_C20.GenR_RECORD_T20_all; SET RECORD_2008-RECORD_2016; RUN; 

PROC SQL; CREATE TABLE C18_C20.GenR_RECORD_T20_all_CMNKEY AS SELECT  DISTINCT CMN_KEY FROM C18_C20.GenR_RECORD_T20_all; QUIT;
PROC SORT DATA= C18_C20.GenR_RECORD_T20_all_CMNKEY; BY CMN_KEY; RUN;

/*****Step10. 2009년 위암환자의 모든 상병기록 (T40)*****/

%MACRO SET(YR);
PROC SQL; CREATE TABLE RECORD40_&YR.01 AS SELECT * FROM C18_C20.GenR_RECORD_T20_all_CMNKEY AS X LEFT JOIN R1.add_t40_&YR.01 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.02 AS SELECT * FROM C18_C20.GenR_RECORD_T20_all_CMNKEY AS X LEFT JOIN R1.add_t40_&YR.02 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.03 AS SELECT * FROM C18_C20.GenR_RECORD_T20_all_CMNKEY AS X LEFT JOIN R1.add_t40_&YR.03 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.04 AS SELECT * FROM C18_C20.GenR_RECORD_T20_all_CMNKEY AS X LEFT JOIN R1.add_t40_&YR.04 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.05 AS SELECT * FROM C18_C20.GenR_RECORD_T20_all_CMNKEY AS X LEFT JOIN R1.add_t40_&YR.05 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.06 AS SELECT * FROM C18_C20.GenR_RECORD_T20_all_CMNKEY AS X LEFT JOIN R1.add_t40_&YR.06 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.07 AS SELECT * FROM C18_C20.GenR_RECORD_T20_all_CMNKEY AS X LEFT JOIN R1.add_t40_&YR.07 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.08 AS SELECT * FROM C18_C20.GenR_RECORD_T20_all_CMNKEY AS X LEFT JOIN R1.add_t40_&YR.08 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.09 AS SELECT * FROM C18_C20.GenR_RECORD_T20_all_CMNKEY AS X LEFT JOIN R1.add_t40_&YR.09 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.10 AS SELECT * FROM C18_C20.GenR_RECORD_T20_all_CMNKEY AS X LEFT JOIN R1.add_t40_&YR.10 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.11 AS SELECT * FROM C18_C20.GenR_RECORD_T20_all_CMNKEY AS X LEFT JOIN R1.add_t40_&YR.11 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.12 AS SELECT * FROM C18_C20.GenR_RECORD_T20_all_CMNKEY AS X LEFT JOIN R1.add_t40_&YR.12 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;

DATA C18_C20.RECORD40R_&YR; SET RECORD40_&YR.01-RECORD40_&YR.12; 
KEEP CMN_KEY MCEX_SICK_SYM SPCF_SYM_TYPE SICK_CLSF_TYPE;RUN;
%MEND;%MACRO DOLIST; %DO I=2008 %TO 2016; %SET(&I); %END; %MEND; %DOLIST;

DATA C18_C20.GenR_RECORD_T40_all; SET C18_C20.RECORD40R_2008-C18_C20.RECORD40R_2016; RUN; 

PROC SORT DATA=C18_C20.GenR_RECORD_T20_all;BY CMN_KEY;RUN;
PROC SORT DATA=C18_C20.GenR_RECORD_T40_all;BY CMN_KEY;RUN;

%MACRO SET(YR);

data t20r_&year; set C18_C20.GenR_RECORD_T20_all; where substr(MDCARE_STRT_DT,1,4)="&year";run;
PROC SORT DATA=t20r_&year;BY CMN_KEY;RUN;

PROC SORT DATA=C18_C20.record40r_&year out=t40r_&year; BY CMN_KEY;where MCEX_SICK_SYM^=" ";RUN;
DATA GenR_RECORD_all_&year; MERGE t20r_&year(IN=A) t40r_&year (IN=B);IF A=1 AND B=1; BY CMN_KEY; RUN; 

%MEND;%MACRO DOLIST; %DO I=2008 %TO 2016; %SET(&I); %END; %MEND; %DOLIST;

DATA C18_C20.Gen_RECORD_all1; set GenR_RECORD_all_2008-GenR_RECORD_all_2016;run;

/**********************************************************Rectal Cancer***********************************************************/

 /*****Step9. 2009년 암환자의 모든 상병기록 (T20)*****/
libname add "D:\2017-1-354(조현순) 오프라인8pc(2021.6.30.)";

%MACRO SET(YR);
PROC SQL; CREATE TABLE RECORD_&YR.01 AS SELECT * FROM db2_id AS X LEFT JOIN add.add2_t20_&YR.01 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.02 AS SELECT * FROM db2_id AS X LEFT JOIN add.add2_t20_&YR.02 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.03 AS SELECT * FROM db2_id AS X LEFT JOIN add.add2_t20_&YR.03 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.04 AS SELECT * FROM db2_id AS X LEFT JOIN add.add2_t20_&YR.04 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.05 AS SELECT * FROM db2_id AS X LEFT JOIN add.add2_t20_&YR.05 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.06 AS SELECT * FROM db2_id AS X LEFT JOIN add.add2_t20_&YR.06 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.07 AS SELECT * FROM db2_id AS X LEFT JOIN add.add2_t20_&YR.07 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.08 AS SELECT * FROM db2_id AS X LEFT JOIN add.add2_t20_&YR.08 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.09 AS SELECT * FROM db2_id AS X LEFT JOIN add.add2_t20_&YR.09 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.10 AS SELECT * FROM db2_id AS X LEFT JOIN add.add2_t20_&YR.10 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.11 AS SELECT * FROM db2_id AS X LEFT JOIN add.add2_t20_&YR.11 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;
PROC SQL; CREATE TABLE RECORD_&YR.12 AS SELECT * FROM db2_id AS X LEFT JOIN add.add2_t20_&YR.12 AS Y ON
	X.INDI_DSCM_NO=Y.INDI_DSCM_NO WHERE (Y.ED_RC_TOT_AMT^=. AND Y.ED_RC_TOT_AMT^=0) AND (SUBSTR(Y.FORM_CD,1,2) IN ('02','03')); QUIT;

DATA RECORD_&YR; SET RECORD_&YR.01-RECORD_&YR.12; 
KEEP 
CMN_KEY INDI_DSCM_NO
SICK_SYM1 SICK_SYM2 SICK_SYM3 SICK_SYM4 SICK_SYM5
MDCARE_STRT_DT FORM_CD SPCF_SYM_TYPE ED_RC_TOT_AMT
;RUN;
%MEND;%MACRO DOLIST; %DO I=2017 %TO 2020; %SET(&I); %END; %MEND; %DOLIST;

DATA C18_C20.GenR_RECORD_T20_all2; SET RECORD_2017-RECORD_2020; RUN; 

PROC SQL; CREATE TABLE C18_C20.GenR_RECORD_T20_all2_CMNKEY AS SELECT  DISTINCT CMN_KEY FROM C18_C20.GenR_RECORD_T20_all2; QUIT;
PROC SORT DATA= C18_C20.GenR_RECORD_T20_all2_CMNKEY; BY CMN_KEY; RUN;

/*****Step10. 2009년 위암환자의 모든 상병기록 (T40)*****/

%MACRO SET(YR);
PROC SQL; CREATE TABLE RECORD40_&YR.01 AS SELECT * FROM C18_C20.GenR_RECORD_T20_all2_CMNKEY AS X LEFT JOIN add.add2_t40_&YR.01 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.02 AS SELECT * FROM C18_C20.GenR_RECORD_T20_all2_CMNKEY AS X LEFT JOIN add.add2_t40_&YR.02 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.03 AS SELECT * FROM C18_C20.GenR_RECORD_T20_all2_CMNKEY AS X LEFT JOIN add.add2_t40_&YR.03 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.04 AS SELECT * FROM C18_C20.GenR_RECORD_T20_all2_CMNKEY AS X LEFT JOIN add.add2_t40_&YR.04 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.05 AS SELECT * FROM C18_C20.GenR_RECORD_T20_all2_CMNKEY AS X LEFT JOIN add.add2_t40_&YR.05 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.06 AS SELECT * FROM C18_C20.GenR_RECORD_T20_all2_CMNKEY AS X LEFT JOIN add.add2_t40_&YR.06 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.07 AS SELECT * FROM C18_C20.GenR_RECORD_T20_all2_CMNKEY AS X LEFT JOIN add.add2_t40_&YR.07 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.08 AS SELECT * FROM C18_C20.GenR_RECORD_T20_all2_CMNKEY AS X LEFT JOIN add.add2_t40_&YR.08 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.09 AS SELECT * FROM C18_C20.GenR_RECORD_T20_all2_CMNKEY AS X LEFT JOIN add.add2_t40_&YR.09 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.10 AS SELECT * FROM C18_C20.GenR_RECORD_T20_all2_CMNKEY AS X LEFT JOIN add.add2_t40_&YR.10 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.11 AS SELECT * FROM C18_C20.GenR_RECORD_T20_all2_CMNKEY AS X LEFT JOIN add.add2_t40_&YR.11 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;
PROC SQL; CREATE TABLE RECORD40_&YR.12 AS SELECT * FROM C18_C20.GenR_RECORD_T20_all2_CMNKEY AS X LEFT JOIN add.add2_t40_&YR.12 AS Y ON
	X.CMN_KEY=Y.CMN_KEY WHERE (Y.SICK_CLSF_TYPE^='3'); QUIT;

DATA RECORD40_&YR; SET RECORD40_&YR.01-RECORD40_&YR.12; 
KEEP CMN_KEY MCEX_SICK_SYM SPCF_SYM_TYPE SICK_CLSF_TYPE;RUN;
%MEND;%MACRO DOLIST; %DO I=2017 %TO 2020; %SET(&I); %END; %MEND; %DOLIST;

DATA C18_C20.GenR_RECORD_T40_all2; SET RECORD40_2017-RECORD40_2020; RUN; 


PROC SORT DATA=C18_C20.GenR_RECORD_T20_all2;BY CMN_KEY;RUN;
PROC SORT DATA=C18_C20.GenR_RECORD_T40_all2;BY CMN_KEY;RUN;
DATA C18_C20.GenR_RECORD_all2; MERGE C18_C20.GenR_RECORD_T20_all2(IN=A) C18_C20.GenR_RECORD_T40_all2 (IN=B); BY CMN_KEY; IF A=1 AND B=1;RUN; 


proc sort data=C18_C20.GenR_RECORD_all1  out=Rectal_all1;where MCEX_SICK_SYM^=" ";by INDI_DSCM_NO MDCARE_STRT_DT; run;
proc sort data=C18_C20.GenR_RECORD_all2  out=Rectal_all2;where MCEX_SICK_SYM^=" ";by INDI_DSCM_NO MDCARE_STRT_DT; run;

data C18_C20.GenR_RECORD_all; set Rectal_all1 Rectal_all2;run;
proc sort data=C18_C20.GenR_RECORD_all;by INDI_DSCM_NO MDCARE_STRT_DT; run;

proc sort data=final.gen_rectal out=Gen_Rectal_id(KEEP=INDI_DSCM_NO std_yyyy); by INDI_DSCM_NO;run;/*173743*/
proc sort data=Gen_Rectal_id;by INDI_DSCM_NO ; run;

data C18_C20.GenR_RECORD_all;merge Gen_Rectal_id C18_C20.GenR_RECORD_all;by INDI_DSCM_NO ; run;


/**********************************************************Rectal Cancer***********************************************************/

 

data Gen_RECORD_all; set C18_C20.Gen_RECORD_all;
if year(INPUT(PUT(MDCARE_STRT_DT,8.),yymmdd8.))<std_yyyy-2 then delete;
if year(INPUT(PUT(MDCARE_STRT_DT,8.),yymmdd8.))>=std_yyyy then delete;
CCI_DATE=INPUT(PUT(MDCARE_STRT_DT,8.),yymmdd8.);
run;
                                        

DATA C18_C20.Gen_Colon_CCI;
SET Gen_RECORD_all;

IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('I21','I22') OR SUBSTR(MCEX_SICK_SYM,1,4)='I252' THEN CCI_1=1; /*심근경색: Maycardial infraction*/

IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('I43','I50') OR SUBSTR(MCEX_SICK_SYM,1,4) IN ('I099','I110', 'I130','I132','I255','I420') 
			OR 'I425' <= SUBSTR(MCEX_SICK_SYM,1,4) <= 'I429' THEN CCI_2=1; /*심부전: Congestive heart failure*/

IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('I70','I71') OR SUBSTR(MCEX_SICK_SYM,1,4) IN ('I731','I738', 'I739','I771','I790','I792','K551','K558', 'K559','Z958','Z959')  
			THEN CCI_3=1; /*말초혈관질환: Periopheral vascular disorders*/

IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('G45','G46') OR 'I60' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'I69' OR
			SUBSTR(MCEX_SICK_SYM,1,4) IN ('H340')  THEN CCI_4=1; /*뇌혈관질환 : Cerebrovascular disease*/

IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('F00','F01','F02','F03','G30') OR SUBSTR(MCEX_SICK_SYM,1,4) IN ('F051','G311')  THEN CCI_5=1; /*치매 :Dementia*/

IF 'J40' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'J47' OR 'J60' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'J67'  
			OR SUBSTR(MCEX_SICK_SYM,1,4) IN ('I278','I279', 'J684','J701','J703')  THEN CCI_6=1; /*만성폐질환 : Chronic pulmonary disease*/

IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('M05','M06','M32','M33','M34') OR SUBSTR(MCEX_SICK_SYM,1,4) IN ('M315','M351', 'M353','M360')  
			THEN CCI_7=1; /*류마티스성 질환 : Rheumatic disease*/

IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('K25','K26','K27','K28')  THEN CCI_8=1; /*소화성 궤양증 : Peptic ulcer disease*/

IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('B18','K73','K74') OR 
			SUBSTR(MCEX_SICK_SYM,1,4) IN ('K700','K701', 'K702','K703','K709','K713', 'K714','K715','K717','K760', 'K762','K763','K764','K768', 'K769','Z944')  
			THEN CCI_9=1; /*가벼운 간질환 : Mild liver disease*/

IF SUBSTR(MCEX_SICK_SYM,1,4) IN ('E100','E101', 'E106','E108','E109','E110','E111', 'E116','E118','E119','E120', 'E121','E126','E128','E129', 'E130','E131', 'E136','E138','E139','E140', 'E141','E146', 'E148','E149')  
			THEN CCI_10=1; /*당뇨(만성합병증외) : Diabetes without chrnoic complication*/

IF SUBSTR(MCEX_SICK_SYM,1,4) IN ('E102','E103', 'E104','E105','E107','E112', 'E113','E114','E115','E117', 'E122','E123','E124','E125', 'E127','E132', 'E133','E134','E135','E137', 'E142','E143', 'E144','E145','E147')  
			THEN CCI_11=1; /*당뇨(만성합병증) : Diabetes with chrnoic complication*/

IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('G81','G82') OR SUBSTR(MCEX_SICK_SYM,1,4) IN ('G041','G114', 'G801','G802','G830','G831', 'G832','G833','G834', 'G839')  
			THEN CCI_12=1; /*편마비 : Hemiplegia or paraplegia*/

IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('N18','N19') OR SUBSTR(MCEX_SICK_SYM,1,4) IN ('I120','I131', 'N250','Z940','Z992') 
			OR 'N032' <= SUBSTR(MCEX_SICK_SYM,1,4) <= 'N037' OR 'N052' <= SUBSTR(MCEX_SICK_SYM,1,4) <= 'N057' OR 'Z490' <= SUBSTR(MCEX_SICK_SYM,1,4) <= 'Z492'
			THEN CCI_13=1; /*신장질환 : Renal disease*/

/*IF 'C00' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'C26' OR 'C30' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'C34'  OR 'C37' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'C41' OR 'C45' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'C58'  
			OR 'C60' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'C76' OR 'C81' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'C85'  OR 'C90' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'C97' 
			OR  SUBSTR(MCEX_SICK_SYM,1,3)  IN ('C43','C88') THEN CCI_14=1; 악성종양 : Any malignancy*/

IF SUBSTR(MCEX_SICK_SYM,1,4) IN ('I850','I859', 'I864','I982','K704','K711', 'K721','K729','K765','K766','K767')  
			THEN CCI_14=1; /*심각한 간질환 : Moderate or severe liver disease*/

/*IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('C77','C78', 'C79','C80')  
			THEN CCI_16=1; 전이성고형종양 : Moderate or severe liver disease*/

IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('B20','B21', 'B22','B24')  
			THEN CCI_15=1; /*에이즈 : AIDS/HIV*/

RUN;


%MACRO CCI2(N);

DATA CCI_&N (KEEP=INDI_DSCM_NO CCI_DATE FORM_CD CCI_&N); 
SET C18_C20.Gen_Colon_CCI; WHERE CCI_&N=1 AND FORM_CD IN ('02','03'); RUN;

PROC SORT DATA=CCI_&N NODUP; BY INDI_DSCM_NO CCI_DATE FORM_CD; RUN;

PROC SQL; CREATE TABLE CCI&N AS SELECT INDI_DSCM_NO, FORM_CD, SUM(CCI_&N) AS N 
FROM CCI_&N GROUP BY INDI_DSCM_NO, FORM_CD; QUIT;

DATA CCI02_&N; SET CCI&N; WHERE FORM_CD='02'; RENAME N=N_02; RUN;
DATA CCI03_&N; SET CCI&N; WHERE FORM_CD='03'; RENAME N=N_03; RUN;

%MEND;
%MACRO DO_LIST; %DO I=1 %TO 15; %CCI2(&I);%END; %MEND DO_LIST; %DO_LIST;

data GenR_RECORD_all; set C18_C20.GenR_RECORD_all;
if year(INPUT(PUT(MDCARE_STRT_DT,8.),yymmdd8.))<std_yyyy-2 then delete;
if year(INPUT(PUT(MDCARE_STRT_DT,8.),yymmdd8.))>=std_yyyy then delete;
CCI_DATE=INPUT(PUT(MDCARE_STRT_DT,8.),yymmdd8.);
run;

DATA C18_C20.Gen_Rectal_CCI;
SET GenR_RECORD_all;

IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('I21','I22') OR SUBSTR(MCEX_SICK_SYM,1,4)='I252' THEN CCI_1=1; /*심근경색: Maycardial infraction*/

IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('I43','I50') OR SUBSTR(MCEX_SICK_SYM,1,4) IN ('I099','I110', 'I130','I132','I255','I420') 
			OR 'I425' <= SUBSTR(MCEX_SICK_SYM,1,4) <= 'I429' THEN CCI_2=1; /*심부전: Congestive heart failure*/

IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('I70','I71') OR SUBSTR(MCEX_SICK_SYM,1,4) IN ('I731','I738', 'I739','I771','I790','I792','K551','K558', 'K559','Z958','Z959')  
			THEN CCI_3=1; /*말초혈관질환: Periopheral vascular disorders*/

IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('G45','G46') OR 'I60' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'I69' OR
			SUBSTR(MCEX_SICK_SYM,1,4) IN ('H340')  THEN CCI_4=1; /*뇌혈관질환 : Cerebrovascular disease*/

IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('F00','F01','F02','F03','G30') OR SUBSTR(MCEX_SICK_SYM,1,4) IN ('F051','G311')  THEN CCI_5=1; /*치매 :Dementia*/

IF 'J40' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'J47' OR 'J60' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'J67'  
			OR SUBSTR(MCEX_SICK_SYM,1,4) IN ('I278','I279', 'J684','J701','J703')  THEN CCI_6=1; /*만성폐질환 : Chronic pulmonary disease*/

IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('M05','M06','M32','M33','M34') OR SUBSTR(MCEX_SICK_SYM,1,4) IN ('M315','M351', 'M353','M360')  
			THEN CCI_7=1; /*류마티스성 질환 : Rheumatic disease*/

IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('K25','K26','K27','K28')  THEN CCI_8=1; /*소화성 궤양증 : Peptic ulcer disease*/

IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('B18','K73','K74') OR 
			SUBSTR(MCEX_SICK_SYM,1,4) IN ('K700','K701', 'K702','K703','K709','K713', 'K714','K715','K717','K760', 'K762','K763','K764','K768', 'K769','Z944')  
			THEN CCI_9=1; /*가벼운 간질환 : Mild liver disease*/

IF SUBSTR(MCEX_SICK_SYM,1,4) IN ('E100','E101', 'E106','E108','E109','E110','E111', 'E116','E118','E119','E120', 'E121','E126','E128','E129', 'E130','E131', 'E136','E138','E139','E140', 'E141','E146', 'E148','E149')  
			THEN CCI_10=1; /*당뇨(만성합병증외) : Diabetes without chrnoic complication*/

IF SUBSTR(MCEX_SICK_SYM,1,4) IN ('E102','E103', 'E104','E105','E107','E112', 'E113','E114','E115','E117', 'E122','E123','E124','E125', 'E127','E132', 'E133','E134','E135','E137', 'E142','E143', 'E144','E145','E147')  
			THEN CCI_11=1; /*당뇨(만성합병증) : Diabetes with chrnoic complication*/

IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('G81','G82') OR SUBSTR(MCEX_SICK_SYM,1,4) IN ('G041','G114', 'G801','G802','G830','G831', 'G832','G833','G834', 'G839')  
			THEN CCI_12=1; /*편마비 : Hemiplegia or paraplegia*/

IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('N18','N19') OR SUBSTR(MCEX_SICK_SYM,1,4) IN ('I120','I131', 'N250','Z940','Z992') 
			OR 'N032' <= SUBSTR(MCEX_SICK_SYM,1,4) <= 'N037' OR 'N052' <= SUBSTR(MCEX_SICK_SYM,1,4) <= 'N057' OR 'Z490' <= SUBSTR(MCEX_SICK_SYM,1,4) <= 'Z492'
			THEN CCI_13=1; /*신장질환 : Renal disease*/

/*IF 'C00' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'C26' OR 'C30' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'C34'  OR 'C37' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'C41' OR 'C45' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'C58'  
			OR 'C60' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'C76' OR 'C81' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'C85'  OR 'C90' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'C97' 
			OR  SUBSTR(MCEX_SICK_SYM,1,3)  IN ('C43','C88') THEN CCI_14=1; 악성종양 : Any malignancy*/

IF SUBSTR(MCEX_SICK_SYM,1,4) IN ('I850','I859', 'I864','I982','K704','K711', 'K721','K729','K765','K766','K767')  
			THEN CCI_14=1; /*심각한 간질환 : Moderate or severe liver disease*/

/*IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('C77','C78', 'C79','C80')  
			THEN CCI_16=1; 전이성고형종양 : Moderate or severe liver disease*/

IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('B20','B21', 'B22','B24')  
			THEN CCI_15=1; /*에이즈 : AIDS/HIV*/

RUN;


%MACRO CCI2(N);

DATA CCI_&N (KEEP=INDI_DSCM_NO CCI_DATE FORM_CD CCI_&N); 
SET C18_C20.Gen_Rectal_CCI; WHERE CCI_&N=1 AND FORM_CD IN ('02','03'); RUN;

PROC SORT DATA=CCI_&N NODUP; BY INDI_DSCM_NO CCI_DATE FORM_CD; RUN;

PROC SQL; CREATE TABLE CCI&N AS SELECT INDI_DSCM_NO, FORM_CD, SUM(CCI_&N) AS N 
FROM CCI_&N GROUP BY INDI_DSCM_NO, FORM_CD; QUIT;

DATA CCI02_&N; SET CCI&N; WHERE FORM_CD='02'; RENAME N=N_02; RUN;
DATA CCI03_&N; SET CCI&N; WHERE FORM_CD='03'; RENAME N=N_03; RUN;

%MEND;
%MACRO DO_LIST; %DO I=1 %TO 15; %CCI2(&I);%END; %MEND DO_LIST; %DO_LIST;


/************************************************************************************************************************************************************************************************
Klabunde's Rule out 1 : (1) 입원 0회,& 외래 1회 제외 (RO1&WINDOW._&LOOKBACK._&N)
************************************************************************************************************************************************************************************************/
%MACRO CCI3(N);
DATA RO1_&N; 
MERGE CCI02_&N CCI03_&N; BY INDI_DSCM_NO; RUN;
DATA RO1&N; SET RO1_&N; WHERE N_02=. AND N_03<2;RUN;
%MEND;
%MACRO DO_LIST; %DO I=1 %TO 15; %CCI3(&I);%END; %MEND DO_LIST; %DO_LIST;

/************************************************************************************************************************************************************************************************
Klabunde's Rule out 2 : (2-1) 방문 2회 이상 시 방문 간 간격 30일 초과만 포함 (RO2_M_&N)
                                     (3) 입원 1회 이상 시 포함 (RO2_02_&N)
************************************************************************************************************************************************************************************************/

%MACRO CCI4(N);

DATA RO2_&N (DROP=VISIT_DIFF); SET CCI_&N; BY INDI_DSCM_NO CCI_DATE;
RETAIN VISIT_DIFF;
IF FIRST.INDI_DSCM_NO THEN DO; VISIT_DIFF=CCI_DATE; END;
ELSE DO; IF NMISS(VISIT_DIFF,CCI_DATE)=0 THEN VISITDIFF=CCI_DATE-VISIT_DIFF;
ELSE VISITDIFF=.; VISIT_DIFF=CCI_DATE; END; RUN;

DATA RO2_M_&N (KEEP=INDI_DSCM_NO); SET RO2_&N; WHERE VISITDIFF >30; RUN;
PROC SORT DATA= RO2_M_&N NODUP; BY INDI_DSCM_NO; RUN;

DATA RO2_02_&N (KEEP=INDI_DSCM_NO); SET RO2_&N; WHERE FORM_CD='02'; RUN;
PROC SORT DATA=RO2_02_&N NODUP; BY INDI_DSCM_NO; RUN;

DATA RO2_30_&N; 
SET RO2_&N (IN=A)
	   RO2_M_&N (IN=B) 
	   RO2_02_&N (IN=C); 
BY INDI_DSCM_NO; IF A=1 AND (B^=1 OR C^=1); RUN;
%MEND;
%MACRO DO_LIST; %DO I=1 %TO 15; %CCI4(&I);%END; %MEND DO_LIST; %DO_LIST;

/************************************************************************************************************************************************************************************************
Klabunde's Rule out 3 : (2-1) 방문 3회 이상 시 방문 간 간격 30일 초과만 포함 (RO3&WINDOW._&LOOKBACK._&N)
************************************************************************************************************************************************************************************************/

%MACRO CCI5(N);
PROC SQL; CREATE TABLE RO3_&N AS SELECT INDI_DSCM_NO, SUM(VISITDIFF) AS DAYS 
	FROM RO2_30_&N GROUP BY INDI_DSCM_NO; QUIT;
DATA RO3&N(KEEP=INDI_DSCM_NO); SET RO3_&N; WHERE DAYS>30;RUN;

DATA  C18_C20.Gen_RO_&N;  
		MERGE 
        RO2_M_&N (IN=A)  
        RO2_02_&N(IN=B)
        RO3&&N(IN=C) 
        RO2_&N; 
		BY INDI_DSCM_NO; IF A=1 OR B=1 OR C=1; RUN;
%MEND;
%MACRO DO_LIST; %DO I=1 %TO 15; %CCI5(&I);%END; %MEND DO_LIST; %DO_LIST;

/************************************************************************************************************************************************************************************************
CCI DB SET
전체 청구 : RO&WINDOW._&LOOKBACK._&N
입원 청구 : RO02&WINDOW._&LOOKBACK._&N 
외래 청구 : RO03&WINDOW._&LOOKBACK._&N
************************************************************************************************************************************************************************************************/

%MACRO CCI6(N);
DATA RO_&N; SET C18_C20.Gen_RO_&N ; 
RENAME CCI_DATE=DATE_&N FORM_CD=FORM_&N; RUN;

PROC SORT DATA=RO_&N; BY INDI_DSCM_NO DATE_&N;  RUN;
DATA RO&N; SET RO_&N;  BY INDI_DSCM_NO DATE_&N; IF FIRST.INDI_DSCM_NO; RUN;

DATA RO02_&N; SET RO_&N; WHERE FORM_&N="02";
RENAME DATE_&N=DATE02_&N  CCI_&N=CCI02_&N; RUN;

DATA RO03_&N; SET RO_&N; WHERE FORM_&N="03";
RENAME DATE_&N=DATE03_&N  CCI_&N=CCI03_&N;RUN;

DATA RO02_&N; SET RO02_&N;  BY INDI_DSCM_NO DATE02_&N; IF FIRST.INDI_DSCM_NO; RUN;
DATA RO03_&N; SET RO03_&N;  BY INDI_DSCM_NO DATE03_&N; IF FIRST.INDI_DSCM_NO; RUN;
%MEND;
%MACRO DO_LIST; %DO I=1 %TO 15; %CCI6(&I);%END; %MEND DO_LIST; %DO_LIST;

DATA C18_C20.Gen_RO (DROP=VISITDIFF); 
MERGE RO1-RO15; BY INDI_DSCM_NO;RUN;
DATA C18_C20.Gen_RO02 (DROP=VISITDIFF); 
MERGE RO02_1-RO02_15; BY INDI_DSCM_NO;RUN;
DATA C18_C20.Gen_RO03 (DROP=VISITDIFF); 
MERGE RO03_1-RO03_15; BY INDI_DSCM_NO;RUN;

PROC SORT DATA=final.gen_colon; BY INDI_DSCM_NO;RUN;
PROC SORT DATA=C18_C20.Gen_RO; BY INDI_DSCM_NO;RUN;
PROC SORT DATA=C18_C20.Gen_RO02; BY INDI_DSCM_NO;RUN;
PROC SORT DATA=C18_C20.Gen_RO03; BY INDI_DSCM_NO;RUN;

DATA C18_C20.GEN_Colon_CCI_EXACT;
MERGE final.gen_colon(IN=A) 
			 C18_C20.Gen_RO
			 C18_C20.Gen_RO02
			 C18_C20.Gen_RO03;
BY INDI_DSCM_NO; IF A; RUN;


PROC SORT DATA=final.gen_rectal; BY INDI_DSCM_NO;RUN;
PROC SORT DATA=C18_C20.Gen_RO; BY INDI_DSCM_NO;RUN;
PROC SORT DATA=C18_C20.Gen_RO02; BY INDI_DSCM_NO;RUN;
PROC SORT DATA=C18_C20.Gen_RO03; BY INDI_DSCM_NO;RUN;

DATA C18_C20.GEN_Rectal_CCI_EXACT;
MERGE final.gen_rectal(IN=A) 
			 C18_C20.Gen_RO
			 C18_C20.Gen_RO02
			 C18_C20.Gen_RO03;
BY INDI_DSCM_NO; IF A; RUN;

PROC FREQ DATA=C18_C20.GEN_Colon_CCI_EXACT; TABLE AGE_GRP  std_yyyy*SEX_TYPE;RUN;
PROC FREQ DATA=C18_C20.GEN_Rectal_CCI_EXACT; TABLE AGE_GRP  std_yyyy*SEX_TYPE;RUN;


DATA C18_C20.GEN_Colon_CCI_EXACT; 
SET C18_C20.GEN_Colon_CCI_EXACT; WHERE AGE_GRP^=" " AND SEX_TYPE^=" " ; RUN; /*173743*/
DATA C18_C20.GEN_Rectal_CCI_EXACT; 
SET C18_C20.GEN_Rectal_CCI_EXACT; WHERE AGE_GRP^=" " AND SEX_TYPE^=" " ; RUN; /*120519*/


%MACRO CCI7(N);
data C18_C20.GEN_Colon_CCI_EXACT; SET C18_C20.GEN_Colon_CCI_EXACT;

IF CCI_&N=. THEN CCI_&N=0; 
IF CCI02_&N=. THEN CCI02_&N=0;  
IF CCI03_&N=. THEN CCI03_&N=0;

RUN;
%MEND;
%MACRO DO_LIST; %DO I=1 %TO 15; %CCI7(&I);%END; %MEND DO_LIST; %DO_LIST;


%MACRO CCI7(N);
data C18_C20.GEN_Rectal_CCI_EXACT; SET C18_C20.GEN_Rectal_CCI_EXACT;

IF CCI_&N=. THEN CCI_&N=0; 
IF CCI02_&N=. THEN CCI02_&N=0;  
IF CCI03_&N=. THEN CCI03_&N=0;

RUN;
%MEND;
%MACRO DO_LIST; %DO I=1 %TO 15; %CCI7(&I);%END; %MEND DO_LIST; %DO_LIST;


data C18_C20.GEN_Colon_CCI_EXACT; set C18_C20.GEN_Colon_CCI_EXACT ; cancer_grp="Colon";;run;
data C18_C20.GEN_Rectal_CCI_EXACT; set C18_C20.GEN_Rectal_CCI_EXACT ; cancer_grp="Rectal";run;

data C18_C20.GEN_CCI_EXACT; set C18_C20.GEN_Colon_CCI_EXACT C18_C20.GEN_Rectal_CCI_EXACT;run; /*294262*/

PROC SORT DATA=R1.add_dth ;BY INDI_DSCM_NO ; RUN;
PROC SORT DATA=ADD.add2_dth ;BY INDI_DSCM_NO ; RUN;

data dth; merge R1.add_dth ADD.add2_dth ;RUN; /*1522459*/
proc sort data=dth nodupkey; by INDI_DSCM_NO DTH_ASSMD_DT; RUN; /*1522459*/

proc freq data=C18_C20.GEN_CCI_EXACT; table cancer_grp;run;

PROC SORT DATA=C18_C20.GEN_CCI_EXACT ;BY INDI_DSCM_NO ; RUN;

DATA C18_C20.GEN_CCI_EXACT; MERGE  C18_C20.GEN_CCI_EXACT (IN=A) dth;  BY INDI_DSCM_NO ; IF A;RUN;


DATA final.GEN_CCI_EXACT; SET C18_C20.GEN_CCI_EXACT;

DTH_DATE=INPUT(PUT(DTH_ASSMD_DT,8.),yymmdd8.);

IF DTH_DATE^=. AND DTH_DATE>=INPUT(PUT('20110101',8.),yymmdd8.)  THEN DO; 
SURVTIME=DTH_DATE-INPUT(PUT('20110101',8.),yymmdd8.); DEATH=1; END;

ELSE IF DTH_DATE^=. AND DTH_DATE<INPUT(PUT('20110101',8.),yymmdd8.)  THEN DO; SURVTIME=.; DEATH=1; END;
ELSE DO; SURVTIME=INPUT(PUT('20170720',8.),yymmdd8.)-INPUT(PUT('20110101',8.),yymmdd8.); DEATH=0; END;

IF SURVTIME^=. AND SURVTIME>=0 AND SURVTIME<=365 AND DEATH=1 THEN SURV_1YR=1; ELSE SURV_1YR=0; 
IF SURVTIME^=. AND SURVTIME>=0 AND SURVTIME<=365*3 AND DEATH=1 THEN SURV_3YR=1; ELSE SURV_3YR=0; 
IF SURVTIME^=. AND SURVTIME>=0 AND SURVTIME<=365*5 AND DEATH=1 THEN SURV_5YR=1; ELSE SURV_5YR=0; 
IF SURVTIME^=. AND SURVTIME>=0 AND SURVTIME<=365*7 AND DEATH=1 THEN SURV_7YR=1; ELSE SURV_7YR=0; 

LENGTH CCI_ID $15.;

CCI_N=CCI_1+CCI_2+CCI_3+CCI_4+CCI_5+CCI_6+CCI_7+CCI_8+CCI_9+CCI_10+CCI_11+CCI_12+CCI_13+CCI_14+CCI_15;
CCI_ID=CAT(CCI_1,CCI_2,CCI_3,CCI_4,CCI_5,CCI_6,CCI_7,CCI_8,CCI_9,CCI_10,CCI_11,CCI_12,CCI_13,CCI_14,CCI_15);

IF YEND_STD_AGE>=65 THEN AGE65=1; ELSE AGE65=0;

RUN;




