

/*********2009 CANCER PATIENTS VS GENERAL POPULATION**********/

PROC SQL; CREATE TABLE SAPTMP.C_TARGET3B AS SELECT *  FROM DB.C_TARGET3A WHERE D_YEAR=2009;QUIT; /*N=206270*/

%MACRO GENPOP;  %DO Y=2009 %TO 2009; %MACRO GENPOP2; %DO M=&Y.01 %TO &Y.01;
PROC SQL; 
connect to saphana as x1(server=pepper1 port=30015 user=Nhis_&사번 password=!Nhis_&사번.1 readbuff=32767 insertbuff=32767);
execute(
CREATE TABLE C_TARGET3C AS (
	SELECT A.INDI_DSCM_NO, A.SEX_TYPE, A.AGE_GRP, B.RVSN_ADDR_CD
	FROM NHIS_&사번..C_TARGET3B AS A
	INNER JOIN "NHISBDA"."HHDT_POPULATION_MM" AS B
	ON A.INDI_DSCM_NO=B.INDI_DSCM_NO
	WHERE  B.STD_YYYYMM=%nrbquote('&M.') AND B.PRTY=1 AND B.INDI_DSCM_NO IS NOT NULL AND B.INDI_DSCM_NO <> 0 
)) by x1;
disconnect from x1;
QUIT;
%END; %MEND GENPOP2; %GENPOP2; %END; %MEND GENPOP; %GENPOP;

/*해당년도 대상자 추출*/
%MACRO BRT_Y;  %DO Y=2009 %TO 2009;%MACRO BRT_M; %DO M=&Y.01 %TO &Y.01;
PROC SQL;
connect to saphana as x1(server=pepper1 port=30015 user=Nhis_&사번 password=!Nhis_&사번.1 readbuff=32767 insertbuff=32767);
execute(
CREATE TABLE GENPOP_&M. AS (
SELECT  INDI_DSCM_NO, SEX_TYPE, RVSN_ADDR_CD, BYEAR
FROM "NHISBDA"."HHDT_POPULATION_MM"
WHERE STD_YYYYMM=%nrbquote('&M.') AND PRTY=1 AND INDI_DSCM_NO IS NOT NULL AND INDI_DSCM_NO <> 0 
)) by x1;
disconnect from x1;
QUIT;
%END; %MEND BRT_M; %BRT_M; %END; %MEND BRT_Y; %BRT_Y;

/*암진단기록이 있는 환자 제외*/
%MACRO GEN; %DO Y=2009 %TO 2009;%MACRO GEN2; %DO M=&Y.01 %TO &Y.01;
PROC SQL; 
connect to saphana as x1(server=pepper1 port=30015 user=Nhis_&사번 password=!Nhis_&사번.1 readbuff=32767 insertbuff=32767);
execute(
CREATE TABLE N_CAN_POP_&M. AS (
	SELECT  A.INDI_DSCM_NO, A.SEX_TYPE, A.RVSN_ADDR_CD, A.BYEAR
	FROM NHIS_&사번..GENPOP_&M. AS A
	LEFT JOIN  NHIS_&사번..C_TARGET3A AS B
	ON A.INDI_DSCM_NO=B.INDI_DSCM_NO
	WHERE B.INDI_DSCM_NO IS NULL
)) by x1;
disconnect from x1;
QUIT;
%END; %MEND GEN2; %GEN2; %END; %MEND GEN; %GEN;

/*2009년 일반인구 표본추출*/
/*method1: Frequeuncy Matching (age, sex, sido)*/
PROC SQL;
connect to saphana as x1(server=pepper1 port=30015 user=Nhis_&사번 password=!Nhis_&사번.1 readbuff=32767 insertbuff=32767);
CREATE TABLE DB.CAN_POP_2009 AS 
SELECT INDI_DSCM_NO,AGE_GRP, SEX_TYPE,SIDO_CD FROM CONNECTION TO X1(
SELECT INDI_DSCM_NO,AGE_GRP,SEX_TYPE,SUBSTR(RVSN_ADDR_CD,1,2) AS SIDO_CD
FROM NHIS_&사번..C_TARGET3C);
disconnect from x1;
QUIT;

PROC SQL; /*46772697*/
connect to saphana as x1(server=pepper1 port=30015 user=Nhis_&사번 password=!Nhis_&사번.1 readbuff=32767 insertbuff=32767);
CREATE TABLE DB.N_CAN_POP_2009 AS 
SELECT INDI_DSCM_NO,YEND_STD_AGE, SEX_TYPE,SIDO_CD FROM CONNECTION TO X1(
SELECT INDI_DSCM_NO,(2009-BYEAR) AS YEND_STD_AGE,SEX_TYPE,SUBSTR(RVSN_ADDR_CD,1,2) AS SIDO_CD
FROM NHIS_&사번..N_CAN_POP_200901);
disconnect from x1;
QUIT;

DATA DB.CAN_POP_2009; SET DB.CAN_POP_2009;
FORMAT SIDO_NM $15.;
IF SIDO_CD=' ' THEN SIDO_NM=' ';
ELSE IF SIDO_CD='36' THEN SIDO_NM='세종특별자치시';
ELSE IF SIDO_CD='11' THEN SIDO_NM='서울특별시';
ELSE IF SIDO_CD='26' THEN SIDO_NM='부산광역시';
ELSE IF SIDO_CD='27' THEN SIDO_NM='대구광역시';
ELSE IF SIDO_CD='28' THEN SIDO_NM='인천광역시';
ELSE IF SIDO_CD='29' THEN SIDO_NM='광주광역시';
ELSE IF SIDO_CD='30' THEN SIDO_NM='대전광역시';
ELSE IF SIDO_CD='31' THEN SIDO_NM='울산광역시';
ELSE IF SIDO_CD='41' THEN SIDO_NM='경기도';
ELSE IF SIDO_CD='42' THEN SIDO_NM='강원도';
ELSE IF SIDO_CD='43' THEN SIDO_NM='충청북도';
ELSE IF SIDO_CD='44' THEN SIDO_NM='충청남도';
ELSE IF SIDO_CD='45' THEN SIDO_NM='전라북도';
ELSE IF SIDO_CD='46' THEN SIDO_NM='전라남도';
ELSE IF SIDO_CD='47' THEN SIDO_NM='경상북도';
ELSE IF SIDO_CD='48' THEN SIDO_NM='경상남도';
ELSE IF SIDO_CD='49' THEN SIDO_NM='제주도';
ELSE IF SIDO_CD='50' THEN SIDO_NM='제주특별자치도';
ELSE IF SIDO_CD='90' THEN SIDO_NM=' ';
ELSE IF SIDO_CD='z' THEN SIDO_NM=' ';
RUN;

DATA DB.N_CAN_POP_2009; SET DB.N_CAN_POP_2009;
FORMAT SIDO_NM $15.;
IF SIDO_CD=' ' THEN SIDO_NM=' ';
ELSE IF SIDO_CD='36' THEN SIDO_NM='세종특별자치시';
ELSE IF SIDO_CD='11' THEN SIDO_NM='서울특별시';
ELSE IF SIDO_CD='26' THEN SIDO_NM='부산광역시';
ELSE IF SIDO_CD='27' THEN SIDO_NM='대구광역시';
ELSE IF SIDO_CD='28' THEN SIDO_NM='인천광역시';
ELSE IF SIDO_CD='29' THEN SIDO_NM='광주광역시';
ELSE IF SIDO_CD='30' THEN SIDO_NM='대전광역시';
ELSE IF SIDO_CD='31' THEN SIDO_NM='울산광역시';
ELSE IF SIDO_CD='41' THEN SIDO_NM='경기도';
ELSE IF SIDO_CD='42' THEN SIDO_NM='강원도';
ELSE IF SIDO_CD='43' THEN SIDO_NM='충청북도';
ELSE IF SIDO_CD='44' THEN SIDO_NM='충청남도';
ELSE IF SIDO_CD='45' THEN SIDO_NM='전라북도';
ELSE IF SIDO_CD='46' THEN SIDO_NM='전라남도';
ELSE IF SIDO_CD='47' THEN SIDO_NM='경상북도';
ELSE IF SIDO_CD='48' THEN SIDO_NM='경상남도';
ELSE IF SIDO_CD='49' THEN SIDO_NM='제주도';
ELSE IF SIDO_CD='50' THEN SIDO_NM='제주특별자치도';
ELSE IF SIDO_CD='90' THEN SIDO_NM=' ';
ELSE IF SIDO_CD='z' THEN SIDO_NM=' ';

IF YEND_STD_AGE=. THEN AGE_GRP=.;
ELSE IF YEND_STD_AGE^=. AND YEND_STD_AGE<=4 THEN AGE_GRP=1;
ELSE IF YEND_STD_AGE^=. AND YEND_STD_AGE<=9 THEN AGE_GRP=2;
ELSE IF YEND_STD_AGE^=. AND YEND_STD_AGE<=14 THEN AGE_GRP=3;
ELSE IF YEND_STD_AGE^=. AND YEND_STD_AGE<=19 THEN AGE_GRP=4;
ELSE IF YEND_STD_AGE^=. AND YEND_STD_AGE<=24 THEN AGE_GRP=5;
ELSE IF YEND_STD_AGE^=. AND YEND_STD_AGE<=29 THEN AGE_GRP=6;
ELSE IF YEND_STD_AGE^=. AND YEND_STD_AGE<=34 THEN AGE_GRP=7;
ELSE IF YEND_STD_AGE^=. AND YEND_STD_AGE<=39 THEN AGE_GRP=8;
ELSE IF YEND_STD_AGE^=. AND YEND_STD_AGE<=44 THEN AGE_GRP=9;
ELSE IF YEND_STD_AGE^=. AND YEND_STD_AGE<=49 THEN AGE_GRP=10;
ELSE IF YEND_STD_AGE^=. AND YEND_STD_AGE<=54 THEN AGE_GRP=11;
ELSE IF YEND_STD_AGE^=. AND YEND_STD_AGE<=59 THEN AGE_GRP=12;
ELSE IF YEND_STD_AGE^=. AND YEND_STD_AGE<=64 THEN AGE_GRP=13;
ELSE IF YEND_STD_AGE^=. AND YEND_STD_AGE<=69 THEN AGE_GRP=14;
ELSE IF YEND_STD_AGE^=. AND YEND_STD_AGE<=74 THEN AGE_GRP=15;
ELSE IF YEND_STD_AGE^=. AND YEND_STD_AGE<=79 THEN AGE_GRP=16;
ELSE IF YEND_STD_AGE^=. AND YEND_STD_AGE<=84 THEN AGE_GRP=17;
ELSE IF YEND_STD_AGE^=. AND YEND_STD_AGE>=85 THEN AGE_GRP=18;
RUN;
PROC CONTENTS DATA=DB.CAN_POP_2009 ;RUN;
PROC SORT DATA=DB.CAN_POP_2009 OUT= DB.CAN_POP_2009; BY SEX_TYPE AGE_GRP SIDO_CD; 
WHERE SEX_TYPE^=" " AND AGE_GRP^=. AND SIDO_CD^=" " ;RUN; /*204202*/
PROC SORT DATA=DB.N_CAN_POP_2009; BY SEX_TYPE AGE_GRP SIDO_CD; 
WHERE SEX_TYPE^=" " AND AGE_GRP^=. AND SIDO_CD^=" " ;RUN; /*46743804*/
PROC CONTENTS DATA=DB.CAN_POP_2009;RUN; 

%LET SIZE=4677270 ;
PROC SURVEYSELECT DATA=DB.N_CAN_POP_2009 OUT=DB.CONTROL /*2009년 전체 인구의 10% 임의표본 추출*/
METHOD=SRS SAMPSIZE=&SIZE SEED=2020 ; /*2009년01월 자격대상자 46772697 10% 명*/
STRATA SEX_TYPE AGE_GRP SIDO_CD /ALLOC=PROP; RUN;


/*1:1*/
PROC FREQ DATA=CAN;
TABLE SEX_TYPE*AGE_GRP*SIDO_CD/OUT=DB.NEWFREQ1_a NOPRINT ;RUN;

DATA DB.NEWFREQ1_b DB.ERROR;
SET DB.NEWFREQ1_a ;
SAMPNUM=(PERCENT*204202)/100; /*총 위함환자 수*/
_NSIZE_=ROUND(SAMPNUM,1);
SAMPNUM=ROUND(SAMPNUM,0.01);
IF _NSIZE_=0 THEN OUTPUT DB.ERROR;
IF _NSIZE_=0 THEN DELETE;
OUTPUT DB.NEWFREQ1_b; RUN;

DATA DB.NEWFREQ1_c (KEEP= SEX_TYPE  AGE_GRP SIDO_CD _NSIZE_);SET DB.NEWFREQ1_b;RUN;
DATA DB.NEWFREQ1_d;SET DB.NEWFREQ1_c; IF _NSIZE_  >= 0;run;

DATA DB.CONTROL_a; 
MERGE DB.CONTROL (IN=A KEEP=INDI_DSCM_NO SEX_TYPE  YEND_STD_AGE AGE_GRP  SIDO_CD)  
	         DB.NEWFREQ1_d (IN=B KEEP=SEX_TYPE  AGE_GRP  SIDO_CD _NSIZE_); 
BY  SEX_TYPE  AGE_GRP SIDO_CD; IF B=1; RUN; /*34091035*/

PROC SORT DATA=DB.CONTROL_a;BY SEX_TYPE  AGE_GRP  SIDO_CD; RUN;
PROC PRINT DATA=DB.NEWFREQ1_d; RUN;

PROC SURVEYSELECT
DATA=DB.CONTROL_a
OUT= DB.CONTROL_MATCH1
METHOD=SRS
SEED=2020
SAMPSIZE=(
33
12
6
12
9
3
6
59
6
9
15
8
12
16
14
1
30
6
8
12
3
8
3
48
4
7
11
7
11
4
19
3
54
17
14
19
13
6
10
76
11
11
18
8
12
9
16
4
67
46
17
28
13
17
37
104
17
12
31
8
14
17
32
3
131
51
26
27
17
20
9
107
24
14
41
14
17
27
31
5
218
82
39
53
38
42
31
220
33
33
70
28
29
36
58
8
415
108
61
72
50
69
48
402
47
47
119
38
55
66
79
15
676
164
113
119
91
102
74
734
83
77
186
87
122
125
173
21
818
337
208
240
147
166
150
1080
142
142
241
124
202
235
320
62
1262
573
312
355
219
238
197
1627
273
222
401
219
284
384
530
91
2030
950
523
546
272
359
285
2161
385
402
526
328
481
604
755
108
2213
1036
556
522
275
334
309
1989
352
367
545
449
587
702
776
109
2773
1251
599
603
360
365
273
2401
515
399
688
569
789
811
928
154
3105
1358
727
628
439
426
271
2662
675
605
898
680
918
1089
1044
165
2581
1117
739
540
381
354
250
2612
682
595
1030
845
1125
1177
1113
208
1552
687
436
390
275
240
151
1807
408
404
729
602
788
879
835
130
804
327
243
182
142
136
57
903
232
245
408
317
429
487
404
54
476
164
92
111
60
59
36
481
148
132
168
170
220
246
211
28
35
11
5
9
2
4
6
32
1
9
11
6
7
6
6
1
21
6
8
6
10
4
3
38
3
9
9
6
4
8
16
6
61
15
12
15
6
19
16
59
6
4
14
8
12
11
11
8
88
33
24
16
9
9
29
101
9
10
39
17
16
19
24
6
203
68
42
32
21
28
18
168
23
29
41
22
38
38
53
11
551
141
130
105
66
90
59
476
49
56
133
57
56
83
118
17
920
213
213
154
133
143
129
924
78
80
153
109
133
183
221
32
1437
367
365
278
213
265
160
1632
125
138
244
198
241
266
376
56
1841
532
502
423
305
350
275
2186
206
257
358
296
326
440
559
91
2449
877
694
580
359
459
324
2702
273
291
489
429
509
581
677
109
2926
1029
698
566
399
431
327
2510
358
347
531
439
507
647
737
110
2108
774
510
393
277
277
202
1744
270
262
410
379
423
517
548
81
2023
694
461
381
259
221
157
1667
300
260
372
368
453
482
503
94
1784
718
424
373
263
232
149
1717
339
330
502
410
570
619
593
101
1474
665
457
381
228
210
150
1610
394
375
540
441
638
726
689
91
1177
580
317
294
204
195
126
1224
303
286
479
441
557
647
669
98
779
401
249
212
143
111
91
878
227
236
326
282
387
440
504
74
561
228
145
143
83
88
52
577
162
139
200
210
320
340
323
63
);
STRATA  SEX_TYPE  AGE_GRP SIDO_CD; 
RUN;


DATA DB.CONTROL_MATCH1; SET DB.CONTROL_MATCH1;DROP _NSIZE_ SamplingWeight SelectionProb ; RENAME YEND_STD_AGE=YEND_POTM_AGE_ID; RUN;
DATA DB.CAN; SET CAN;RUN;

PROC FREQ DATA=DB.CONTROL_MATCH1; TABLE SEX_TYPE  AGE_GRP  SIDO_CD ;  RUN; /*일반인구 분포 확인*/
PROC FREQ DATA=DB.CAN; TABLE SEX_TYPE  AGE_GRP  SIDO_CD ; RUN; /*암환자 분포 확인*/

PROC SQL; CREATE TABLE SAPTMP.CONTROL_MATCH1 AS SELECT *  FROM DB.CONTROL_MATCH1; QUIT;
PROC SQL;
connect to saphana as x1(server=pepper1 port=30015 user=Nhis_&사번 password=!Nhis_&사번.1 readbuff=32767 insertbuff=32767);
CREATE TABLE DB.N_CAN_HFVT_TBNYBASE AS SELECT * FROM CONNECTION TO X1(
SELECT * FROM CONTROL_MATCH1 AS A
LEFT JOIN "NHISBDA"."RVSN_HFVT_TBNYBASE"  AS B	ON A.INDI_DSCM_NO=B.INDI_DSCM_NO); 
disconnect from x1;QUIT;

PROC SORT DATA=DB.N_CAN_HFVT_TBNYBASE; BY INDI_DSCM_NO APLY_YM;RUN;

DATA DB.N_CAN_HFVT_TBNYBASE; SET DB.N_CAN_HFVT_TBNYBASE;

IF APLY_YM^=" " THEN DO;
IF RCGT_EDA_FR_DT^=" " AND RCGT_EDA_TO_DT^=" " THEN APLY=1;/*N=800391*/
ELSE IF RCGT_EDA_FR_DT=" " OR RCGT_EDA_TO_DT=" " THEN APLY=2; /*N=274254*/
ELSE IF  RCGT_EDA_FR_DT^=" " AND RCGT_EDA_TO_DT=" " THEN APLY=3;/*N=0*/
ELSE IF  RCGT_EDA_FR_DT=" " AND RCGT_EDA_TO_DT^=" " THEN APLY=4;/*N=0*/
APLY_Y=SUBSTR(APLY_YM,1,4);
IF 2009<APLY_Y THEN DO;APLY_BF=1; APLY_AF=0;END;/*N=405377*/
ELSE  IF 2009>=APLY_Y THEN DO;APLY_BF=0; APLY_AF=1;END;/*N=669268*/
END;

ELSE IF APLY_YM=" " THEN DO; APLY=0; APLY_Y=9999;
APLY_BF=0;APLY_AF=0;END;/*N=3252102*/

IF YEND_POTM_AGE_ID=. THEN AGE_GRP2=.;
ELSE IF YEND_POTM_AGE_ID^=. AND YEND_POTM_AGE_ID<=9 THEN AGE_GRP2=1;
ELSE IF YEND_POTM_AGE_ID^=. AND YEND_POTM_AGE_ID<=19 THEN AGE_GRP2=2;
ELSE IF YEND_POTM_AGE_ID^=. AND YEND_POTM_AGE_ID<=29 THEN AGE_GRP2=3;
ELSE IF YEND_POTM_AGE_ID^=. AND YEND_POTM_AGE_ID<=39 THEN AGE_GRP2=4;
ELSE IF YEND_POTM_AGE_ID^=. AND YEND_POTM_AGE_ID<=49 THEN AGE_GRP2=5;
ELSE IF YEND_POTM_AGE_ID^=. AND YEND_POTM_AGE_ID<=59 THEN AGE_GRP2=6;
ELSE IF YEND_POTM_AGE_ID^=. AND YEND_POTM_AGE_ID<=69 THEN AGE_GRP2=7;
ELSE IF YEND_POTM_AGE_ID^=. AND YEND_POTM_AGE_ID<=79 THEN AGE_GRP2=8;
ELSE IF YEND_POTM_AGE_ID^=. AND YEND_POTM_AGE_ID<=89 THEN AGE_GRP2=9;
ELSE IF YEND_POTM_AGE_ID^=. AND YEND_POTM_AGE_ID>89 THEN AGE_GRP2=10;
ELSE AGE_GRP2=.;


IF YEND_POTM_AGE_ID^=. AND YEND_POTM_AGE_ID<65 THEN AGE_GRP65=0;
ELSE IF YEND_POTM_AGE_ID^=. AND YEND_POTM_AGE_ID>=65 THEN AGE_GRP65=1;
ELSE AGE_GRP65=.;

RUN;

DATA DB.N_CAN_HFVT_TBNYBASE_BF; SET DB.N_CAN_HFVT_TBNYBASE; WHERE APLY_BF=1;RUN;
DATA DB.N_CAN_HFVT_TBNYBASE_AF; SET DB.N_CAN_HFVT_TBNYBASE; WHERE APLY_AF=1;RUN;
DATA DB.N_CAN_HFVT_TBNYBASE_NONE; SET DB.N_CAN_HFVT_TBNYBASE; WHERE APLY_BF=0 AND APLY_AF=0; RUN;

PROC SORT DATA=DB.N_CAN_HFVT_TBNYBASE_BF OUT=DB.N_CAN_HFVT_TBNYBASE_BF_ID
(KEEP=INDI_DSCM_NO   SEX_TYPE  YEND_POTM_AGE_ID    AGE_GRP  AGE_GRP2 AGE_GRP65 APLY_BF ) NODUPKEY;
BY INDI_DSCM_NO ; RUN;
PROC SORT DATA=DB.N_CAN_HFVT_TBNYBASE_AF OUT=DB.N_CAN_HFVT_TBNYBASE_AF_ID
(KEEP=INDI_DSCM_NO   SEX_TYPE  YEND_POTM_AGE_ID AGE_GRP AGE_GRP2 AGE_GRP65  APLY_AF) NODUPKEY;
BY INDI_DSCM_NO ; RUN;
PROC SORT DATA=DB.N_CAN_HFVT_TBNYBASE_NONE OUT=DB.N_CAN_HFVT_TBNYBASE_NONE_ID
(KEEP=INDI_DSCM_NO   SEX_TYPE  YEND_POTM_AGE_ID  AGE_GRP AGE_GRP2 AGE_GRP65 APLY_BF APLY_AF) NODUPKEY;
BY INDI_DSCM_NO ; RUN;

DATA DB.N_CAN_HFVT_TBNYBASE_ID; MERGE 
DB.N_CAN_HFVT_TBNYBASE_BF_ID DB.N_CAN_HFVT_TBNYBASE_AF_ID DB.N_CAN_HFVT_TBNYBASE_NONE_ID;
BY INDI_DSCM_NO ; RUN;

DATA DB.N_CAN_HFVT_TBNYBASE_ID; SET DB.N_CAN_HFVT_TBNYBASE_ID;
FORMAT APLY_TYPE $15.;
IF APLY_BF=. THEN APLY_BF=0;  IF APLY_AF=. THEN APLY_AF=0;
IF  APLY_BF=0 AND APLY_AF=0 THEN APLY_TYPE="NEVER";
ELSE IF APLY_BF=1 AND APLY_AF=0 THEN APLY_TYPE="BEFORE";
ELSE IF APLY_BF=0 AND APLY_AF=1 THEN APLY_TYPE="AFTER";
ELSE IF APLY_BF=1 AND APLY_AF=1 THEN APLY_TYPE="BOTH";
RUN;


/*PROC FREQ DATA=DB.C_HFVT_TBNYBASE;TABLE APLY APLY_C;RUN;*/
PROC SQL; CREATE TABLE TABLE6  AS SELECT 
SEX_TYPE,AGE_GRP,COUNT(DISTINCT INDI_DSCM_NO) AS C_PAT
FROM DB.N_CAN_HFVT_TBNYBASE_ID GROUP BY  SEX_TYPE,AGE_GRP; QUIT;

PROC SQL; CREATE TABLE TABLE7A AS SELECT 
SEX_TYPE,AGE_GRP,APLY_TYPE, COUNT(DISTINCT INDI_DSCM_NO) AS C_PAT
FROM DB.N_CAN_HFVT_TBNYBASE_ID GROUP BY SEX_TYPE,AGE_GRP,APLY_TYPE; QUIT;
PROC SQL; CREATE TABLE TABLE7B AS SELECT 
SEX_TYPE,AGE_GRP2,APLY_TYPE, COUNT(DISTINCT INDI_DSCM_NO) AS C_PAT
FROM DB.N_CAN_HFVT_TBNYBASE_ID GROUP BY  SEX_TYPE,AGE_GRP2,APLY_TYPE; QUIT;
PROC SQL; CREATE TABLE TABLE7C AS SELECT 
SEX_TYPE,AGE_GRP65,APLY_TYPE, COUNT(DISTINCT INDI_DSCM_NO) AS C_PAT
FROM DB.N_CAN_HFVT_TBNYBASE_ID GROUP BY  SEX_TYPE,AGE_GRP65,APLY_TYPE; QUIT;


/******************APLY TYPE (BEFORE, AFTER)-> RESULT******************/

DATA DB.N_CAN_HFVT_TBNYBASE_BF_N; SET DB.N_CAN_HFVT_TBNYBASE; 
RENAME APLY=APLY_BF_N;
WHERE APLY_BF=1 AND APLY=2;RUN;
DATA DB.N_CAN_HFVT_TBNYBASE_BF_Y; SET DB.N_CAN_HFVT_TBNYBASE;
RENAME APLY=APLY_BF_Y;
WHERE APLY_BF=1 AND APLY=1;RUN;
DATA DB.N_CAN_HFVT_TBNYBASE_AF_N; SET DB.N_CAN_HFVT_TBNYBASE; 
RENAME APLY=APLY_AF_N;
WHERE APLY_AF=1 AND APLY=2;RUN;
DATA DB.N_CAN_HFVT_TBNYBASE_AF_Y; SET DB.N_CAN_HFVT_TBNYBASE; 
RENAME APLY=APLY_AF_Y;
WHERE APLY_AF=1 AND APLY=1;RUN;
DATA DB.N_CAN_HFVT_TBNYBASE_NEVER; SET DB.N_CAN_HFVT_TBNYBASE; 
RENAME APLY=APLY_NEVER;
WHERE APLY_BF=0 AND APLY_AF=0 AND APLY=0;RUN;


DATA DB.N_CAN_HFVT_TBNYBASE_BF_N_ID; SET DB.N_CAN_HFVT_TBNYBASE_BF_N; 
KEEP INDI_DSCM_NO   SEX_TYPE  YEND_POTM_AGE_ID
AGE_GRP  AGE_GRP2 AGE_GRP65 LTC_MGMT_NO_SEQ APLY_BF_N;
RUN;
DATA DB.N_CAN_HFVT_TBNYBASE_BF_Y_ID; SET DB.N_CAN_HFVT_TBNYBASE_BF_Y;
KEEP INDI_DSCM_NO   SEX_TYPE  YEND_POTM_AGE_ID
AGE_GRP  AGE_GRP2 AGE_GRP65 LTC_MGMT_NO_SEQ APLY_BF_Y;
RUN;
DATA DB.N_CAN_HFVT_TBNYBASE_AF_N_ID; SET DB.N_CAN_HFVT_TBNYBASE_AF_N; 
KEEP INDI_DSCM_NO   SEX_TYPE  YEND_POTM_AGE_ID
AGE_GRP  AGE_GRP2 AGE_GRP65 LTC_MGMT_NO_SEQ APLY_AF_N;
RUN;
DATA DB.N_CAN_HFVT_TBNYBASE_AF_Y_ID; SET DB.N_CAN_HFVT_TBNYBASE_AF_Y; 
KEEP INDI_DSCM_NO   SEX_TYPE  YEND_POTM_AGE_ID
AGE_GRP  AGE_GRP2 AGE_GRP65 LTC_MGMT_NO_SEQ APLY_AF_Y;
RUN;
DATA DB.N_CAN_HFVT_TBNYBASE_NEVER_ID; SET DB.N_CAN_HFVT_TBNYBASE_NEVER; 
KEEP INDI_DSCM_NO   SEX_TYPE  YEND_POTM_AGE_ID
AGE_GRP  AGE_GRP2 AGE_GRP65 LTC_MGMT_NO_SEQ APLY_NEVER;
RUN;

PROC SQL; CREATE TABLE DB.N_CAN_HFVT_TBNYBASE_BF_N_ID AS SELECT 
INDI_DSCM_NO, SEX_TYPE,  YEND_POTM_AGE_ID,AGE_GRP,  AGE_GRP2, AGE_GRP65, 
APLY_BF_N, COUNT(DISTINCT LTC_MGMT_NO_SEQ) AS N_APLY_BF_N
FROM DB.N_CAN_HFVT_TBNYBASE_BF_N_ID GROUP BY  
INDI_DSCM_NO,  SEX_TYPE,  YEND_POTM_AGE_ID,
AGE_GRP,  AGE_GRP2, AGE_GRP65,APLY_BF_N; QUIT;
PROC SQL; CREATE TABLE DB.N_CAN_HFVT_TBNYBASE_BF_Y_ID AS SELECT 
INDI_DSCM_NO,  SEX_TYPE,  YEND_POTM_AGE_ID,AGE_GRP,  AGE_GRP2, AGE_GRP65, 
APLY_BF_Y, COUNT(DISTINCT LTC_MGMT_NO_SEQ) AS N_APLY_BF_Y
FROM DB.N_CAN_HFVT_TBNYBASE_BF_Y_ID GROUP BY  
INDI_DSCM_NO,  SEX_TYPE,  YEND_POTM_AGE_ID,
AGE_GRP,  AGE_GRP2, AGE_GRP65,APLY_BF_Y; QUIT;
PROC SQL; CREATE TABLE DB.N_CAN_HFVT_TBNYBASE_AF_N_ID AS SELECT 
INDI_DSCM_NO,  SEX_TYPE,  YEND_POTM_AGE_ID,AGE_GRP,  AGE_GRP2, AGE_GRP65, 
APLY_AF_N, COUNT(DISTINCT LTC_MGMT_NO_SEQ) AS N_APLY_AF_N
FROM DB.N_CAN_HFVT_TBNYBASE_AF_N_ID GROUP BY  
INDI_DSCM_NO,   SEX_TYPE,  YEND_POTM_AGE_ID,
AGE_GRP,  AGE_GRP2, AGE_GRP65,APLY_AF_N; QUIT;
PROC SQL; CREATE TABLE DB.N_CAN_HFVT_TBNYBASE_AF_Y_ID AS SELECT 
INDI_DSCM_NO,  SEX_TYPE,  YEND_POTM_AGE_ID,AGE_GRP,  AGE_GRP2, AGE_GRP65, 
APLY_AF_Y, COUNT(DISTINCT LTC_MGMT_NO_SEQ) AS N_APLY_AF_Y
FROM DB.N_CAN_HFVT_TBNYBASE_AF_Y_ID GROUP BY  
INDI_DSCM_NO,  SEX_TYPE,  YEND_POTM_AGE_ID,
 AGE_GRP,  AGE_GRP2, AGE_GRP65,APLY_AF_Y; QUIT;
PROC SQL; CREATE TABLE DB.N_CAN_HFVT_TBNYBASE_NEVER_ID AS SELECT 
INDI_DSCM_NO, SEX_TYPE,  YEND_POTM_AGE_ID,AGE_GRP,  AGE_GRP2, AGE_GRP65, 
APLY_NEVER, COUNT(DISTINCT LTC_MGMT_NO_SEQ) AS N_APLY_NEVER
FROM DB.N_CAN_HFVT_TBNYBASE_NEVER_ID GROUP BY  
INDI_DSCM_NO, SEX_TYPE,  YEND_POTM_AGE_ID,
AGE_GRP,  AGE_GRP2, AGE_GRP65,APLY_NEVER; QUIT;

DATA DB.N_CAN_HFVT_TBNYBASE_ID2; MERGE 
DB.N_CAN_HFVT_TBNYBASE_BF_N_ID DB.N_CAN_HFVT_TBNYBASE_BF_Y_ID 
DB.N_CAN_HFVT_TBNYBASE_AF_N_ID  DB.N_CAN_HFVT_TBNYBASE_AF_Y_ID
DB.N_CAN_HFVT_TBNYBASE_NEVER_ID;
BY INDI_DSCM_NO ; RUN;

DATA DB.N_CAN_HFVT_TBNYBASE_ID3; SET DB.N_CAN_HFVT_TBNYBASE_ID2;
FORMAT APLY_TYPE2 $30.;
IF APLY_BF_N=. THEN APLY_BF_N=0;  IF APLY_BF_N=2 THEN APLY_BF_N=1;  IF N_APLY_BF_N=. THEN N_APLY_BF_N=0;
IF APLY_BF_Y=. THEN APLY_BF_Y=0;  IF APLY_BF_Y=1 THEN APLY_BF_Y=1; IF N_APLY_BF_Y=. THEN N_APLY_BF_Y=0;
IF APLY_AF_N=. THEN APLY_AF_N=0;  IF APLY_AF_N=2 THEN APLY_AF_N=1; IF N_APLY_AF_N=. THEN N_APLY_AF_N=0;
IF APLY_AF_Y=. THEN APLY_AF_Y=0;IF APLY_AF_Y=1 THEN APLY_AF_Y=1;  IF N_APLY_AF_Y=. THEN N_APLY_AF_Y=0;
IF APLY_NEVER=0 THEN APLY_NEVER=1; IF APLY_NEVER=. THEN APLY_NEVER=0;  IF N_APLY_NEVER=. THEN N_APLY_NEVER=0;

IF  APLY_NEVER=1 AND APLY_BF_N=0 AND APLY_AF_N=0 AND APLY_BF_Y=0 AND APLY_AF_Y=0 THEN APLY_TYPE2="NEVER APPLY";
IF  APLY_NEVER=0 THEN DO;
IF APLY_BF_N=1 AND APLY_AF_N=1 THEN APLY_TYPE2="APLY BOTH, NEVER GET";
ELSE IF APLY_BF_Y=1 AND APLY_AF_Y=1 THEN APLY_TYPE2="APLY BOTH, BOTH GET";

ELSE IF APLY_BF_N=1 AND APLY_AF_N=0 THEN APLY_TYPE2="APLY BEFORE, NEVER GET";
ELSE IF APLY_BF_N=0 AND APLY_AF_N=1 THEN APLY_TYPE2="APLY AFTER, NEVER GET";

ELSE IF APLY_BF_Y=1 AND APLY_AF_Y=0 THEN APLY_TYPE2="APLY BEFORE,  GET";
ELSE IF APLY_BF_Y=0 AND APLY_AF_Y=1 THEN APLY_TYPE2="APLY AFTER,  GET";
END;
RUN;

/*PROC FREQ DATA=DB.C_HFVT_TBNYBASE_ID3; TABLE APLY_TYPE2;RUN;*/
PROC SQL; CREATE TABLE TABLE8A AS SELECT 
SEX_TYPE,AGE_GRP,APLY_TYPE2, COUNT(DISTINCT INDI_DSCM_NO) AS G_PAT
FROM DB.N_CAN_HFVT_TBNYBASE_ID3 GROUP BY  SEX_TYPE,AGE_GRP,APLY_TYPE2; QUIT;
PROC SQL; CREATE TABLE TABLE8B AS SELECT 
 SEX_TYPE,AGE_GRP2,APLY_TYPE2, COUNT(DISTINCT INDI_DSCM_NO) AS G_PAT
FROM DB.N_CAN_HFVT_TBNYBASE_ID3 GROUP BY  SEX_TYPE,AGE_GRP2,APLY_TYPE2; QUIT;
PROC SQL; CREATE TABLE TABLE8C AS SELECT 
SEX_TYPE,AGE_GRP65,APLY_TYPE2, COUNT(DISTINCT INDI_DSCM_NO) AS G_PAT
FROM DB.N_CAN_HFVT_TBNYBASE_ID3 GROUP BY   SEX_TYPE,AGE_GRP65,APLY_TYPE2; QUIT;

/*PROC FREQ DATA=DB.C_HFVT_TBNYBASE_ID3; TABLE APLY_TYPE2;RUN;*/
PROC SQL; CREATE TABLE TABLE9_BFA AS SELECT 
SEX_TYPE,AGE_GRP,
MEAN(EVRDY_LIFE_ARFF_SCOR) AS MEAN_EVRDY_LIFE,MEDIAN(EVRDY_LIFE_ARFF_SCOR) AS MED_EVRDY_LIFE,
MIN(EVRDY_LIFE_ARFF_SCOR) AS MIN_EVRDY_LIFE,MAX(EVRDY_LIFE_ARFF_SCOR) AS MAX_EVRDY_LIFE,
MEAN(PCT_ARFF_SCOR) AS MEAN_PCT,MEDIAN(PCT_ARFF_SCOR) AS MED_PCT,
MIN(PCT_ARFF_SCOR) AS MIN_PCT,MAX(PCT_ARFF_SCOR) AS MAX_PCT,
MEAN(BHVR_ARFF_SCOR) AS MEAN_BHVR,MEDIAN(BHVR_ARFF_SCOR) AS MED_BHVR,
MIN(BHVR_ARFF_SCOR) AS MIN_BHVR,MAX(BHVR_ARFF_SCOR) AS MAX_BHVR,
MEAN(TNDNC_ARFF_SCOR) AS MEAN_TNDNC,MEDIAN(TNDNC_ARFF_SCOR) AS MED_TNDNC,
MIN(TNDNC_ARFF_SCOR) AS MIN_TNDNC,MAX(TNDNC_ARFF_SCOR) AS MAX_TNDNC,
MEAN(REHBT_ARFF_SCOR) AS MEAN_REHBT,MEDIAN(REHBT_ARFF_SCOR) AS MED_REHBT,
MIN(REHBT_ARFF_SCOR) AS MIN_REHBT,MAX(REHBT_ARFF_SCOR) AS MAX_REHBT,
MEAN(RCG_RCGT_SCOR) AS MEAN_RCG_RCGT,MEDIAN(RCG_RCGT_SCOR) AS MED_RCG_RCGT,
MIN(RCG_RCGT_SCOR) AS MIN_RCG_RCGT,MAX(RCG_RCGT_SCOR) AS MAX_RCG_RCGT
FROM DB.N_CAN_HFVT_TBNYBASE_BF
GROUP BY  SEX_TYPE,AGE_GRP; QUIT;

PROC SQL; CREATE TABLE TABLE9_BFB AS SELECT 
SEX_TYPE,AGE_GRP2,
MEAN(EVRDY_LIFE_ARFF_SCOR) AS MEAN_EVRDY_LIFE,MEDIAN(EVRDY_LIFE_ARFF_SCOR) AS MED_EVRDY_LIFE,
MIN(EVRDY_LIFE_ARFF_SCOR) AS MIN_EVRDY_LIFE,MAX(EVRDY_LIFE_ARFF_SCOR) AS MAX_EVRDY_LIFE,
MEAN(PCT_ARFF_SCOR) AS MEAN_PCT,MEDIAN(PCT_ARFF_SCOR) AS MED_PCT,
MIN(PCT_ARFF_SCOR) AS MIN_PCT,MAX(PCT_ARFF_SCOR) AS MAX_PCT,
MEAN(BHVR_ARFF_SCOR) AS MEAN_BHVR,MEDIAN(BHVR_ARFF_SCOR) AS MED_BHVR,
MIN(BHVR_ARFF_SCOR) AS MIN_BHVR,MAX(BHVR_ARFF_SCOR) AS MAX_BHVR,
MEAN(TNDNC_ARFF_SCOR) AS MEAN_TNDNC,MEDIAN(TNDNC_ARFF_SCOR) AS MED_TNDNC,
MIN(TNDNC_ARFF_SCOR) AS MIN_TNDNC,MAX(TNDNC_ARFF_SCOR) AS MAX_TNDNC,
MEAN(REHBT_ARFF_SCOR) AS MEAN_REHBT,MEDIAN(REHBT_ARFF_SCOR) AS MED_REHBT,
MIN(REHBT_ARFF_SCOR) AS MIN_REHBT,MAX(REHBT_ARFF_SCOR) AS MAX_REHBT,
MEAN(RCG_RCGT_SCOR) AS MEAN_RCG_RCGT,MEDIAN(RCG_RCGT_SCOR) AS MED_RCG_RCGT,
MIN(RCG_RCGT_SCOR) AS MIN_RCG_RCGT,MAX(RCG_RCGT_SCOR) AS MAX_RCG_RCGT
FROM DB.N_CAN_HFVT_TBNYBASE_BF
GROUP BY  SEX_TYPE,AGE_GRP2; QUIT;

PROC SQL; CREATE TABLE TABLE9_BFC AS SELECT 
SEX_TYPE,AGE_GRP65,
MEAN(EVRDY_LIFE_ARFF_SCOR) AS MEAN_EVRDY_LIFE,MEDIAN(EVRDY_LIFE_ARFF_SCOR) AS MED_EVRDY_LIFE,
MIN(EVRDY_LIFE_ARFF_SCOR) AS MIN_EVRDY_LIFE,MAX(EVRDY_LIFE_ARFF_SCOR) AS MAX_EVRDY_LIFE,
MEAN(PCT_ARFF_SCOR) AS MEAN_PCT,MEDIAN(PCT_ARFF_SCOR) AS MED_PCT,
MIN(PCT_ARFF_SCOR) AS MIN_PCT,MAX(PCT_ARFF_SCOR) AS MAX_PCT,
MEAN(BHVR_ARFF_SCOR) AS MEAN_BHVR,MEDIAN(BHVR_ARFF_SCOR) AS MED_BHVR,
MIN(BHVR_ARFF_SCOR) AS MIN_BHVR,MAX(BHVR_ARFF_SCOR) AS MAX_BHVR,
MEAN(TNDNC_ARFF_SCOR) AS MEAN_TNDNC,MEDIAN(TNDNC_ARFF_SCOR) AS MED_TNDNC,
MIN(TNDNC_ARFF_SCOR) AS MIN_TNDNC,MAX(TNDNC_ARFF_SCOR) AS MAX_TNDNC,
MEAN(REHBT_ARFF_SCOR) AS MEAN_REHBT,MEDIAN(REHBT_ARFF_SCOR) AS MED_REHBT,
MIN(REHBT_ARFF_SCOR) AS MIN_REHBT,MAX(REHBT_ARFF_SCOR) AS MAX_REHBT,
MEAN(RCG_RCGT_SCOR) AS MEAN_RCG_RCGT,MEDIAN(RCG_RCGT_SCOR) AS MED_RCG_RCGT,
MIN(RCG_RCGT_SCOR) AS MIN_RCG_RCGT,MAX(RCG_RCGT_SCOR) AS MAX_RCG_RCGT
FROM DB.N_CAN_HFVT_TBNYBASE_BF
GROUP BY  SEX_TYPE,AGE_GRP65; QUIT;

PROC SQL; CREATE TABLE TABLE9_AFA AS SELECT 
 SEX_TYPE,AGE_GRP,
MEAN(EVRDY_LIFE_ARFF_SCOR) AS MEAN_EVRDY_LIFE,MEDIAN(EVRDY_LIFE_ARFF_SCOR) AS MED_EVRDY_LIFE,
MIN(EVRDY_LIFE_ARFF_SCOR) AS MIN_EVRDY_LIFE,MAX(EVRDY_LIFE_ARFF_SCOR) AS MAX_EVRDY_LIFE,
MEAN(PCT_ARFF_SCOR) AS MEAN_PCT,MEDIAN(PCT_ARFF_SCOR) AS MED_PCT,
MIN(PCT_ARFF_SCOR) AS MIN_PCT,MAX(PCT_ARFF_SCOR) AS MAX_PCT,
MEAN(BHVR_ARFF_SCOR) AS MEAN_BHVR,MEDIAN(BHVR_ARFF_SCOR) AS MED_BHVR,
MIN(BHVR_ARFF_SCOR) AS MIN_BHVR,MAX(BHVR_ARFF_SCOR) AS MAX_BHVR,
MEAN(TNDNC_ARFF_SCOR) AS MEAN_TNDNC,MEDIAN(TNDNC_ARFF_SCOR) AS MED_TNDNC,
MIN(TNDNC_ARFF_SCOR) AS MIN_TNDNC,MAX(TNDNC_ARFF_SCOR) AS MAX_TNDNC,
MEAN(REHBT_ARFF_SCOR) AS MEAN_REHBT,MEDIAN(REHBT_ARFF_SCOR) AS MED_REHBT,
MIN(REHBT_ARFF_SCOR) AS MIN_REHBT,MAX(REHBT_ARFF_SCOR) AS MAX_REHBT,
MEAN(RCG_RCGT_SCOR) AS MEAN_RCG_RCGT,MEDIAN(RCG_RCGT_SCOR) AS MED_RCG_RCGT,
MIN(RCG_RCGT_SCOR) AS MIN_RCG_RCGT,MAX(RCG_RCGT_SCOR) AS MAX_RCG_RCGT
FROM DB.N_CAN_HFVT_TBNYBASE_AF
GROUP BY  SEX_TYPE,AGE_GRP; QUIT;

PROC SQL; CREATE TABLE TABLE9_AFB AS SELECT 
SEX_TYPE,AGE_GRP2,
MEAN(EVRDY_LIFE_ARFF_SCOR) AS MEAN_EVRDY_LIFE,MEDIAN(EVRDY_LIFE_ARFF_SCOR) AS MED_EVRDY_LIFE,
MIN(EVRDY_LIFE_ARFF_SCOR) AS MIN_EVRDY_LIFE,MAX(EVRDY_LIFE_ARFF_SCOR) AS MAX_EVRDY_LIFE,
MEAN(PCT_ARFF_SCOR) AS MEAN_PCT,MEDIAN(PCT_ARFF_SCOR) AS MED_PCT,
MIN(PCT_ARFF_SCOR) AS MIN_PCT,MAX(PCT_ARFF_SCOR) AS MAX_PCT,
MEAN(BHVR_ARFF_SCOR) AS MEAN_BHVR,MEDIAN(BHVR_ARFF_SCOR) AS MED_BHVR,
MIN(BHVR_ARFF_SCOR) AS MIN_BHVR,MAX(BHVR_ARFF_SCOR) AS MAX_BHVR,
MEAN(TNDNC_ARFF_SCOR) AS MEAN_TNDNC,MEDIAN(TNDNC_ARFF_SCOR) AS MED_TNDNC,
MIN(TNDNC_ARFF_SCOR) AS MIN_TNDNC,MAX(TNDNC_ARFF_SCOR) AS MAX_TNDNC,
MEAN(REHBT_ARFF_SCOR) AS MEAN_REHBT,MEDIAN(REHBT_ARFF_SCOR) AS MED_REHBT,
MIN(REHBT_ARFF_SCOR) AS MIN_REHBT,MAX(REHBT_ARFF_SCOR) AS MAX_REHBT,
MEAN(RCG_RCGT_SCOR) AS MEAN_RCG_RCGT,MEDIAN(RCG_RCGT_SCOR) AS MED_RCG_RCGT,
MIN(RCG_RCGT_SCOR) AS MIN_RCG_RCGT,MAX(RCG_RCGT_SCOR) AS MAX_RCG_RCGT
FROM DB.N_CAN_HFVT_TBNYBASE_AF
GROUP BY  SEX_TYPE,AGE_GRP2; QUIT;

PROC SQL; CREATE TABLE TABLE9_AFC AS SELECT 
SEX_TYPE,AGE_GRP65,
MEAN(EVRDY_LIFE_ARFF_SCOR) AS MEAN_EVRDY_LIFE,MEDIAN(EVRDY_LIFE_ARFF_SCOR) AS MED_EVRDY_LIFE,
MIN(EVRDY_LIFE_ARFF_SCOR) AS MIN_EVRDY_LIFE,MAX(EVRDY_LIFE_ARFF_SCOR) AS MAX_EVRDY_LIFE,
MEAN(PCT_ARFF_SCOR) AS MEAN_PCT,MEDIAN(PCT_ARFF_SCOR) AS MED_PCT,
MIN(PCT_ARFF_SCOR) AS MIN_PCT,MAX(PCT_ARFF_SCOR) AS MAX_PCT,
MEAN(BHVR_ARFF_SCOR) AS MEAN_BHVR,MEDIAN(BHVR_ARFF_SCOR) AS MED_BHVR,
MIN(BHVR_ARFF_SCOR) AS MIN_BHVR,MAX(BHVR_ARFF_SCOR) AS MAX_BHVR,
MEAN(TNDNC_ARFF_SCOR) AS MEAN_TNDNC,MEDIAN(TNDNC_ARFF_SCOR) AS MED_TNDNC,
MIN(TNDNC_ARFF_SCOR) AS MIN_TNDNC,MAX(TNDNC_ARFF_SCOR) AS MAX_TNDNC,
MEAN(REHBT_ARFF_SCOR) AS MEAN_REHBT,MEDIAN(REHBT_ARFF_SCOR) AS MED_REHBT,
MIN(REHBT_ARFF_SCOR) AS MIN_REHBT,MAX(REHBT_ARFF_SCOR) AS MAX_REHBT,
MEAN(RCG_RCGT_SCOR) AS MEAN_RCG_RCGT,MEDIAN(RCG_RCGT_SCOR) AS MED_RCG_RCGT,
MIN(RCG_RCGT_SCOR) AS MIN_RCG_RCGT,MAX(RCG_RCGT_SCOR) AS MAX_RCG_RCGT
FROM DB.N_CAN_HFVT_TBNYBASE_AF
GROUP BY SEX_TYPE,AGE_GRP65; QUIT;

/*******************/

PROC SQL; CREATE TABLE TABLE10_BF_NA AS SELECT 
SEX_TYPE,AGE_GRP,
MEAN(EVRDY_LIFE_ARFF_SCOR) AS MEAN_EVRDY_LIFE,MEDIAN(EVRDY_LIFE_ARFF_SCOR) AS MED_EVRDY_LIFE,
MIN(EVRDY_LIFE_ARFF_SCOR) AS MIN_EVRDY_LIFE,MAX(EVRDY_LIFE_ARFF_SCOR) AS MAX_EVRDY_LIFE,
MEAN(PCT_ARFF_SCOR) AS MEAN_PCT,MEDIAN(PCT_ARFF_SCOR) AS MED_PCT,
MIN(PCT_ARFF_SCOR) AS MIN_PCT,MAX(PCT_ARFF_SCOR) AS MAX_PCT,
MEAN(BHVR_ARFF_SCOR) AS MEAN_BHVR,MEDIAN(BHVR_ARFF_SCOR) AS MED_BHVR,
MIN(BHVR_ARFF_SCOR) AS MIN_BHVR,MAX(BHVR_ARFF_SCOR) AS MAX_BHVR,
MEAN(TNDNC_ARFF_SCOR) AS MEAN_TNDNC,MEDIAN(TNDNC_ARFF_SCOR) AS MED_TNDNC,
MIN(TNDNC_ARFF_SCOR) AS MIN_TNDNC,MAX(TNDNC_ARFF_SCOR) AS MAX_TNDNC,
MEAN(REHBT_ARFF_SCOR) AS MEAN_REHBT,MEDIAN(REHBT_ARFF_SCOR) AS MED_REHBT,
MIN(REHBT_ARFF_SCOR) AS MIN_REHBT,MAX(REHBT_ARFF_SCOR) AS MAX_REHBT,
MEAN(RCG_RCGT_SCOR) AS MEAN_RCG_RCGT,MEDIAN(RCG_RCGT_SCOR) AS MED_RCG_RCGT,
MIN(RCG_RCGT_SCOR) AS MIN_RCG_RCGT,MAX(RCG_RCGT_SCOR) AS MAX_RCG_RCGT
FROM DB.N_CAN_HFVT_TBNYBASE_BF_N
GROUP BY   SEX_TYPE,AGE_GRP; QUIT;

PROC SQL; CREATE TABLE TABLE10_BF_NB AS SELECT 
SEX_TYPE,AGE_GRP2,
MEAN(EVRDY_LIFE_ARFF_SCOR) AS MEAN_EVRDY_LIFE,MEDIAN(EVRDY_LIFE_ARFF_SCOR) AS MED_EVRDY_LIFE,
MIN(EVRDY_LIFE_ARFF_SCOR) AS MIN_EVRDY_LIFE,MAX(EVRDY_LIFE_ARFF_SCOR) AS MAX_EVRDY_LIFE,
MEAN(PCT_ARFF_SCOR) AS MEAN_PCT,MEDIAN(PCT_ARFF_SCOR) AS MED_PCT,
MIN(PCT_ARFF_SCOR) AS MIN_PCT,MAX(PCT_ARFF_SCOR) AS MAX_PCT,
MEAN(BHVR_ARFF_SCOR) AS MEAN_BHVR,MEDIAN(BHVR_ARFF_SCOR) AS MED_BHVR,
MIN(BHVR_ARFF_SCOR) AS MIN_BHVR,MAX(BHVR_ARFF_SCOR) AS MAX_BHVR,
MEAN(TNDNC_ARFF_SCOR) AS MEAN_TNDNC,MEDIAN(TNDNC_ARFF_SCOR) AS MED_TNDNC,
MIN(TNDNC_ARFF_SCOR) AS MIN_TNDNC,MAX(TNDNC_ARFF_SCOR) AS MAX_TNDNC,
MEAN(REHBT_ARFF_SCOR) AS MEAN_REHBT,MEDIAN(REHBT_ARFF_SCOR) AS MED_REHBT,
MIN(REHBT_ARFF_SCOR) AS MIN_REHBT,MAX(REHBT_ARFF_SCOR) AS MAX_REHBT,
MEAN(RCG_RCGT_SCOR) AS MEAN_RCG_RCGT,MEDIAN(RCG_RCGT_SCOR) AS MED_RCG_RCGT,
MIN(RCG_RCGT_SCOR) AS MIN_RCG_RCGT,MAX(RCG_RCGT_SCOR) AS MAX_RCG_RCGT
FROM DB.N_CAN_HFVT_TBNYBASE_BF_N
GROUP BY   SEX_TYPE,AGE_GRP2; QUIT;

PROC SQL; CREATE TABLE TABLE10_BF_NC AS SELECT 
 SEX_TYPE,AGE_GRP65,
MEAN(EVRDY_LIFE_ARFF_SCOR) AS MEAN_EVRDY_LIFE,MEDIAN(EVRDY_LIFE_ARFF_SCOR) AS MED_EVRDY_LIFE,
MIN(EVRDY_LIFE_ARFF_SCOR) AS MIN_EVRDY_LIFE,MAX(EVRDY_LIFE_ARFF_SCOR) AS MAX_EVRDY_LIFE,
MEAN(PCT_ARFF_SCOR) AS MEAN_PCT,MEDIAN(PCT_ARFF_SCOR) AS MED_PCT,
MIN(PCT_ARFF_SCOR) AS MIN_PCT,MAX(PCT_ARFF_SCOR) AS MAX_PCT,
MEAN(BHVR_ARFF_SCOR) AS MEAN_BHVR,MEDIAN(BHVR_ARFF_SCOR) AS MED_BHVR,
MIN(BHVR_ARFF_SCOR) AS MIN_BHVR,MAX(BHVR_ARFF_SCOR) AS MAX_BHVR,
MEAN(TNDNC_ARFF_SCOR) AS MEAN_TNDNC,MEDIAN(TNDNC_ARFF_SCOR) AS MED_TNDNC,
MIN(TNDNC_ARFF_SCOR) AS MIN_TNDNC,MAX(TNDNC_ARFF_SCOR) AS MAX_TNDNC,
MEAN(REHBT_ARFF_SCOR) AS MEAN_REHBT,MEDIAN(REHBT_ARFF_SCOR) AS MED_REHBT,
MIN(REHBT_ARFF_SCOR) AS MIN_REHBT,MAX(REHBT_ARFF_SCOR) AS MAX_REHBT,
MEAN(RCG_RCGT_SCOR) AS MEAN_RCG_RCGT,MEDIAN(RCG_RCGT_SCOR) AS MED_RCG_RCGT,
MIN(RCG_RCGT_SCOR) AS MIN_RCG_RCGT,MAX(RCG_RCGT_SCOR) AS MAX_RCG_RCGT
FROM DB.N_CAN_HFVT_TBNYBASE_BF_N
GROUP BY   SEX_TYPE,AGE_GRP65; QUIT;


PROC SQL; CREATE TABLE TABLE10_AF_NA AS SELECT 
 SEX_TYPE,AGE_GRP,
MEAN(EVRDY_LIFE_ARFF_SCOR) AS MEAN_EVRDY_LIFE,MEDIAN(EVRDY_LIFE_ARFF_SCOR) AS MED_EVRDY_LIFE,
MIN(EVRDY_LIFE_ARFF_SCOR) AS MIN_EVRDY_LIFE,MAX(EVRDY_LIFE_ARFF_SCOR) AS MAX_EVRDY_LIFE,
MEAN(PCT_ARFF_SCOR) AS MEAN_PCT,MEDIAN(PCT_ARFF_SCOR) AS MED_PCT,
MIN(PCT_ARFF_SCOR) AS MIN_PCT,MAX(PCT_ARFF_SCOR) AS MAX_PCT,
MEAN(BHVR_ARFF_SCOR) AS MEAN_BHVR,MEDIAN(BHVR_ARFF_SCOR) AS MED_BHVR,
MIN(BHVR_ARFF_SCOR) AS MIN_BHVR,MAX(BHVR_ARFF_SCOR) AS MAX_BHVR,
MEAN(TNDNC_ARFF_SCOR) AS MEAN_TNDNC,MEDIAN(TNDNC_ARFF_SCOR) AS MED_TNDNC,
MIN(TNDNC_ARFF_SCOR) AS MIN_TNDNC,MAX(TNDNC_ARFF_SCOR) AS MAX_TNDNC,
MEAN(REHBT_ARFF_SCOR) AS MEAN_REHBT,MEDIAN(REHBT_ARFF_SCOR) AS MED_REHBT,
MIN(REHBT_ARFF_SCOR) AS MIN_REHBT,MAX(REHBT_ARFF_SCOR) AS MAX_REHBT,
MEAN(RCG_RCGT_SCOR) AS MEAN_RCG_RCGT,MEDIAN(RCG_RCGT_SCOR) AS MED_RCG_RCGT,
MIN(RCG_RCGT_SCOR) AS MIN_RCG_RCGT,MAX(RCG_RCGT_SCOR) AS MAX_RCG_RCGT
FROM DB.N_CAN_HFVT_TBNYBASE_AF_N
GROUP BY   SEX_TYPE,AGE_GRP; QUIT;

PROC SQL; CREATE TABLE TABLE10_AF_NB AS SELECT 
SEX_TYPE,AGE_GRP2,
MEAN(EVRDY_LIFE_ARFF_SCOR) AS MEAN_EVRDY_LIFE,MEDIAN(EVRDY_LIFE_ARFF_SCOR) AS MED_EVRDY_LIFE,
MIN(EVRDY_LIFE_ARFF_SCOR) AS MIN_EVRDY_LIFE,MAX(EVRDY_LIFE_ARFF_SCOR) AS MAX_EVRDY_LIFE,
MEAN(PCT_ARFF_SCOR) AS MEAN_PCT,MEDIAN(PCT_ARFF_SCOR) AS MED_PCT,
MIN(PCT_ARFF_SCOR) AS MIN_PCT,MAX(PCT_ARFF_SCOR) AS MAX_PCT,
MEAN(BHVR_ARFF_SCOR) AS MEAN_BHVR,MEDIAN(BHVR_ARFF_SCOR) AS MED_BHVR,
MIN(BHVR_ARFF_SCOR) AS MIN_BHVR,MAX(BHVR_ARFF_SCOR) AS MAX_BHVR,
MEAN(TNDNC_ARFF_SCOR) AS MEAN_TNDNC,MEDIAN(TNDNC_ARFF_SCOR) AS MED_TNDNC,
MIN(TNDNC_ARFF_SCOR) AS MIN_TNDNC,MAX(TNDNC_ARFF_SCOR) AS MAX_TNDNC,
MEAN(REHBT_ARFF_SCOR) AS MEAN_REHBT,MEDIAN(REHBT_ARFF_SCOR) AS MED_REHBT,
MIN(REHBT_ARFF_SCOR) AS MIN_REHBT,MAX(REHBT_ARFF_SCOR) AS MAX_REHBT,
MEAN(RCG_RCGT_SCOR) AS MEAN_RCG_RCGT,MEDIAN(RCG_RCGT_SCOR) AS MED_RCG_RCGT,
MIN(RCG_RCGT_SCOR) AS MIN_RCG_RCGT,MAX(RCG_RCGT_SCOR) AS MAX_RCG_RCGT
FROM DB.N_CAN_HFVT_TBNYBASE_AF_N
GROUP BY   SEX_TYPE,AGE_GRP2; QUIT;

PROC SQL; CREATE TABLE TABLE10_AF_NC AS SELECT 
SEX_TYPE,AGE_GRP65,
MEAN(EVRDY_LIFE_ARFF_SCOR) AS MEAN_EVRDY_LIFE,MEDIAN(EVRDY_LIFE_ARFF_SCOR) AS MED_EVRDY_LIFE,
MIN(EVRDY_LIFE_ARFF_SCOR) AS MIN_EVRDY_LIFE,MAX(EVRDY_LIFE_ARFF_SCOR) AS MAX_EVRDY_LIFE,
MEAN(PCT_ARFF_SCOR) AS MEAN_PCT,MEDIAN(PCT_ARFF_SCOR) AS MED_PCT,
MIN(PCT_ARFF_SCOR) AS MIN_PCT,MAX(PCT_ARFF_SCOR) AS MAX_PCT,
MEAN(BHVR_ARFF_SCOR) AS MEAN_BHVR,MEDIAN(BHVR_ARFF_SCOR) AS MED_BHVR,
MIN(BHVR_ARFF_SCOR) AS MIN_BHVR,MAX(BHVR_ARFF_SCOR) AS MAX_BHVR,
MEAN(TNDNC_ARFF_SCOR) AS MEAN_TNDNC,MEDIAN(TNDNC_ARFF_SCOR) AS MED_TNDNC,
MIN(TNDNC_ARFF_SCOR) AS MIN_TNDNC,MAX(TNDNC_ARFF_SCOR) AS MAX_TNDNC,
MEAN(REHBT_ARFF_SCOR) AS MEAN_REHBT,MEDIAN(REHBT_ARFF_SCOR) AS MED_REHBT,
MIN(REHBT_ARFF_SCOR) AS MIN_REHBT,MAX(REHBT_ARFF_SCOR) AS MAX_REHBT,
MEAN(RCG_RCGT_SCOR) AS MEAN_RCG_RCGT,MEDIAN(RCG_RCGT_SCOR) AS MED_RCG_RCGT,
MIN(RCG_RCGT_SCOR) AS MIN_RCG_RCGT,MAX(RCG_RCGT_SCOR) AS MAX_RCG_RCGT
FROM DB.N_CAN_HFVT_TBNYBASE_AF_N
GROUP BY   SEX_TYPE,AGE_GRP65; QUIT;


/*******************/

PROC SQL; CREATE TABLE TABLE10_BF_YA AS SELECT 
 SEX_TYPE,AGE_GRP,
MEAN(EVRDY_LIFE_ARFF_SCOR) AS MEAN_EVRDY_LIFE,MEDIAN(EVRDY_LIFE_ARFF_SCOR) AS MED_EVRDY_LIFE,
MIN(EVRDY_LIFE_ARFF_SCOR) AS MIN_EVRDY_LIFE,MAX(EVRDY_LIFE_ARFF_SCOR) AS MAX_EVRDY_LIFE,
MEAN(PCT_ARFF_SCOR) AS MEAN_PCT,MEDIAN(PCT_ARFF_SCOR) AS MED_PCT,
MIN(PCT_ARFF_SCOR) AS MIN_PCT,MAX(PCT_ARFF_SCOR) AS MAX_PCT,
MEAN(BHVR_ARFF_SCOR) AS MEAN_BHVR,MEDIAN(BHVR_ARFF_SCOR) AS MED_BHVR,
MIN(BHVR_ARFF_SCOR) AS MIN_BHVR,MAX(BHVR_ARFF_SCOR) AS MAX_BHVR,
MEAN(TNDNC_ARFF_SCOR) AS MEAN_TNDNC,MEDIAN(TNDNC_ARFF_SCOR) AS MED_TNDNC,
MIN(TNDNC_ARFF_SCOR) AS MIN_TNDNC,MAX(TNDNC_ARFF_SCOR) AS MAX_TNDNC,
MEAN(REHBT_ARFF_SCOR) AS MEAN_REHBT,MEDIAN(REHBT_ARFF_SCOR) AS MED_REHBT,
MIN(REHBT_ARFF_SCOR) AS MIN_REHBT,MAX(REHBT_ARFF_SCOR) AS MAX_REHBT,
MEAN(RCG_RCGT_SCOR) AS MEAN_RCG_RCGT,MEDIAN(RCG_RCGT_SCOR) AS MED_RCG_RCGT,
MIN(RCG_RCGT_SCOR) AS MIN_RCG_RCGT,MAX(RCG_RCGT_SCOR) AS MAX_RCG_RCGT
FROM DB.N_CAN_HFVT_TBNYBASE_BF_Y
GROUP BY   SEX_TYPE,AGE_GRP; QUIT;

PROC SQL; CREATE TABLE TABLE10_BF_YB AS SELECT 
 SEX_TYPE,AGE_GRP2,
MEAN(EVRDY_LIFE_ARFF_SCOR) AS MEAN_EVRDY_LIFE,MEDIAN(EVRDY_LIFE_ARFF_SCOR) AS MED_EVRDY_LIFE,
MIN(EVRDY_LIFE_ARFF_SCOR) AS MIN_EVRDY_LIFE,MAX(EVRDY_LIFE_ARFF_SCOR) AS MAX_EVRDY_LIFE,
MEAN(PCT_ARFF_SCOR) AS MEAN_PCT,MEDIAN(PCT_ARFF_SCOR) AS MED_PCT,
MIN(PCT_ARFF_SCOR) AS MIN_PCT,MAX(PCT_ARFF_SCOR) AS MAX_PCT,
MEAN(BHVR_ARFF_SCOR) AS MEAN_BHVR,MEDIAN(BHVR_ARFF_SCOR) AS MED_BHVR,
MIN(BHVR_ARFF_SCOR) AS MIN_BHVR,MAX(BHVR_ARFF_SCOR) AS MAX_BHVR,
MEAN(TNDNC_ARFF_SCOR) AS MEAN_TNDNC,MEDIAN(TNDNC_ARFF_SCOR) AS MED_TNDNC,
MIN(TNDNC_ARFF_SCOR) AS MIN_TNDNC,MAX(TNDNC_ARFF_SCOR) AS MAX_TNDNC,
MEAN(REHBT_ARFF_SCOR) AS MEAN_REHBT,MEDIAN(REHBT_ARFF_SCOR) AS MED_REHBT,
MIN(REHBT_ARFF_SCOR) AS MIN_REHBT,MAX(REHBT_ARFF_SCOR) AS MAX_REHBT,
MEAN(RCG_RCGT_SCOR) AS MEAN_RCG_RCGT,MEDIAN(RCG_RCGT_SCOR) AS MED_RCG_RCGT,
MIN(RCG_RCGT_SCOR) AS MIN_RCG_RCGT,MAX(RCG_RCGT_SCOR) AS MAX_RCG_RCGT
FROM DB.N_CAN_HFVT_TBNYBASE_BF_Y
GROUP BY   SEX_TYPE,AGE_GRP2; QUIT;

PROC SQL; CREATE TABLE TABLE10_BF_YC AS SELECT 
 SEX_TYPE,AGE_GRP65,
MEAN(EVRDY_LIFE_ARFF_SCOR) AS MEAN_EVRDY_LIFE,MEDIAN(EVRDY_LIFE_ARFF_SCOR) AS MED_EVRDY_LIFE,
MIN(EVRDY_LIFE_ARFF_SCOR) AS MIN_EVRDY_LIFE,MAX(EVRDY_LIFE_ARFF_SCOR) AS MAX_EVRDY_LIFE,
MEAN(PCT_ARFF_SCOR) AS MEAN_PCT,MEDIAN(PCT_ARFF_SCOR) AS MED_PCT,
MIN(PCT_ARFF_SCOR) AS MIN_PCT,MAX(PCT_ARFF_SCOR) AS MAX_PCT,
MEAN(BHVR_ARFF_SCOR) AS MEAN_BHVR,MEDIAN(BHVR_ARFF_SCOR) AS MED_BHVR,
MIN(BHVR_ARFF_SCOR) AS MIN_BHVR,MAX(BHVR_ARFF_SCOR) AS MAX_BHVR,
MEAN(TNDNC_ARFF_SCOR) AS MEAN_TNDNC,MEDIAN(TNDNC_ARFF_SCOR) AS MED_TNDNC,
MIN(TNDNC_ARFF_SCOR) AS MIN_TNDNC,MAX(TNDNC_ARFF_SCOR) AS MAX_TNDNC,
MEAN(REHBT_ARFF_SCOR) AS MEAN_REHBT,MEDIAN(REHBT_ARFF_SCOR) AS MED_REHBT,
MIN(REHBT_ARFF_SCOR) AS MIN_REHBT,MAX(REHBT_ARFF_SCOR) AS MAX_REHBT,
MEAN(RCG_RCGT_SCOR) AS MEAN_RCG_RCGT,MEDIAN(RCG_RCGT_SCOR) AS MED_RCG_RCGT,
MIN(RCG_RCGT_SCOR) AS MIN_RCG_RCGT,MAX(RCG_RCGT_SCOR) AS MAX_RCG_RCGT
FROM DB.C_HFVT_TBNYBASE_BF_Y
GROUP BY   SEX_TYPE,AGE_GRP65; QUIT;


PROC SQL; CREATE TABLE TABLE10_AF_YA AS SELECT 
 SEX_TYPE,AGE_GRP,
MEAN(EVRDY_LIFE_ARFF_SCOR) AS MEAN_EVRDY_LIFE,MEDIAN(EVRDY_LIFE_ARFF_SCOR) AS MED_EVRDY_LIFE,
MIN(EVRDY_LIFE_ARFF_SCOR) AS MIN_EVRDY_LIFE,MAX(EVRDY_LIFE_ARFF_SCOR) AS MAX_EVRDY_LIFE,
MEAN(PCT_ARFF_SCOR) AS MEAN_PCT,MEDIAN(PCT_ARFF_SCOR) AS MED_PCT,
MIN(PCT_ARFF_SCOR) AS MIN_PCT,MAX(PCT_ARFF_SCOR) AS MAX_PCT,
MEAN(BHVR_ARFF_SCOR) AS MEAN_BHVR,MEDIAN(BHVR_ARFF_SCOR) AS MED_BHVR,
MIN(BHVR_ARFF_SCOR) AS MIN_BHVR,MAX(BHVR_ARFF_SCOR) AS MAX_BHVR,
MEAN(TNDNC_ARFF_SCOR) AS MEAN_TNDNC,MEDIAN(TNDNC_ARFF_SCOR) AS MED_TNDNC,
MIN(TNDNC_ARFF_SCOR) AS MIN_TNDNC,MAX(TNDNC_ARFF_SCOR) AS MAX_TNDNC,
MEAN(REHBT_ARFF_SCOR) AS MEAN_REHBT,MEDIAN(REHBT_ARFF_SCOR) AS MED_REHBT,
MIN(REHBT_ARFF_SCOR) AS MIN_REHBT,MAX(REHBT_ARFF_SCOR) AS MAX_REHBT,
MEAN(RCG_RCGT_SCOR) AS MEAN_RCG_RCGT,MEDIAN(RCG_RCGT_SCOR) AS MED_RCG_RCGT,
MIN(RCG_RCGT_SCOR) AS MIN_RCG_RCGT,MAX(RCG_RCGT_SCOR) AS MAX_RCG_RCGT
FROM DB.N_CAN_HFVT_TBNYBASE_AF_Y
GROUP BY   SEX_TYPE,AGE_GRP; QUIT;

PROC SQL; CREATE TABLE TABLE10_AF_YB AS SELECT 
 SEX_TYPE,AGE_GRP2,
MEAN(EVRDY_LIFE_ARFF_SCOR) AS MEAN_EVRDY_LIFE,MEDIAN(EVRDY_LIFE_ARFF_SCOR) AS MED_EVRDY_LIFE,
MIN(EVRDY_LIFE_ARFF_SCOR) AS MIN_EVRDY_LIFE,MAX(EVRDY_LIFE_ARFF_SCOR) AS MAX_EVRDY_LIFE,
MEAN(PCT_ARFF_SCOR) AS MEAN_PCT,MEDIAN(PCT_ARFF_SCOR) AS MED_PCT,
MIN(PCT_ARFF_SCOR) AS MIN_PCT,MAX(PCT_ARFF_SCOR) AS MAX_PCT,
MEAN(BHVR_ARFF_SCOR) AS MEAN_BHVR,MEDIAN(BHVR_ARFF_SCOR) AS MED_BHVR,
MIN(BHVR_ARFF_SCOR) AS MIN_BHVR,MAX(BHVR_ARFF_SCOR) AS MAX_BHVR,
MEAN(TNDNC_ARFF_SCOR) AS MEAN_TNDNC,MEDIAN(TNDNC_ARFF_SCOR) AS MED_TNDNC,
MIN(TNDNC_ARFF_SCOR) AS MIN_TNDNC,MAX(TNDNC_ARFF_SCOR) AS MAX_TNDNC,
MEAN(REHBT_ARFF_SCOR) AS MEAN_REHBT,MEDIAN(REHBT_ARFF_SCOR) AS MED_REHBT,
MIN(REHBT_ARFF_SCOR) AS MIN_REHBT,MAX(REHBT_ARFF_SCOR) AS MAX_REHBT,
MEAN(RCG_RCGT_SCOR) AS MEAN_RCG_RCGT,MEDIAN(RCG_RCGT_SCOR) AS MED_RCG_RCGT,
MIN(RCG_RCGT_SCOR) AS MIN_RCG_RCGT,MAX(RCG_RCGT_SCOR) AS MAX_RCG_RCGT
FROM DB.N_CAN_HFVT_TBNYBASE_AF_Y
GROUP BY   SEX_TYPE,AGE_GRP2; QUIT;

PROC SQL; CREATE TABLE TABLE10_AF_YC AS SELECT 
 SEX_TYPE,AGE_GRP65,
MEAN(EVRDY_LIFE_ARFF_SCOR) AS MEAN_EVRDY_LIFE,MEDIAN(EVRDY_LIFE_ARFF_SCOR) AS MED_EVRDY_LIFE,
MIN(EVRDY_LIFE_ARFF_SCOR) AS MIN_EVRDY_LIFE,MAX(EVRDY_LIFE_ARFF_SCOR) AS MAX_EVRDY_LIFE,
MEAN(PCT_ARFF_SCOR) AS MEAN_PCT,MEDIAN(PCT_ARFF_SCOR) AS MED_PCT,
MIN(PCT_ARFF_SCOR) AS MIN_PCT,MAX(PCT_ARFF_SCOR) AS MAX_PCT,
MEAN(BHVR_ARFF_SCOR) AS MEAN_BHVR,MEDIAN(BHVR_ARFF_SCOR) AS MED_BHVR,
MIN(BHVR_ARFF_SCOR) AS MIN_BHVR,MAX(BHVR_ARFF_SCOR) AS MAX_BHVR,
MEAN(TNDNC_ARFF_SCOR) AS MEAN_TNDNC,MEDIAN(TNDNC_ARFF_SCOR) AS MED_TNDNC,
MIN(TNDNC_ARFF_SCOR) AS MIN_TNDNC,MAX(TNDNC_ARFF_SCOR) AS MAX_TNDNC,
MEAN(REHBT_ARFF_SCOR) AS MEAN_REHBT,MEDIAN(REHBT_ARFF_SCOR) AS MED_REHBT,
MIN(REHBT_ARFF_SCOR) AS MIN_REHBT,MAX(REHBT_ARFF_SCOR) AS MAX_REHBT,
MEAN(RCG_RCGT_SCOR) AS MEAN_RCG_RCGT,MEDIAN(RCG_RCGT_SCOR) AS MED_RCG_RCGT,
MIN(RCG_RCGT_SCOR) AS MIN_RCG_RCGT,MAX(RCG_RCGT_SCOR) AS MAX_RCG_RCGT
FROM DB.N_CAN_HFVT_TBNYBASE_AF_Y
GROUP BY   SEX_TYPE,AGE_GRP65; QUIT;



/*******************/
PROC SQL; CREATE TABLE TABLE11_BF_YA AS SELECT 
 SEX_TYPE,AGE_GRP,
MEAN(VALID_TERM) AS MEAN_EVRDY_LIFE,MEDIAN(VALID_TERM) AS MED_EVRDY_LIFE,
MIN(VALID_TERM) AS MIN_EVRDY_LIFE,MAX(VALID_TERM) AS MAX_EVRDY_LIFE
FROM DB.N_CAN_HFVT_TBNYBASE_BF_Y
GROUP BY   SEX_TYPE,AGE_GRP; QUIT;

PROC SQL; CREATE TABLE TABLE11_BF_YB AS SELECT 
 SEX_TYPE,AGE_GRP2,
MEAN(VALID_TERM) AS MEAN_EVRDY_LIFE,MEDIAN(VALID_TERM) AS MED_EVRDY_LIFE,
MIN(VALID_TERM) AS MIN_EVRDY_LIFE,MAX(VALID_TERM) AS MAX_EVRDY_LIFE
FROM DB.N_CAN_HFVT_TBNYBASE_BF_Y
GROUP BY   SEX_TYPE,AGE_GRP2; QUIT;

PROC SQL; CREATE TABLE TABLE11_BF_YC AS SELECT 
 SEX_TYPE,AGE_GRP65,
MEAN(VALID_TERM) AS MEAN_EVRDY_LIFE,MEDIAN(VALID_TERM) AS MED_EVRDY_LIFE,
MIN(VALID_TERM) AS MIN_EVRDY_LIFE,MAX(VALID_TERM) AS MAX_EVRDY_LIFE
FROM DB.N_CAN_HFVT_TBNYBASE_BF_Y
GROUP BY   SEX_TYPE,AGE_GRP65; QUIT;

PROC SQL; CREATE TABLE TABLE11_AF_YA AS SELECT 
 SEX_TYPE,AGE_GRP,
MEAN(VALID_TERM) AS MEAN_EVRDY_LIFE,MEDIAN(VALID_TERM) AS MED_EVRDY_LIFE,
MIN(VALID_TERM) AS MIN_EVRDY_LIFE,MAX(VALID_TERM) AS MAX_EVRDY_LIFE
FROM DB.N_CAN_HFVT_TBNYBASE_AF_Y
GROUP BY   SEX_TYPE,AGE_GRP; QUIT;

PROC SQL; CREATE TABLE TABLE11_AF_YB AS SELECT 
 SEX_TYPE,AGE_GRP2,
MEAN(VALID_TERM) AS MEAN_EVRDY_LIFE,MEDIAN(VALID_TERM) AS MED_EVRDY_LIFE,
MIN(VALID_TERM) AS MIN_EVRDY_LIFE,MAX(VALID_TERM) AS MAX_EVRDY_LIFE
FROM DB.N_CAN_HFVT_TBNYBASE_AF_Y
GROUP BY   SEX_TYPE,AGE_GRP2; QUIT;

PROC SQL; CREATE TABLE TABLE11_AF_YC AS SELECT 
 SEX_TYPE,AGE_GRP65,
MEAN(VALID_TERM) AS MEAN_EVRDY_LIFE,MEDIAN(VALID_TERM) AS MED_EVRDY_LIFE,
MIN(VALID_TERM) AS MIN_EVRDY_LIFE,MAX(VALID_TERM) AS MAX_EVRDY_LIFE
FROM DB.N_CAN_HFVT_TBNYBASE_AF_Y
GROUP BY   SEX_TYPE,AGE_GRP65; QUIT;

/*******************/
PROC SQL; CREATE TABLE TABLE12_BF_YA AS SELECT 
 SEX_TYPE,AGE_GRP,GJU_RCGT_GRADE_CD,COUNT(INDI_DSCM_NO) AS N
FROM DB.N_CAN_HFVT_TBNYBASE_BF_Y
GROUP BY   SEX_TYPE,AGE_GRP,GJU_RCGT_GRADE_CD; QUIT;

PROC SQL; CREATE TABLE TABLE12_BF_YB AS SELECT 
 SEX_TYPE,AGE_GRP2,GJU_RCGT_GRADE_CD,COUNT(INDI_DSCM_NO) AS N
FROM DB.N_CAN_HFVT_TBNYBASE_BF_Y
GROUP BY   SEX_TYPE,AGE_GRP2,GJU_RCGT_GRADE_CD; QUIT;

PROC SQL; CREATE TABLE TABLE12_BF_YC AS SELECT 
 SEX_TYPE,AGE_GRP65,GJU_RCGT_GRADE_CD,COUNT(INDI_DSCM_NO) AS N
FROM DB.N_CAN_HFVT_TBNYBASE_BF_Y
GROUP BY   SEX_TYPE,AGE_GRP65,GJU_RCGT_GRADE_CD; QUIT;

PROC SQL; CREATE TABLE TABLE12_AF_YA AS SELECT 
 SEX_TYPE,AGE_GRP,GJU_RCGT_GRADE_CD,COUNT(INDI_DSCM_NO) AS N
FROM DB.N_CAN_HFVT_TBNYBASE_AF_Y
GROUP BY   SEX_TYPE,AGE_GRP,GJU_RCGT_GRADE_CD; QUIT;

PROC SQL; CREATE TABLE TABLE12_AF_YB AS SELECT 
 SEX_TYPE,AGE_GRP2,GJU_RCGT_GRADE_CD,COUNT(INDI_DSCM_NO) AS N
FROM DB.N_CAN_HFVT_TBNYBASE_AF_Y
GROUP BY   SEX_TYPE,AGE_GRP2,GJU_RCGT_GRADE_CD; QUIT;

PROC SQL; CREATE TABLE TABLE12_AF_YC AS SELECT 
 SEX_TYPE,AGE_GRP65,GJU_RCGT_GRADE_CD,COUNT(INDI_DSCM_NO) AS N
FROM DB.N_CAN_HFVT_TBNYBASE_AF_Y
GROUP BY   SEX_TYPE,AGE_GRP65,GJU_RCGT_GRADE_CD; QUIT;

