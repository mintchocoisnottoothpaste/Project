
PROC SQL; CREATE TABLE SAPTMP.LUNG_20581 AS SELECT DISTINCT INDI_DSCM_NO  FROM DB.LUNG_2009_2; QUIT; /*20581*/

/*샤프론영역으로 저장 */
/*Matching된 일반인구의 2007-2008년 2년간 진료기록 확인*/
/*T40*/
%MACRO COMO_Y; %DO Y=2007 %TO 2009; %MACRO COMO_M; %DO M=&Y.01 %TO &Y.12;

PROC SQL; 
connect to saphana as x1(server=pepper1 port=30015 user=Nhis_&사번 password=!Nhis_&사번.1 readbuff=32767 insertbuff=32767);

CREATE TABLE DB.T40_&M. AS 
SELECT * FROM CONNECTION TO X1(
  SELECT * 
  FROM NHISBASE.HBMT_TBGJME40 AS A
  INNER JOIN LUNG_20581 AS B

ON A.INDI_DSCM_NO=B.INDI_DSCM_NO
	  	AND B.INDI_DSCM_NO<>0
		AND B.INDI_DSCM_NO IS NOT NULL

WHERE 
     A.MDCARE_STRT_YYYYMM=%nrbquote('&M.')
     AND A.PAY_YN='1' 
	 AND A.FORM_CD IN ('02','03') /*의과입원+의과외래*/ 
     AND A.INDI_DSCM_NO <>  0
     AND A.INDI_DSCM_NO IS NOT NULL 
	 AND (A.SICK_CLSF_TYPE<>'3' OR A.SICK_CLSF_TYPE IS NULL) /*배제상병제외*/
);
disconnect from x1;
QUIT;
%END; %MEND COMO_M; %COMO_M; %END; %MEND COMO_Y; %COMO_Y;

DATA DB.T40_0709_0; SET DB.T40_200701-DB.T40_200712 DB.T40_200801-DB.T40_200812 DB.T40_200901-DB.T40_200912; RUN;

/*T20*/
%MACRO COMO_Y; %DO Y=2007 %TO 2009; %MACRO COMO_M; %DO M=&Y.01 %TO &Y.12;

PROC SQL; 
connect to saphana as x1(server=pepper1 port=30015 user=Nhis_&사번 password=!Nhis_&사번.1 readbuff=32767 insertbuff=32767);

CREATE TABLE DB.T20_&M. AS 
SELECT * FROM CONNECTION TO X1(
  SELECT * 
  FROM NHISBASE.HBMT_TBGJME20 AS A
  INNER JOIN LUNG_20581 AS B

ON A.INDI_DSCM_NO=B.INDI_DSCM_NO
	  	AND B.INDI_DSCM_NO<>0
		AND B.INDI_DSCM_NO IS NOT NULL
WHERE 
     A.MDCARE_STRT_YYYYMM=%nrbquote('&M.')
     AND A.PAY_YN='1' 
	 AND A.FORM_CD IN ('02','03') 
     AND A.INDI_DSCM_NO <>  0
     AND A.INDI_DSCM_NO IS NOT NULL 
);
disconnect from x1;
QUIT;
%END; %MEND COMO_M; %COMO_M; %END; %MEND COMO_Y; %COMO_Y;

DATA DB.T20_0709_0; SET DB.T20_200701-DB.T20_200712 DB.T20_200801-DB.T20_200812 DB.T20_200901-DB.T20_200912; RUN;


/*진료기록 합치기*/
PROC SORT DATA=DB.T20_0709_0; BY CMN_KEY; RUN;
PROC SORT DATA=DB.T40_0709_0; BY CMN_KEY; RUN;

DATA TMP; SET  DB.C_HFVT_TBNYBASE_ID5; KEEP INDI_DSCM_NO DEATH C_YMD DTH_DATE; RUN;
PROC SORT DATA=TMP; BY INDI_DSCM_NO;RUN;
PROC SORT DATA=DB.LUNG_2009_2; BY INDI_DSCM_NO;RUN;

DATA DB.LUNG_2009_3; MERGE DB.LUNG_2009_2(IN=A) TMP; BY INDI_DSCM_NO ; IF A;RUN;

DATA DB.CLAIM_0709_0; MERGE DB.T20_0709_0(IN=A) DB.T40_0709_0(IN=B); BY CMN_KEY; IF A; RUN;

PROC SORT DATA=DB.CLAIM_0709_0;BY INDI_DSCM_NO;RUN;
PROC SORT DATA=DB.LUNG_2009_3;BY INDI_DSCM_NO;RUN;
DATA DB.CLAIM_0709_1; MERGE DB.LUNG_2009_3(IN=A) DB.CLAIM_0709_0; BY INDI_DSCM_NO; IF A; RUN;

DATA DB.CLAIM_0709_1;
SET DB.CLAIM_0709_1;
COMO_DATE=INPUT(PUT(MDCARE_STRT_DT,8.),yymmdd8.);
/**********************************************************************************************************************************************************************************************************************/
/*(1) 심근경색: Maycardial infraction*/  									IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('I21','I22') OR SUBSTR(MCEX_SICK_SYM,1,4)='I252' 	THEN CCI_1=1; 
/*(2) 심부전: Congestive heart failure*/	   				             	IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('I43','I50') OR SUBSTR(MCEX_SICK_SYM,1,4) IN ('I099','I110', 'I130','I132','I255','I420') OR 'I425' <= SUBSTR(MCEX_SICK_SYM,1,4) <= 'I429' 	THEN CCI_2=1;
/*(3) 말초혈관질환: Periopheral vascular disorders*/					IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('I70','I71') OR SUBSTR(MCEX_SICK_SYM,1,4) IN ('I731','I738', 'I739','I771','I790','I792','K551','K558', 'K559','Z958','Z959')  	THEN CCI_3=1; 
/*(4) 뇌혈관질환 : Cerebrovascular disease*/							IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('G45','G46') OR 'I60' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'I69' OR SUBSTR(MCEX_SICK_SYM,1,4) IN ('H340')  	THEN CCI_4=1;
/*(5) 치매 :Dementia*/															IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('F00','F01','F02','F03','G30') OR SUBSTR(MCEX_SICK_SYM,1,4) IN ('F051','G311')  	THEN CCI_5=1; 
/*(6) 만성폐질환 : Chronic pulmonary disease*/    					IF 'J40' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'J47' OR 'J60' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'J67' OR SUBSTR(MCEX_SICK_SYM,1,4) IN ('I278','I279', 'J684','J701','J703') 	THEN CCI_6=1; 
/*(7) 류마티스성 질환 : Rheumatic disease*/         					IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('M05','M06','M32','M33','M34') OR SUBSTR(MCEX_SICK_SYM,1,4) IN ('M315','M351', 'M353','M360')  	THEN CCI_7=1; 
/*(8) 소화성 궤양증 : Peptic ulcer disease*/         					IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('K25','K26','K27','K28')  	THEN CCI_8=1;
/*(9) 가벼운 간질환 : Mild liver disease*/              					IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('B18','K73','K74') OR SUBSTR(MCEX_SICK_SYM,1,4) IN ('K700','K701', 'K702','K703','K709','K713', 'K714','K715','K717','K760', 'K762','K763','K764','K768', 'K769','Z944')  	THEN CCI_9=1; 
 /*(10) 당뇨(만성합병증외) : Diabetes w.o chrnoic complication*/	IF SUBSTR(MCEX_SICK_SYM,1,4) IN ('E100','E101', 'E106','E108','E109','E110','E111', 'E116','E118','E119','E120', 'E121','E126','E128','E129', 'E130','E131', 'E136','E138','E139','E140', 'E141','E146', 'E148','E149')  	THEN CCI_10=1;
/*(11) 당뇨(만성합병증) : Diabetes with chrnoic complication*/	IF SUBSTR(MCEX_SICK_SYM,1,4) IN ('E102','E103', 'E104','E105','E107','E112', 'E113','E114','E115','E117', 'E122','E123','E124','E125', 'E127','E132', 'E133','E134','E135','E137', 'E142','E143', 'E144','E145','E147')  	THEN CCI_11=1; 
/*(12) 편마비 : Hemiplegia or paraplegia*/								IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('G81','G82') OR SUBSTR(MCEX_SICK_SYM,1,4) IN ('G041','G114', 'G801','G802','G830','G831', 'G832','G833','G834', 'G839')  	THEN CCI_12=1; 
/*(13) 신장질환 : Renal disease*/											IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('N18','N19') OR SUBSTR(MCEX_SICK_SYM,1,4) IN ('I120','I131', 'N250','Z940','Z992') OR 'N032' <= SUBSTR(MCEX_SICK_SYM,1,4) <= 'N037' OR 'N052' <= SUBSTR(MCEX_SICK_SYM,1,4) <= 'N057' OR 'Z490' <= SUBSTR(MCEX_SICK_SYM,1,4) <= 'Z492' THEN CCI_13=1; 
/*(14) 악성종양 : Any malignancy*/											IF 'C00' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'C26' OR 'C30' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'C34'  OR 'C37' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'C41' OR 'C45' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'C58'  OR 'C60' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'C76' OR 'C81' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'C85'  OR 'C90' <= SUBSTR(MCEX_SICK_SYM,1,3) <= 'C97' OR  SUBSTR(MCEX_SICK_SYM,1,3)  IN ('C43','C88')  THEN CCI_14=1; 
/*(15) 심각한 간질환 : Moderate or severe liver disease*/			IF SUBSTR(MCEX_SICK_SYM,1,4) IN ('I850','I859', 'I864','I982','K704','K711', 'K721','K729','K765','K766','K767')  THEN CCI_15=1; 
/*(16) 전이성고형종양 : Moderate or severe liver disease*/			IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('C77','C78', 'C79','C80')  THEN CCI_16=1; 
/*(17) 에이즈 : AIDS/HIV*/														IF SUBSTR(MCEX_SICK_SYM,1,3) IN ('B20','B21', 'B22','B24')  	THEN CCI_17=1; 
RUN;

DATA DB.CLAIM_0709_2; SET DB.CLAIM_0709_1; 
WHERE (C_YMD - COMO_DATE >= 30) AND (C_YMD - COMO_DATE <= 730);RUN;

/*Charlson 동반질환*/
%MACRO CCI(N);
DATA DB.CCI2_&N (KEEP=INDI_DSCM_NO COMO_DATE FORM_CD CCI_&N); SET DB.CLAIM_0709_2; WHERE CCI_&N=1 AND FORM_CD IN ('02','03'); RUN;
PROC SORT DATA=DB.CCI2_&N NODUPKEY; BY INDI_DSCM_NO COMO_DATE FORM_CD; RUN;
PROC SQL; CREATE TABLE DB.CCI3_&N AS SELECT INDI_DSCM_NO, FORM_CD, SUM(CCI_&N) AS N FROM DB.CCI2_&N GROUP BY INDI_DSCM_NO, FORM_CD; QUIT;
DATA DB.CCI3_02_&N; SET DB.CCI3_&N; WHERE FORM_CD='02'; RENAME N=N_02; RUN;
DATA DB.CCI3_03_&N; SET DB.CCI3_&N; WHERE FORM_CD='03'; RENAME N=N_03; RUN;
%MEND;
%MACRO DO_LIST; %DO I=1 %TO 17; %CCI(&I);%END; %MEND DO_LIST; %DO_LIST;


/************************************************************************************************************************************************************************************************
Klabunde's Rule out 1
************************************************************************************************************************************************************************************************/
%MACRO CCI2(N);
DATA DB.CCI4_&N; 
MERGE DB.CCI3_02_&N DB.CCI3_03_&N; BY INDI_DSCM_NO; RUN;
DATA DB.CCI5_&N; SET DB.CCI4_&N; WHERE N_02=. AND N_03<2;RUN;
%MEND;
%MACRO DO_LIST; %DO I=1 %TO 17; %CCI2(&I);%END; %MEND DO_LIST; %DO_LIST;

/************************************************************************************************************************************************************************************************
Klabunde's Rule out 2 
************************************************************************************************************************************************************************************************/
%MACRO CCI3(N);

DATA DB.CCI6_&N (DROP=VISIT_DIFF); SET DB.CCI2_&N; BY INDI_DSCM_NO COMO_DATE;
RETAIN VISIT_DIFF;
IF FIRST.INDI_DSCM_NO THEN DO; VISIT_DIFF=COMO_DATE; END;
ELSE DO; IF NMISS(VISIT_DIFF,COMO_DATE)=0 THEN VISITDIFF=COMO_DATE-VISIT_DIFF;
              ELSE VISITDIFF=.; VISIT_DIFF=COMO_DATE; END; RUN;

DATA DB.CCI7_&N (KEEP=INDI_DSCM_NO); SET DB.CCI6_&N; WHERE VISITDIFF >30; RUN;
PROC SORT DATA= DB.CCI7_&N NODUP; BY INDI_DSCM_NO; RUN;

DATA DB.CCI8_&N (KEEP=INDI_DSCM_NO); SET DB.CCI6_&N; WHERE FORM_CD='02'; RUN;
PROC SORT DATA=DB.CCI8_&N NODUP; BY INDI_DSCM_NO; RUN;

DATA DB.CCI9_&N; 
SET DB.CCI6_&N DB.CCI7_&N (IN=A) DB.CCI8_&N (IN=B); 
BY INDI_DSCM_NO; IF A^=1 OR B^=1; RUN;
%MEND;
%MACRO DO_LIST; %DO I=1 %TO 17; %CCI3(&I);%END; %MEND DO_LIST; %DO_LIST;

/************************************************************************************************************************************************************************************************
Klabunde's Rule out 3
************************************************************************************************************************************************************************************************/
%MACRO CCI4(N);
PROC SQL; CREATE TABLE DB.CCI10_&N AS SELECT INDI_DSCM_NO, SUM(VISITDIFF) AS DAYS 
	FROM DB.CCI9_&N GROUP BY INDI_DSCM_NO; QUIT;
DATA DB.CCI11_&N (KEEP=INDI_DSCM_NO); SET DB.CCI10_&N; WHERE DAYS>30;RUN;
DATA  DB.CCI12_&N; 
		MERGE DB.CCI7_&N (IN=A)  DB.CCI8_&N (IN=B) DB.CCI11_&N (IN=C) DB.CCI6_&N; 
		BY INDI_DSCM_NO; IF A=1 OR B=1 OR C=1; RUN;
%MEND;
%MACRO DO_LIST; %DO I=1 %TO 17; %CCI4(&I);%END; %MEND DO_LIST; %DO_LIST;


/************************************************************************************************************************************************************************************************
CCI DB SET
************************************************************************************************************************************************************************************************/
%MACRO CCI5(N);
DATA DB.CCI13_&N; SET DB.CCI12_&N;  RENAME COMO_DATE=CCI_DATE_&N FORM_CD=FORM_&N; RUN;

PROC SORT DATA=DB.CCI13_&N; BY INDI_DSCM_NO CCI_DATE_&N;  RUN;
DATA DB.CCI14_&N; SET DB.CCI13_&N;  BY INDI_DSCM_NO CCI_DATE_&N; IF FIRST.INDI_DSCM_NO; RUN;

DATA DB.CCI15_&N; SET DB.CCI13_&N; WHERE FORM_&N="02";
RENAME CCI_DATE_&N=CCI02_DATE_&N  CCI_&N=CCI02_&N; RUN;

DATA DB.CCI16_&N; SET DB.CCI13_&N; WHERE FORM_&N="03";
RENAME CCI_DATE_&N=CCI03_DATE_&N  CCI_&N=CCI03_&N;RUN;

DATA DB.CCI17_&N; SET DB.CCI15_&N;  BY INDI_DSCM_NO CCI02_DATE_&N; IF FIRST.INDI_DSCM_NO; RUN;
DATA DB.CCI18_&N; SET DB.CCI16_&N;  BY INDI_DSCM_NO CCI03_DATE_&N; IF FIRST.INDI_DSCM_NO; RUN;
%MEND;
%MACRO DO_LIST; %DO I=1 %TO 17; %CCI5(&I);%END; %MEND DO_LIST; %DO_LIST;

DATA DB.CCI14 (DROP=VISITDIFF); MERGE DB.CCI14_1-DB.CCI14_17; BY INDI_DSCM_NO;RUN;
DATA DB.CCI17 (DROP=VISITDIFF); MERGE DB.CCI17_1-DB.CCI17_17; BY INDI_DSCM_NO;RUN;
DATA DB.CCI18 (DROP=VISITDIFF); MERGE DB.CCI18_1-DB.CCI18_17; BY INDI_DSCM_NO;RUN;

PROC SORT DATA=DB.LUNG_2009_3; BY INDI_DSCM_NO;RUN;
PROC SORT DATA=DB.CCI14; BY INDI_DSCM_NO;RUN;
PROC SORT DATA=DB.CCI17; BY INDI_DSCM_NO;RUN;
PROC SORT DATA=DB.CCI18; BY INDI_DSCM_NO;RUN;

DATA DB.LUNG_2009_4; MERGE DB.LUNG_2009_3(IN=A )	DB.CCI14 DB.CCI17 DB.CCI18 ; BY INDI_DSCM_NO; IF A ; RUN;

%MACRO CCI7(N);
DATA DB.LUNG_2009_4; SET DB.LUNG_2009_4; 
IF CCI_&N=. THEN CCI_&N=0; 
IF CCI02_&N=. THEN CCI02_&N=0;   
IF CCI03_&N=. THEN CCI03_&N=0;RUN;
%MEND;
%MACRO DO_LIST; %DO I=1 %TO 17; %CCI7(&I);%END; %MEND DO_LIST; %DO_LIST;

DATA DB.LUNG_2009_4;SET DB.LUNG_2009_4;
CCI_SUM=SUM(OF CCI_1-CCI_13 CCI_15);
IF CCI_SUM=0 THEN CCI_GRP=0;
ELSE IF CCI_SUM>0 AND CCI_SUM<=2 THEN CCI_GRP=1;
ELSE IF CCI_SUM>2 AND CCI_SUM<=4 THEN CCI_GRP=2;
ELSE IF CCI_SUM>=5 THEN CCI_GRP=3;
RUN;
PROC FREQ DATA=DB.LUNG_2009_4; TABLE CCI_1-CCI_13 CCI_15 CCI_GRP;RUN;

PROC SORT DATA=DB.LUNG_2009_4;BY INDI_DSCM_NO;RUN;

PROC SORT DATA=DB.LUNG_HFVT_TBNYBASE_ID5;BY INDI_DSCM_NO;RUN;
PROC SORT DATA=DB.LUNG_HFVT_TBNYBASE_ID4;BY INDI_DSCM_NO;RUN;

PROC SORT DATA=DB.LUNG_HFVT_TBNYBASE_BF_N3;BY INDI_DSCM_NO;RUN;
PROC SORT DATA=DB.LUNG_HFVT_TBNYBASE_BF_Y3;BY INDI_DSCM_NO;RUN;
PROC SORT DATA=DB.LUNG_HFVT_TBNYBASE_EQ_N3;BY INDI_DSCM_NO;RUN;
PROC SORT DATA=DB.LUNG_HFVT_TBNYBASE_EQ_Y3;BY INDI_DSCM_NO;RUN;
PROC SORT DATA=DB.LUNG_HFVT_TBNYBASE_AF_N3;BY INDI_DSCM_NO;RUN;
PROC SORT DATA=DB.LUNG_HFVT_TBNYBASE_AF_Y3;BY INDI_DSCM_NO;RUN;
PROC SORT DATA=DB.LUNG_HFVT_TBNYBASE_NEVER3;BY INDI_DSCM_NO;RUN;

PROC SORT DATA=DB.LUNG_HFVT_TBNYBASE_BF;BY INDI_DSCM_NO;RUN;
PROC SORT DATA=DB.LUNG_HFVT_TBNYBASE_EQ;BY INDI_DSCM_NO;RUN;
PROC SORT DATA=DB.LUNG_HFVT_TBNYBASE_AF;BY INDI_DSCM_NO;RUN;

/**/

DATA DB.LUNG_CCI_TBNYBASE_ID5;MERGE DB.LUNG_2009_4(IN=A) DB.LUNG_HFVT_TBNYBASE_ID5 (IN=B);BY INDI_DSCM_NO;IF A=1 AND B=1;RUN;
DATA DB.LUNG_CCI_TBNYBASE_ID4;MERGE DB.LUNG_2009_4(IN=A) DB.LUNG_HFVT_TBNYBASE_ID4 (IN=B);BY INDI_DSCM_NO;IF A=1 AND B=1;RUN;

DATA DB.LUNG_CCI_TBNYBASE_BF_N3;MERGE DB.LUNG_2009_4(IN=A) DB.LUNG_HFVT_TBNYBASE_BF_N3 (IN=B);BY INDI_DSCM_NO;IF A=1 AND B=1;RUN;
DATA DB.LUNG_CCI_TBNYBASE_BF_Y3;MERGE DB.LUNG_2009_4(IN=A) DB.LUNG_HFVT_TBNYBASE_BF_Y3 (IN=B);BY INDI_DSCM_NO;IF A=1 AND B=1;RUN;
DATA DB.LUNG_CCI_TBNYBASE_EQ_N3;MERGE DB.LUNG_2009_4(IN=A) DB.LUNG_HFVT_TBNYBASE_EQ_N3 (IN=B);BY INDI_DSCM_NO;IF A=1 AND B=1;RUN;
DATA DB.LUNG_CCI_TBNYBASE_EQ_Y3;MERGE DB.LUNG_2009_4(IN=A) DB.LUNG_HFVT_TBNYBASE_EQ_Y3 (IN=B);BY INDI_DSCM_NO;IF A=1 AND B=1;RUN;
DATA DB.LUNG_CCI_TBNYBASE_AF_N3;MERGE DB.LUNG_2009_4(IN=A) DB.LUNG_HFVT_TBNYBASE_AF_N3 (IN=B);BY INDI_DSCM_NO;IF A=1 AND B=1;RUN;
DATA DB.LUNG_CCI_TBNYBASE_AF_Y3;MERGE DB.LUNG_2009_4(IN=A) DB.LUNG_HFVT_TBNYBASE_AF_Y3 (IN=B);BY INDI_DSCM_NO;IF A=1 AND B=1;RUN;
DATA DB.LUNG_CCI_TBNYBASE_NEVER3;MERGE DB.LUNG_2009_4(IN=A) DB.LUNG_HFVT_TBNYBASE_NEVER3 (IN=B);BY INDI_DSCM_NO;IF A=1 AND B=1;RUN;

DATA DB.LUNG_CCI_TBNYBASE_BF;MERGE DB.LUNG_2009_4(IN=A) DB.LUNG_HFVT_TBNYBASE_BF (IN=B);BY INDI_DSCM_NO;IF A=1 AND B=1;RUN;
DATA DB.LUNG_CCI_TBNYBASE_EQ;MERGE DB.LUNG_2009_4(IN=A) DB.LUNG_HFVT_TBNYBASE_EQ (IN=B);BY INDI_DSCM_NO;IF A=1 AND B=1;RUN;
DATA DB.LUNG_CCI_TBNYBASE_AF;MERGE DB.LUNG_2009_4(IN=A) DB.LUNG_HFVT_TBNYBASE_AF (IN=B);BY INDI_DSCM_NO;IF A=1 AND B=1;RUN;

/*********************************************************************************/
PROC SORT DATA=DB.LUNG_CCI_TBNYBASE_ID5 OUT=SORT; BY AGE_GRP65;RUN;
PROC FREQ DATA=SORT; TABLE CCI_1-CCI_13 CCI_15 CCI_GRP; BY AGE_GRP65;RUN;
/*************************/
PROC FREQ DATA=DB.LUNG_CCI_TBNYBASE_ID5; TABLE APLY_TYPE*CCI_GRP/NOCOL NOROW NOPERCENT;RUN;

/*PROC FREQ DATA=DB.C_HFVT_TBNYBASE;TABLE APLY APLY_C;RUN;*/
PROC SQL; CREATE TABLE TABLE0  AS SELECT 
SEX_TYPE,AGE_GRP,CCI_GRP,COUNT(DISTINCT INDI_DSCM_NO) AS C_PAT
FROM DB.LUNG_CCI_TBNYBASE_ID5 GROUP BY  SEX_TYPE,AGE_GRP,CCI_GRP; QUIT;

PROC SQL; CREATE TABLE TABLE1A AS SELECT 
SEX_TYPE,AGE_GRP,APLY_TYPE, CCI_GRP,COUNT(DISTINCT INDI_DSCM_NO) AS C_PAT
FROM DB.LUNG_CCI_TBNYBASE_ID5 GROUP BY SEX_TYPE,AGE_GRP,APLY_TYPE,CCI_GRP; QUIT;
PROC SQL; CREATE TABLE TABLE1C AS SELECT 
SEX_TYPE,AGE_GRP65,APLY_TYPE, CCI_GRP,COUNT(DISTINCT INDI_DSCM_NO) AS C_PAT
FROM DB.LUNG_CCI_TBNYBASE_ID5 GROUP BY  SEX_TYPE,AGE_GRP65,APLY_TYPE,CCI_GRP; QUIT;

PROC SQL; CREATE TABLE TABLE1D AS SELECT 
SEX_TYPE,AGE_GRP65,APLY_TYPE, CCI_GRP,
SURV0_3MON, SURV0_6MON, SURV0_9MON,
SURV0_1YR, SURV0_2YR, SURV0_3YR, SURV0_4YR, SURV0_5YR, SURV0_6YR, SURV0_7YR, SURV0_8YR, SURV0_9YR, SURV0_10YR, SURV0_11YR,
COUNT(DISTINCT INDI_DSCM_NO) AS C_PAT
FROM DB.LUNG_CCI_TBNYBASE_ID5 GROUP BY SEX_TYPE,AGE_GRP65,APLY_TYPE,CCI_GRP,
SURV0_3MON, SURV0_6MON, SURV0_9MON,
SURV0_1YR, SURV0_2YR, SURV0_3YR, SURV0_4YR, SURV0_5YR, SURV0_6YR, SURV0_7YR, SURV0_8YR, SURV0_9YR, SURV0_10YR, SURV0_11YR; QUIT;

PROC FREQ DATA=DB.LUNG_CCI_TBNYBASE_ID4; TABLE APLY_TYPE2*CCI_GRP/NOCOL NOROW NOPERCENT;RUN;


/*PROC FREQ DATA=DB.C_HFVT_TBNYBASE_ID3; TABLE APLY_TYPE2;RUN;*/
PROC SQL; CREATE TABLE TABLE2A AS SELECT 
SEX_TYPE,AGE_GRP,APLY_TYPE2, CCI_GRP,COUNT(DISTINCT INDI_DSCM_NO) AS G_PAT
FROM DB.LUNG_CCI_TBNYBASE_ID4 GROUP BY  SEX_TYPE,AGE_GRP,APLY_TYPE2, CCI_GRP; QUIT;
PROC SQL; CREATE TABLE TABLE2C AS SELECT 
SEX_TYPE,AGE_GRP65,APLY_TYPE2,CCI_GRP, COUNT(DISTINCT INDI_DSCM_NO) AS G_PAT
FROM DB.LUNG_CCI_TBNYBASE_ID4 GROUP BY   SEX_TYPE,AGE_GRP65,APLY_TYPE2, CCI_GRP; QUIT;


/*BY DIAGNOSIS YEAR*/
PROC SQL; CREATE TABLE BF_N  AS SELECT 
SEX_TYPE,AGE_GRP65,ABS(DIFF_Y) AS DIFF_Y,CCI_GRP, COUNT(DISTINCT INDI_DSCM_NO) AS BF_N
FROM DB.LUNG_CCI_TBNYBASE_BF_N3 GROUP BY SEX_TYPE,AGE_GRP65,DIFF_Y,CCI_GRP; QUIT;
PROC SQL; CREATE TABLE BF_Y  AS SELECT 
SEX_TYPE,AGE_GRP65,ABS(DIFF_Y) AS DIFF_Y,CCI_GRP, COUNT(DISTINCT INDI_DSCM_NO) AS BF_Y
FROM DB.LUNG_CCI_TBNYBASE_BF_Y3 GROUP BY SEX_TYPE,AGE_GRP65,DIFF_Y,CCI_GRP; QUIT;

PROC SQL; CREATE TABLE EQ_N  AS SELECT 
SEX_TYPE,AGE_GRP65,DIFF_Y,CCI_GRP,COUNT(DISTINCT INDI_DSCM_NO) AS EQ_N
FROM DB.LUNG_CCI_TBNYBASE_EQ_N3 GROUP BY SEX_TYPE,AGE_GRP65,DIFF_Y,CCI_GRP; QUIT;
PROC SQL; CREATE TABLE EQ_Y  AS SELECT 
SEX_TYPE,AGE_GRP65,DIFF_Y,CCI_GRP,COUNT(DISTINCT INDI_DSCM_NO) AS EQ_Y
FROM DB.LUNG_CCI_TBNYBASE_EQ_Y3 GROUP BY SEX_TYPE,AGE_GRP65,DIFF_Y,CCI_GRP; QUIT;

PROC SQL; CREATE TABLE AF_N  AS SELECT 
SEX_TYPE,AGE_GRP65,DIFF_Y,CCI_GRP,COUNT(DISTINCT INDI_DSCM_NO) AS AF_N
FROM DB.LUNG_CCI_TBNYBASE_AF_N3 GROUP BY SEX_TYPE,AGE_GRP65,DIFF_Y,CCI_GRP; QUIT;
PROC SQL; CREATE TABLE AF_Y  AS SELECT 
SEX_TYPE,AGE_GRP65,DIFF_Y,CCI_GRP,COUNT(DISTINCT INDI_DSCM_NO) AS AF_Y
FROM DB.LUNG_CCI_TBNYBASE_AF_Y3 GROUP BY SEX_TYPE,AGE_GRP65,DIFF_Y,CCI_GRP; QUIT;

PROC SQL; CREATE TABLE NEVER  AS SELECT 
SEX_TYPE,AGE_GRP65,DIFF_Y,CCI_GRP,COUNT(DISTINCT INDI_DSCM_NO) AS NEVER
FROM DB.LUNG_CCI_TBNYBASE_NEVER3 GROUP BY SEX_TYPE,AGE_GRP65,DIFF_Y,CCI_GRP; QUIT;

PROC SORT DATA=BF_N; BY  SEX_TYPE  AGE_GRP65 DIFF_Y CCI_GRP; RUN;
PROC SORT DATA=BF_Y; BY  SEX_TYPE  AGE_GRP65 DIFF_Y CCI_GRP; RUN;
PROC SORT DATA=EQ_N; BY  SEX_TYPE  AGE_GRP65 DIFF_Y CCI_GRP; RUN;
PROC SORT DATA=EQ_Y; BY  SEX_TYPE  AGE_GRP65 DIFF_Y CCI_GRP; RUN;
PROC SORT DATA=AF_N; BY  SEX_TYPE  AGE_GRP65 DIFF_Y CCI_GRP; RUN;
PROC SORT DATA=AF_Y; BY  SEX_TYPE  AGE_GRP65 DIFF_Y CCI_GRP; RUN;
PROC SORT DATA=NEVER; BY  SEX_TYPE  AGE_GRP65 DIFF_Y CCI_GRP; RUN;
DATA TABLE3; MERGE BF_N BF_Y  EQ_N  EQ_Y AF_N AF_Y NEVER; BY SEX_TYPE AGE_GRP65 DIFF_Y CCI_GRP; RUN;


/******************TABLE4***************/
PROC SQL; CREATE TABLE TABLE4_BFC AS SELECT 
SEX_TYPE,AGE_GRP65,DIFF_Y,CCI_GRP,
MEAN(EVRDY_LIFE_ARFF_SCOR) AS MEAN_EVRDY_LIFE,MEDIAN(EVRDY_LIFE_ARFF_SCOR) AS MED_EVRDY_LIFE,/*MIN(EVRDY_LIFE_ARFF_SCOR) AS MIN_EVRDY_LIFE,MAX(EVRDY_LIFE_ARFF_SCOR) AS MAX_EVRDY_LIFE,*/
MEAN(PCT_ARFF_SCOR) AS MEAN_PCT,MEDIAN(PCT_ARFF_SCOR) AS MED_PCT,/*MIN(PCT_ARFF_SCOR) AS MIN_PCT,MAX(PCT_ARFF_SCOR) AS MAX_PCT,*/
MEAN(BHVR_ARFF_SCOR) AS MEAN_BHVR,MEDIAN(BHVR_ARFF_SCOR) AS MED_BHVR,/*MIN(BHVR_ARFF_SCOR) AS MIN_BHVR,MAX(BHVR_ARFF_SCOR) AS MAX_BHVR,*/
MEAN(TNDNC_ARFF_SCOR) AS MEAN_TNDNC,MEDIAN(TNDNC_ARFF_SCOR) AS MED_TNDNC,/*MIN(TNDNC_ARFF_SCOR) AS MIN_TNDNC,MAX(TNDNC_ARFF_SCOR) AS MAX_TNDNC,*/
MEAN(REHBT_ARFF_SCOR) AS MEAN_REHBT,MEDIAN(REHBT_ARFF_SCOR) AS MED_REHBT,/*MIN(REHBT_ARFF_SCOR) AS MIN_REHBT,MAX(REHBT_ARFF_SCOR) AS MAX_REHBT,*/
MEAN(RCG_RCGT_SCOR) AS MEAN_RCG_RCGT,MEDIAN(RCG_RCGT_SCOR) AS MED_RCG_RCGT/*MIN(RCG_RCGT_SCOR) AS MIN_RCG_RCGT,MAX(RCG_RCGT_SCOR) AS MAX_RCG_RCGT*/
FROM DB.LUNG_CCI_TBNYBASE_BF
GROUP BY SEX_TYPE,AGE_GRP65,DIFF_Y,CCI_GRP; QUIT;

PROC SQL; CREATE TABLE TABLE4_EQC AS SELECT 
SEX_TYPE,AGE_GRP65,DIFF_Y,CCI_GRP,
MEAN(EVRDY_LIFE_ARFF_SCOR) AS MEAN_EVRDY_LIFE,MEDIAN(EVRDY_LIFE_ARFF_SCOR) AS MED_EVRDY_LIFE,/*MIN(EVRDY_LIFE_ARFF_SCOR) AS MIN_EVRDY_LIFE,MAX(EVRDY_LIFE_ARFF_SCOR) AS MAX_EVRDY_LIFE,*/
MEAN(PCT_ARFF_SCOR) AS MEAN_PCT,MEDIAN(PCT_ARFF_SCOR) AS MED_PCT,/*MIN(PCT_ARFF_SCOR) AS MIN_PCT,MAX(PCT_ARFF_SCOR) AS MAX_PCT,*/
MEAN(BHVR_ARFF_SCOR) AS MEAN_BHVR,MEDIAN(BHVR_ARFF_SCOR) AS MED_BHVR,/*MIN(BHVR_ARFF_SCOR) AS MIN_BHVR,MAX(BHVR_ARFF_SCOR) AS MAX_BHVR,*/
MEAN(TNDNC_ARFF_SCOR) AS MEAN_TNDNC,MEDIAN(TNDNC_ARFF_SCOR) AS MED_TNDNC,/*MIN(TNDNC_ARFF_SCOR) AS MIN_TNDNC,MAX(TNDNC_ARFF_SCOR) AS MAX_TNDNC,*/
MEAN(REHBT_ARFF_SCOR) AS MEAN_REHBT,MEDIAN(REHBT_ARFF_SCOR) AS MED_REHBT,/*MIN(REHBT_ARFF_SCOR) AS MIN_REHBT,MAX(REHBT_ARFF_SCOR) AS MAX_REHBT,*/
MEAN(RCG_RCGT_SCOR) AS MEAN_RCG_RCGT,MEDIAN(RCG_RCGT_SCOR) AS MED_RCG_RCGT/*MIN(RCG_RCGT_SCOR) AS MIN_RCG_RCGT,MAX(RCG_RCGT_SCOR) AS MAX_RCG_RCGT*/
FROM DB.LUNG_CCI_TBNYBASE_EQ
GROUP BY SEX_TYPE,AGE_GRP65,DIFF_Y,CCI_GRP; QUIT;

PROC SQL; CREATE TABLE TABLE4_AFC AS SELECT 
SEX_TYPE,AGE_GRP65,DIFF_Y,CCI_GRP,
MEAN(EVRDY_LIFE_ARFF_SCOR) AS MEAN_EVRDY_LIFE,MEDIAN(EVRDY_LIFE_ARFF_SCOR) AS MED_EVRDY_LIFE,/*MIN(EVRDY_LIFE_ARFF_SCOR) AS MIN_EVRDY_LIFE,MAX(EVRDY_LIFE_ARFF_SCOR) AS MAX_EVRDY_LIFE,*/
MEAN(PCT_ARFF_SCOR) AS MEAN_PCT,MEDIAN(PCT_ARFF_SCOR) AS MED_PCT,/*MIN(PCT_ARFF_SCOR) AS MIN_PCT,MAX(PCT_ARFF_SCOR) AS MAX_PCT,*/
MEAN(BHVR_ARFF_SCOR) AS MEAN_BHVR,MEDIAN(BHVR_ARFF_SCOR) AS MED_BHVR,/*MIN(BHVR_ARFF_SCOR) AS MIN_BHVR,MAX(BHVR_ARFF_SCOR) AS MAX_BHVR,*/
MEAN(TNDNC_ARFF_SCOR) AS MEAN_TNDNC,MEDIAN(TNDNC_ARFF_SCOR) AS MED_TNDNC,/*MIN(TNDNC_ARFF_SCOR) AS MIN_TNDNC,MAX(TNDNC_ARFF_SCOR) AS MAX_TNDNC,*/
MEAN(REHBT_ARFF_SCOR) AS MEAN_REHBT,MEDIAN(REHBT_ARFF_SCOR) AS MED_REHBT,/*MIN(REHBT_ARFF_SCOR) AS MIN_REHBT,MAX(REHBT_ARFF_SCOR) AS MAX_REHBT,*/
MEAN(RCG_RCGT_SCOR) AS MEAN_RCG_RCGT,MEDIAN(RCG_RCGT_SCOR) AS MED_RCG_RCGT/*MIN(RCG_RCGT_SCOR) AS MIN_RCG_RCGT,MAX(RCG_RCGT_SCOR) AS MAX_RCG_RCGT*/
FROM DB.LUNG_CCI_TBNYBASE_AF
GROUP BY SEX_TYPE,AGE_GRP65,DIFF_Y,CCI_GRP; QUIT;

/******************TABLE5***************/

PROC SQL; CREATE TABLE TABLE5_BFC AS SELECT 
SEX_TYPE,AGE_GRP65,DIFF_Y,CCI_GRP,
MEAN(EVRDY_LIFE_ARFF_SCOR) AS MEAN_EVRDY_LIFE,MEDIAN(EVRDY_LIFE_ARFF_SCOR) AS MED_EVRDY_LIFE,/*MIN(EVRDY_LIFE_ARFF_SCOR) AS MIN_EVRDY_LIFE,MAX(EVRDY_LIFE_ARFF_SCOR) AS MAX_EVRDY_LIFE,*/
MEAN(PCT_ARFF_SCOR) AS MEAN_PCT,MEDIAN(PCT_ARFF_SCOR) AS MED_PCT,/*MIN(PCT_ARFF_SCOR) AS MIN_PCT,MAX(PCT_ARFF_SCOR) AS MAX_PCT,*/
MEAN(BHVR_ARFF_SCOR) AS MEAN_BHVR,MEDIAN(BHVR_ARFF_SCOR) AS MED_BHVR,/*MIN(BHVR_ARFF_SCOR) AS MIN_BHVR,MAX(BHVR_ARFF_SCOR) AS MAX_BHVR,*/
MEAN(TNDNC_ARFF_SCOR) AS MEAN_TNDNC,MEDIAN(TNDNC_ARFF_SCOR) AS MED_TNDNC,/*MIN(TNDNC_ARFF_SCOR) AS MIN_TNDNC,MAX(TNDNC_ARFF_SCOR) AS MAX_TNDNC,*/
MEAN(REHBT_ARFF_SCOR) AS MEAN_REHBT,MEDIAN(REHBT_ARFF_SCOR) AS MED_REHBT,/*MIN(REHBT_ARFF_SCOR) AS MIN_REHBT,MAX(REHBT_ARFF_SCOR) AS MAX_REHBT,*/
MEAN(RCG_RCGT_SCOR) AS MEAN_RCG_RCGT,MEDIAN(RCG_RCGT_SCOR) AS MED_RCG_RCGT/*MIN(RCG_RCGT_SCOR) AS MIN_RCG_RCGT,MAX(RCG_RCGT_SCOR) AS MAX_RCG_RCGT*/
FROM DB.LUNG_CCI_TBNYBASE_BF_Y3
GROUP BY SEX_TYPE,AGE_GRP65,DIFF_Y,CCI_GRP; QUIT;

PROC SQL; CREATE TABLE TABLE5_EQC AS SELECT 
SEX_TYPE,AGE_GRP65,DIFF_Y,CCI_GRP,
MEAN(EVRDY_LIFE_ARFF_SCOR) AS MEAN_EVRDY_LIFE,MEDIAN(EVRDY_LIFE_ARFF_SCOR) AS MED_EVRDY_LIFE,/*MIN(EVRDY_LIFE_ARFF_SCOR) AS MIN_EVRDY_LIFE,MAX(EVRDY_LIFE_ARFF_SCOR) AS MAX_EVRDY_LIFE,*/
MEAN(PCT_ARFF_SCOR) AS MEAN_PCT,MEDIAN(PCT_ARFF_SCOR) AS MED_PCT,/*MIN(PCT_ARFF_SCOR) AS MIN_PCT,MAX(PCT_ARFF_SCOR) AS MAX_PCT,*/
MEAN(BHVR_ARFF_SCOR) AS MEAN_BHVR,MEDIAN(BHVR_ARFF_SCOR) AS MED_BHVR,/*MIN(BHVR_ARFF_SCOR) AS MIN_BHVR,MAX(BHVR_ARFF_SCOR) AS MAX_BHVR,*/
MEAN(TNDNC_ARFF_SCOR) AS MEAN_TNDNC,MEDIAN(TNDNC_ARFF_SCOR) AS MED_TNDNC,/*MIN(TNDNC_ARFF_SCOR) AS MIN_TNDNC,MAX(TNDNC_ARFF_SCOR) AS MAX_TNDNC,*/
MEAN(REHBT_ARFF_SCOR) AS MEAN_REHBT,MEDIAN(REHBT_ARFF_SCOR) AS MED_REHBT,/*MIN(REHBT_ARFF_SCOR) AS MIN_REHBT,MAX(REHBT_ARFF_SCOR) AS MAX_REHBT,*/
MEAN(RCG_RCGT_SCOR) AS MEAN_RCG_RCGT,MEDIAN(RCG_RCGT_SCOR) AS MED_RCG_RCGT/*MIN(RCG_RCGT_SCOR) AS MIN_RCG_RCGT,MAX(RCG_RCGT_SCOR) AS MAX_RCG_RCGT*/
FROM DB.LUNG_CCI_TBNYBASE_EQ_Y3
GROUP BY SEX_TYPE,AGE_GRP65,DIFF_Y,CCI_GRP; QUIT;

PROC SQL; CREATE TABLE TABLE5_AFC AS SELECT 
SEX_TYPE,AGE_GRP65,DIFF_Y,CCI_GRP,
MEAN(EVRDY_LIFE_ARFF_SCOR) AS MEAN_EVRDY_LIFE,MEDIAN(EVRDY_LIFE_ARFF_SCOR) AS MED_EVRDY_LIFE,/*MIN(EVRDY_LIFE_ARFF_SCOR) AS MIN_EVRDY_LIFE,MAX(EVRDY_LIFE_ARFF_SCOR) AS MAX_EVRDY_LIFE,*/
MEAN(PCT_ARFF_SCOR) AS MEAN_PCT,MEDIAN(PCT_ARFF_SCOR) AS MED_PCT,/*MIN(PCT_ARFF_SCOR) AS MIN_PCT,MAX(PCT_ARFF_SCOR) AS MAX_PCT,*/
MEAN(BHVR_ARFF_SCOR) AS MEAN_BHVR,MEDIAN(BHVR_ARFF_SCOR) AS MED_BHVR,/*MIN(BHVR_ARFF_SCOR) AS MIN_BHVR,MAX(BHVR_ARFF_SCOR) AS MAX_BHVR,*/
MEAN(TNDNC_ARFF_SCOR) AS MEAN_TNDNC,MEDIAN(TNDNC_ARFF_SCOR) AS MED_TNDNC,/*MIN(TNDNC_ARFF_SCOR) AS MIN_TNDNC,MAX(TNDNC_ARFF_SCOR) AS MAX_TNDNC,*/
MEAN(REHBT_ARFF_SCOR) AS MEAN_REHBT,MEDIAN(REHBT_ARFF_SCOR) AS MED_REHBT,/*MIN(REHBT_ARFF_SCOR) AS MIN_REHBT,MAX(REHBT_ARFF_SCOR) AS MAX_REHBT,*/
MEAN(RCG_RCGT_SCOR) AS MEAN_RCG_RCGT,MEDIAN(RCG_RCGT_SCOR) AS MED_RCG_RCGT/*MIN(RCG_RCGT_SCOR) AS MIN_RCG_RCGT,MAX(RCG_RCGT_SCOR) AS MAX_RCG_RCGT*/
FROM DB.LUNG_CCI_TBNYBASE_AF_Y3
GROUP BY SEX_TYPE,AGE_GRP65,DIFF_Y,CCI_GRP; QUIT;


/*********TABLE6**********/
PROC SQL; CREATE TABLE TABLE5_BF_Y1 AS SELECT 
SEX_TYPE,AGE_GRP65,GJU_RCGT_GRADE_CD,DIFF_Y,CCI_GRP,COUNT(INDI_DSCM_NO) AS N
FROM DB.LUNG_CCI_TBNYBASE_BF_Y3 GROUP BY SEX_TYPE,AGE_GRP65,GJU_RCGT_GRADE_CD,DIFF_Y,CCI_GRP; QUIT;
PROC SQL; CREATE TABLE TABLE5_EQ_Y1 AS SELECT 
SEX_TYPE,AGE_GRP65,GJU_RCGT_GRADE_CD,DIFF_Y,CCI_GRP,COUNT(INDI_DSCM_NO) AS N
FROM DB.LUNG_CCI_TBNYBASE_EQ_Y3 GROUP BY SEX_TYPE,AGE_GRP65,GJU_RCGT_GRADE_CD,DIFF_Y,CCI_GRP; QUIT;
PROC SQL; CREATE TABLE TABLE5_AF_Y1 AS SELECT 
SEX_TYPE,AGE_GRP65,GJU_RCGT_GRADE_CD,DIFF_Y,CCI_GRP,COUNT(INDI_DSCM_NO) AS N
FROM DB.LUNG_CCI_TBNYBASE_AF_Y3 GROUP BY SEX_TYPE,AGE_GRP65,GJU_RCGT_GRADE_CD,DIFF_Y,CCI_GRP; QUIT;


PROC FREQ DATA=DB.LUNG_CCI_TBNYBASE_BF; TABLE APLY_Y*CCI_GRP/NOCOL NOROW NOPERCENT;RUN;
PROC FREQ DATA=DB.LUNG_CCI_TBNYBASE_BF_N3; TABLE APLY_Y*CCI_GRP/NOCOL NOROW NOPERCENT;RUN;
PROC FREQ DATA=DB.LUNG_CCI_TBNYBASE_BF_Y3; TABLE APLY_Y*CCI_GRP/NOCOL NOROW NOPERCENT;RUN;

PROC FREQ DATA=DB.LUNG_CCI_TBNYBASE_EQ; TABLE APLY_Y*CCI_GRP/NOCOL NOROW NOPERCENT;RUN;
PROC FREQ DATA=DB.LUNG_CCI_TBNYBASE_EQ_N3; TABLE APLY_Y*CCI_GRP/NOCOL NOROW NOPERCENT;RUN;
PROC FREQ DATA=DB.LUNG_CCI_TBNYBASE_EQ_Y3; TABLE APLY_Y/NOCOL NOROW NOPERCENT;RUN;

PROC FREQ DATA=DB.LUNG_CCI_TBNYBASE_AF; TABLE APLY_Y*CCI_GRP/NOCOL NOROW NOPERCENT;RUN;
PROC FREQ DATA=DB.LUNG_CCI_TBNYBASE_AF_N3; TABLE APLY_Y*CCI_GRP/NOCOL NOROW NOPERCENT;RUN;
PROC FREQ DATA=DB.LUNG_CCI_TBNYBASE_AF_Y3; TABLE APLY_Y*CCI_GRP/NOCOL NOROW NOPERCENT;RUN;

/*********TABLE7**********/

PROC SQL; CREATE TABLE TABLE7_BF_YC AS SELECT 
 SEX_TYPE,AGE_GRP65,CCI_GRP,
MEAN(VALID_TERM) AS MEAN_EVRDY_LIFE,MEDIAN(VALID_TERM) AS MED_EVRDY_LIFE,
MIN(VALID_TERM) AS MIN_EVRDY_LIFE,MAX(VALID_TERM) AS MAX_EVRDY_LIFE
FROM DB.LUNG_CCI_TBNYBASE_BF_Y3
GROUP BY   SEX_TYPE,AGE_GRP65,CCI_GRP; QUIT;

PROC SQL; CREATE TABLE TABLE7_EQ_YC AS SELECT 
 SEX_TYPE,AGE_GRP65,CCI_GRP,
MEAN(VALID_TERM) AS MEAN_EVRDY_LIFE,MEDIAN(VALID_TERM) AS MED_EVRDY_LIFE,
MIN(VALID_TERM) AS MIN_EVRDY_LIFE,MAX(VALID_TERM) AS MAX_EVRDY_LIFE
FROM DB.LUNG_CCI_TBNYBASE_EQ_Y3
GROUP BY   SEX_TYPE,AGE_GRP65,CCI_GRP; QUIT;

PROC SQL; CREATE TABLE TABLE7_AF_YC AS SELECT 
 SEX_TYPE,AGE_GRP65,CCI_GRP,
MEAN(VALID_TERM) AS MEAN_EVRDY_LIFE,MEDIAN(VALID_TERM) AS MED_EVRDY_LIFE,
MIN(VALID_TERM) AS MIN_EVRDY_LIFE,MAX(VALID_TERM) AS MAX_EVRDY_LIFE
FROM DB.LUNG_CCI_TBNYBASE_AF_Y3
GROUP BY   SEX_TYPE,AGE_GRP65,CCI_GRP; QUIT;


/*********TABLE8**********/
PROC SQL; CREATE TABLE TABLE8_BF_YC AS SELECT 
 SEX_TYPE,AGE_GRP65,DIFF_Y,CCI_GRP,
MEAN(VALID_TERM) AS MEAN_EVRDY_LIFE,MEDIAN(VALID_TERM) AS MED_EVRDY_LIFE,
MIN(VALID_TERM) AS MIN_EVRDY_LIFE,MAX(VALID_TERM) AS MAX_EVRDY_LIFE
FROM DB.LUNG_CCI_TBNYBASE_BF_Y3
GROUP BY   SEX_TYPE,AGE_GRP65,DIFF_Y,CCI_GRP; QUIT;

PROC SQL; CREATE TABLE TABLE8_EQ_YC AS SELECT 
 SEX_TYPE,AGE_GRP65,DIFF_Y,CCI_GRP,
MEAN(VALID_TERM) AS MEAN_EVRDY_LIFE,MEDIAN(VALID_TERM) AS MED_EVRDY_LIFE,
MIN(VALID_TERM) AS MIN_EVRDY_LIFE,MAX(VALID_TERM) AS MAX_EVRDY_LIFE
FROM DB.LUNG_CCI_TBNYBASE_EQ_Y3
GROUP BY   SEX_TYPE,AGE_GRP65,DIFF_Y,CCI_GRP; QUIT;

PROC SQL; CREATE TABLE TABLE8_AF_YC AS SELECT 
 SEX_TYPE,AGE_GRP65,DIFF_Y,CCI_GRP,
MEAN(VALID_TERM) AS MEAN_EVRDY_LIFE,MEDIAN(VALID_TERM) AS MED_EVRDY_LIFE,
MIN(VALID_TERM) AS MIN_EVRDY_LIFE,MAX(VALID_TERM) AS MAX_EVRDY_LIFE
FROM DB.LUNG_CCI_TBNYBASE_AF_Y3
GROUP BY   SEX_TYPE,AGE_GRP65,DIFF_Y,CCI_GRP; QUIT;