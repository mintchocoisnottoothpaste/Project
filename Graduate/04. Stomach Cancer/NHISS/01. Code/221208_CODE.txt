/* version1.0   폐암 코드 바탕으로 위암환자 재 선택 2022-11-10*/
/* version1.01  대상자 2010-2019 한정 2022-11-15*/

libname raw "/userdata08/room586/data_source/user_data"; 
libname db "/userdata08/room586/data_out/data_store";
libname db_out "/userdata08/room586/data_out/data_store/db_out";

/****** STEP1. T20에서 위암 정의 가능한 환자 추출 ******/
%MACRO MONTHLY(STRT, STP);
%DO YM=&STRT. %TO &STP.;
%IF %SUBSTR(&YM,5)=13 %THEN %LET YM=%EVAL(%SUBSTR(&YM,1,4)+1)01;
%IF &YM.=&STRT. %THEN %DO; %LET CREATE_OR_INSERT=CREATE TABLE; %LET AS_YN=AS; %END;
%ELSE %DO; %LET CREATE_OR_INSERT=INSERT INTO; %LET AS_YN=; %END;
PROC SQL; &CREATE_OR_INSERT. TARGET_T20 &AS_YN.
SELECT DISTINCT A.INDI_DSCM_NO, CMN_KEY
	, SICK_SYM1, SICK_SYM2, SICK_SYM3, SICK_SYM4, SICK_SYM5
	, MDCARE_STRT_DT, FORM_CD, SPCF_SYM_TYPE
FROM RAW.TARGET_REQ202101412 AS A
INNER JOIN RAW.T20_&YM. AS B
ON A.INDI_DSCM_NO=B.INDI_DSCM_NO
WHERE B.ED_RC_TOT_AMT^=. AND B.ED_RC_TOT_AMT^=0 AND FORM_CD IN ('02','03')
	AND CASE_YN=1
; QUIT;
%END; %MEND MONTHLY; 
%MONTHLY(STRT=200201, STP=202012);


/****** STEP2. T40에서 위암 정의 가능한 환자 추출 ******/
%MACRO MONTHLY(STRT, STP);
%DO YM=&STRT. %TO &STP.;
%IF %SUBSTR(&YM,5)=13 %THEN %LET YM=%EVAL(%SUBSTR(&YM,1,4)+1)01;
%IF &YM.=&STRT. %THEN %DO; %LET CREATE_OR_INSERT=CREATE TABLE; %LET AS_YN=AS; %END;
%ELSE %DO; %LET CREATE_OR_INSERT=INSERT INTO; %LET AS_YN=; %END;
PROC SQL; &CREATE_OR_INSERT. TARGET_T40 &AS_YN.
SELECT DISTINCT B.CMN_KEY, B.MCEX_SICK_SYM, B.SICK_CLSF_TYPE
FROM TARGET_T20 AS A
INNER JOIN RAW.T40_&YM. AS B
ON A.CMN_KEY=B.CMN_KEY
WHERE B.SICK_CLSF_TYPE^='3'
; QUIT;
%END; %MEND MONTHLY; 
%MONTHLY(STRT=200201, STP=202012);

/****** STEP3. 위암환자 대상자 정의를 위한 RAW_DB 구축 ******/
PROC SORT DATA=TARGET_T20; BY CMN_KEY; RUN;
PROC SORT DATA=TARGET_T40; BY CMN_KEY; RUN;
DATA DB.TARGET_RAW; MERGE TARGET_T20 (IN=A) TARGET_T40 (IN=B); BY CMN_KEY; IF A=1 AND B=1; RUN;
PROC SORT DATA=DB.TARGET_RAW; by INDI_DSCM_NO MDCARE_STRT_DT; run;


/****** STEP4. 대상자 조작적 정의 ******/
/*DB.TARGET_RAW에서 C코드로 산정특례 받은 기록만 선택*/
PROC SQL;
CREATE TABLE VC_RAW AS
SELECT DISTINCT *
FROM DB.TARGET_RAW
WHERE SUBSTR(MCEX_SICK_SYM,1,1) IN ('C')
AND SUBSTR(SPCF_SYM_TYPE,1,4) IN ('V011', 'V027', 'V193', 'V194')
ORDER BY INDI_DSCM_NO, MDCARE_STRT_DT;
QUIT;

DATA FIRST_VC_CMN(KEEP=CMN_KEY);
SET VC_RAW;IF FIRST.INDI_DSCM_NO; BY INDI_DSCM_NO; RUN;

PROC SQL;
CREATE TABLE FIRST_VC_RAW AS
SELECT *
FROM VC_RAW AS A
INNER JOIN FIRST_VC_CMN AS B
ON A.CMN_KEY=B.CMN_KEY
;QUIT;

/*[1]  최초로 암 산정특레 받은 건이 위암인 환자의 ID 및 요양개시일*/

PROC SQL; 
CREATE TABLE GC_INDI AS
SELECT DISTINCT INDI_DSCM_NO, INPUT(MDCARE_STRT_DT,yymmdd8.) AS MS_DATE
FROM FIRST_VC_RAW
WHERE SUBSTR(MCEX_SICK_SYM,1,3) IN ('C16')
ORDER BY INDI_DSCM_NO
;QUIT;

PROC SQL; 
CREATE TABLE NGC_INDI AS
SELECT DISTINCT INDI_DSCM_NO, INPUT(MDCARE_STRT_DT,yymmdd8.) AS MS_DATE
FROM FIRST_VC_RAW
WHERE SUBSTR(MCEX_SICK_SYM,1,3) NOT IN ('C16')
ORDER BY INDI_DSCM_NO
;QUIT;


/*[2] 입원 1회 이상인 환자의 ID 및 최초 입원일  */

PROC SQL; 
CREATE TABLE IN_TARGET AS
SELECT DISTINCT INDI_DSCM_NO, INPUT(MDCARE_STRT_DT,yymmdd8.) AS MS_DATE
FROM DB.TARGET_RAW
WHERE SUBSTR(MCEX_SICK_SYM,1,3) IN ('C16') AND FORM_CD IN ('02')
ORDER BY INDI_DSCM_NO, MS_DATE
;QUIT;

DATA IN_INDI; SET IN_TARGET; BY INDI_DSCM_NO; IF FIRST.INDI_DSCM_NO; RUN; /*353,441*/


/*[3] 외래 365일 이내 3회 이상 환자의 ID 및 최초 외래일*/
PROC SQL; 
CREATE TABLE IN_TARGET AS
SELECT DISTINCT INDI_DSCM_NO, INPUT(MDCARE_STRT_DT,yymmdd8.) AS MS_DATE
FROM DB.TARGET_RAW
WHERE SUBSTR(MCEX_SICK_SYM,1,3) IN ('C16') AND FORM_CD IN ('03')
ORDER BY INDI_DSCM_NO, MS_DATE
;QUIT;

/*외래 간 간격 계산*/
DATA OUT_DIFF; SET IN_TARGET; BY INDI_DSCM_NO;
DIFF1=DIF(MS_DATE);
DIFF2=DIF2(MS_DATE);
IF FIRST.INDI_DSCM_NO 
THEN 
DO; DIFF1=.; DIFF2=.; N=1; 
END;
ELSE N+1;
IF N+2 
THEN DIFF2=.;
RUN;

/*3회 이상 방문 & 간격이 365일 이하이면서 최초인 것*/
PROC SQL;
CREATE TABLE OUT_DIFF365 AS
SELECT INDI_DSCM_NO, MS_DATE, DIFF2, N
FROM OUT_DIFF
WHERE N >=3 AND DIFF2 <=365
; QUIT;
DATA OUT_FIRSTDIFF365; SET OUT_DIFF365; IF FIRST.INDI_DSCM_NO; BY INDI_DSCM_NO; RUN; /*329,252*/

/*최초 외래일의 요양개시일자를 선택*/
PROC SQL;
CREATE TABLE OUT_INDI AS
SELECT A.INDI_DSCM_NO, B.MS_DATE
FROM OUT_FIRSTDIFF365 AS A
INNER JOIN OUT_DIFF AS B
ON A.INDI_DSCM_NO = B.INDI_DSCM_NO AND(A.N-2)=B.N
;QUIT;


/*[1],[2],[3] 시간 변수 결합*/

PROC SORT DATA= IN_INDI; BY INDI_DSCM_NO; RUN;
PROC SORT DATA= OUT_INDI; BY INDI_DSCM_NO; RUN;

DATA TARGET;
MERGE GC_INDI    (RENAME= (MS_DATE= DT_VCODE) IN =A)
			IN_INDI     (RENAME= (MS_DATE= DT_IN) IN =B)
			OUT_INDI (RENAME= (MS_DATE=  DT_OUT) IN =C)
			NGC_INDI (RENAME= (MS_DATE= NGC_STRT_DT) IN =D)
;
BY INDI_DSCM_NO;
IF A=1 OR B=1 OR C=1
; RUN;


/*[1],[2],[3]  중 최초일자 위암 진단일로 선택*/
DATA TARGET_GC_NGC (KEEP=INDI_DSCM_NO GC_STRT_DT NGC_STRT_DT); SET TARGET;
GC_STRT_DT = MIN(DT_VCODE,DT_IN,DT_OUT)
;RUN;


/*위암 진단일과 위암 이외 다른 암종 진단일을 비교하여 INDICATOR  생성*/
DATA TARGET_INDI;
SET TARGET_GC_NGC;
IF (NGC_STRT_DT^=. AND NGC_STRT_DT<GC_STRT_DT) THEN PRE_C =1;
ELSE IF (NGC_STRT_DT^=. AND NGC_STRT_DT>=GC_STRT_DT) THEN PRE_C =0;
ELSE IF (NGC_STRT_DT=.) THEN PRE_C=0
;RUN;


/*위암 진단일을 기준으로 연도별 신규환자 발생 데이터셋 만들기*/

%MACRO TARGET_YEAR;
%DO YEAR=2008 %TO 2020;
PROC SQL;
CREATE TABLE DB.TARGET_&YEAR. AS
SELECT DISTINCT INDI_DSCM_NO, PRE_C, YEAR(GC_STRT_DT) AS C_YEAR, GC_STRT_DT AS C_DATE
FROM TARGET_INDI
WHERE YEAR(GC_STRT_DT) = &YEAR.
ORDER BY INDI_DSCM_NO
;QUIT;

/*자격정보 붙이기 : 성별 연령 소득분위 거주지*/
PROC SQL; 
CREATE TABLE DB.TG_BFC_&YEAR. AS
SELECT DISTINCT A.*, B.SEX_TYPE, C_YEAR-INPUT(B.BYEAR,10.) AS C_AGE, CEIL(B.CALC_CTRB_VTILE_FD/4) AS INC_QUINTILE, SUBSTR(B.RVSN_ADDR_CD,1,2) AS SIDO_CD
FROM DB.TARGET_&YEAR. AS A
LEFT JOIN RAW.BFC_&YEAR. AS B
ON A.INDI_DSCM_NO = B.INDI_DSCM_NO
WHERE B.SEX_TYPE IS NOT NULL AND B.BYEAR IS NOT NULL AND RVSN_ADDR_CD IS NOT NULL 
; QUIT;

PROC SQL; 
INSERT INTO PATIENT_NO
SELECT &YEAR. AS YEAR, COUNT(*) AS N, SUM(CASE WHEN PRE_C=0 THEN 1 ELSE 0 END) AS N_0
FROM DB.TG_BFC_&YEAR.; QUIT;

%END;
%MEND TARGET_YEAR;

/*NUM --> num;  lower letter 로 변경해야지 인식함*/
PROC SQL; 
CREATE TABLE PATIENT_NO(
YEAR num, 
N num, 
N_0 num); QUIT;

%TARGET_YEAR;


DATA DB.TARGET_IDBFC; SET DB.TG_BFC_2010-DB.TG_BFC_2019; C_YEAR=YEAR(C_DATE); RUN;

PROC SQL;
CREATE TABLE DB.TG_SEXAGE AS
SELECT DISTINCT C_YEAR, PRE_C, SEX_TYPE, FLOOR(C_AGE/10) AS C_AGEGRP, FLOOR(C_AGE/5) AS C_AGEGRP2, COUNT(DISTINCT INDI_DSCM_NO) AS CNT
FROM DB.TARGET_IDBFC GROUP BY C_YEAR, PRE_C, SEX_TYPE, FLOOR(C_AGE/10), FLOOR(C_AGE/5);QUIT;

PROC SORT DATA=DB.TARGET_IDBFC NODUPKEY; BY INDI_DSCM_NO;RUN;/*333,477*/

/*카테고리별 합계*/

/*proc sql;*/
/*create table sample as*/
/*select C_YEAR, sum(CNT) as numbering*/
/*from DB.TG_SEXAGE*/
/*group by C_YEAR, PRE_C, SEX_TYPE;QUIT;RUN;*/

/*사망일자 붙이기*/
PROC SQL;
CREATE TABLE TARGET_IDBFCDTH AS 
SELECT A.*, INPUT(B.DTH_ASSMD_DT,yymmdd8.) AS DTH_DATE
FROM DB.TARGET_IDBFC AS A LEFT JOIN RAW.DTH AS B
ON A.INDI_DSCM_NO=B.INDI_DSCM_NO
WHERE C_YEAR NOT IN (2020); 
QUIT;/*333,648*/

DATA DB.TARGET_IDBFCDTH; SET TARGET_IDBFCDTH;
FORMAT C_DATE yymmdd10. DTH_DATE yymmdd10.;
IF 65 <= C_AGE THEN C_AGE_GRP1='02. 65+'; ELSE C_AGE_GRP1='01. 65-';
IF 65<= C_AGE <75 THEN C_AGE_GRP2 ='01. 65-74'; 
ELSE IF 75 <=C_AGE<85 THEN C_AGE_GRP2 ='02. 75-84'; 
ELSE IF 85 <= C_AGE THEN C_AGE_GRP2='03. 85+';

ELSE IF 40 <=C_AGE <65 THEN C_AGE_GRP3 ='01. 40-64'; 
ELSE IF 65 <= C_AGE<75 THEN C_AGE_GRP3 ='02. 65-74'; 
ELSE IF 75<= C_AGE THEN C_AGE_GRP3 ='03. 75+'; 

IF 2010 <=C_YEAR <= 2011 THEN C_YEAR_GRP1 = '01. 2010-2011';
ELSE IF 2012 <=C_YEAR <= 2013 THEN C_YEAR_GRP1 = '01. 2012-2013';
ELSE IF 2014 <=C_YEAR <= 2015 THEN C_YEAR_GRP1 = '01. 2014-2015';
ELSE IF 2016 <=C_YEAR <= 2017 THEN C_YEAR_GRP1 = '01. 2016-2017';
ELSE IF 2018 <=C_YEAR <= 2019 THEN C_YEAR_GRP1 = '01. 2018-2019';

IF DTH_DATE^=. THEN DO; SURVTIME=DTH_DATE-C_DATE; DEATH=1; SURVIVAL=0; END;
ELSE IF DTH_DATE=. THEN DO;SURVTIME = INPUT(PUT('20211005',8.), YYMMDD10.)-C_DATE; DEATH=0; SURVIVAL=1; END;
IF SURVTIME <=0 THEN SURVITME = 0.5;

IF DEATH = 1 AND SURVTIME <=365 THEN DO; DEATH_1YR =1; SURVTIME_1YR=SURVTIME; END; 
ELSE IF DEATH = 1 AND SURVTIME >365 THEN DO; DEATH_1YR =0; SURVTIME_1YR=365; END; 
ELSE IF DEATH = 0 AND SURVTIME <=365 THEN DO; DEATH_1YR =0; SURVTIME_1YR=SURVTIME; END; 
ELSE IF DEATH = 0 AND SURVTIME >365 THEN DO; DEATH_1YR =0; SURVTIME_1YR=365; END; 

IF DEATH = 1 AND SURVTIME <=365*2 THEN DO; DEATH_2YR =1; SURVTIME_2YR=SURVTIME; END; 
ELSE IF DEATH = 1 AND SURVTIME >365*2 THEN DO; DEATH_2YR =0; SURVTIME_2YR=365*2; END; 
ELSE IF DEATH = 0 AND SURVTIME <=365*2 THEN DO; DEATH_2YR =0; SURVTIME_2YR=SURVTIME; END; 
ELSE IF DEATH = 0 AND SURVTIME >365*2 THEN DO; DEATH_2YR =0; SURVTIME_2YR=365*2; END; 

IF DEATH = 1 AND SURVTIME <=365*3 THEN DO; DEATH_3YR =1; SURVTIME_3YR=SURVTIME; END; 
ELSE IF DEATH = 1 AND SURVTIME >365*3 THEN DO; DEATH_3YR =0; SURVTIME_3YR=365*3; END; 
ELSE IF DEATH = 0 AND SURVTIME <=365*3 THEN DO; DEATH_3YR =0; SURVTIME_3YR=SURVTIME; END; 
ELSE IF DEATH = 0 AND SURVTIME >365*3 THEN DO; DEATH_3YR =0; SURVTIME_3YR=365*3; END; 

IF DEATH = 1 AND SURVTIME <=365*5 THEN DO; DEATH_5YR =1; SURVTIME_5YR=SURVTIME; END; 
ELSE IF DEATH = 1 AND SURVTIME >365*5 THEN DO; DEATH_5YR =0; SURVTIME_5YR=365*5; END; 
ELSE IF DEATH = 0 AND SURVTIME <=365*5 THEN DO; DEATH_5YR =0; SURVTIME_5YR=SURVTIME; END; 
ELSE IF DEATH = 0 AND SURVTIME >365*5 THEN DO; DEATH_5YR =0; SURVTIME_5YR=365*5; END; 

RUN;


/*-----------------------------------------*/

/*ALL-CAUSE DEATH*/

DATA DB.TARGET_ID; SET DB.TG_BFC_2010-DB.TG_BFC_2019; RUN;

/*UNIQUE PATEITNE : */
PROC SQL; CREATE TABLE ID AS SELECT INDI_DSCM_NO, COUNT(C_DATE) AS N 
FROM DB.TARGET_ID GROUP BY INDI_DSCM_NO; QUIT;

PROC SORT DATA=DB.TARGET_ID; BY INDI_DSCM_NO C_DATE; RUN;
DATA DB.TARGET_ID; SET DB.TARGET_ID; IF FIRST.INDI_DSCM_NO; BY INDI_DSCM_NO;RUN; 

PROC SQL; CREATE TABLE DB.TARGET_DTH AS
SELECT A.*, B.DTH_ASSMD_DT FROM DB.TARGET_ID AS A LEFT JOIN RAW.DTH AS B
ON A.INDI_DSCM_NO=B.INDI_DSCM_NO
WHERE A.INDI_DSCM_NO IS NOT NULL; QUIT;

PROC SORT DATA=DB.TARGET_DTH NODUPKEY; BY INDI_DSCM_NO;RUN; 

DATA DB.TARGET_DTH; SET DB.TARGET_DTH; 
DTH_DATE=INPUT(PUT(DTH_ASSMD_DT,8.),yymmdd8.);
DTH_YEAR=YEAR(DTH_DATE);
RUN;

/*65-74*/
PROC SQL;
CREATE TABLE ID_NO0 AS
SELECT C_YEAR, COUNT(DISTINCT INDI_DSCM_NO) AS CNT
FROM DB.TARGET_DTH
WHERE (C_AGE >=65 AND C_AGE<75) AND PRE_C=0 AND DTH_YEAR not in (2008,2009) AND C_YEAR not in (2008,2009)
GROUP BY C_YEAR;
QUIT;

PROC SQL;
CREATE TABLE ID_NO AS
SELECT C_YEAR, COUNT(DISTINCT INDI_DSCM_NO) AS CNT
FROM DB.TARGET_DTH
WHERE (C_AGE >=65 AND C_AGE<75) AND DTH_YEAR not in (2008,2009) AND C_YEAR not in (2008,2009)
GROUP BY C_YEAR;
QUIT;

/*75-84*/
PROC SQL;
CREATE TABLE ID_NO0 AS
SELECT C_YEAR, COUNT(DISTINCT INDI_DSCM_NO) AS CNT
FROM DB.TARGET_DTH
WHERE (C_AGE >=75 AND C_AGE<85) AND PRE_C=0 AND DTH_YEAR not in (2008,2009) AND C_YEAR not in (2008,2009)
GROUP BY C_YEAR;
QUIT;


PROC SQL;
CREATE TABLE ID_NO AS
SELECT C_YEAR, COUNT(DISTINCT INDI_DSCM_NO) AS CNT
FROM DB.TARGET_DTH
WHERE (C_AGE >=75 AND C_AGE<85) AND DTH_YEAR not in (2008,2009) AND C_YEAR not in (2008,2009)
GROUP BY C_YEAR;
QUIT;


/*85+*/
PROC SQL;
CREATE TABLE ID_NO0 AS
SELECT C_YEAR, COUNT(DISTINCT INDI_DSCM_NO) AS CNT
FROM DB.TARGET_DTH
WHERE (C_AGE >=85) AND PRE_C=0 AND DTH_YEAR not in (2008,2009) AND C_YEAR not in (2008,2009)
GROUP BY C_YEAR;
QUIT;


PROC SQL;
CREATE TABLE ID_NO AS
SELECT C_YEAR, COUNT(DISTINCT INDI_DSCM_NO) AS CNT
FROM DB.TARGET_DTH 
WHERE (C_AGE >=85) AND DTH_YEAR not in (2008,2009) AND C_YEAR not in (2008,2009,2020)
GROUP BY C_YEAR;
QUIT;

/*----------------------------------------------------------------------------------*/
/*----------------------------------------------------------------------------------*/
/*----------------------------------------------------------------------------------*/
/*----------------------------------------------------------------------------------*/

/* version1.0 폐암 코드 바탕으로 위암환자 동반질환변수 생성 2022-11-15*/

libname raw "/userdata08/room586/data_source/user_data"; 
libname db "/userdata08/room586/data_out/data_store";
libname db_out "/userdata08/room586/data_out/data_store/db_out";


/*T20 + T40으로 환자들의 진단 전 2년간 상병불러오기 */
%MACRO TG_PRE2YR_T20;
%DO YR=2010 %TO 2019;
%DO YM=%EVAL(&YR.-3)12 %TO &YR.12; /*암 진단 두 해 전 부터 진단해까지의 진료 데이터 (1개월 여유 둬서 12월 부터)*/
%IF %SUBSTR(&YM,5)=13 %THEN %LET YM=%EVAL(%SUBSTR(&YM,1,4)+1)01;
%IF &YM.=%EVAL(&YR.-3)12 %THEN %DO; %LET CREATE_OR_INSERT=CREATE TABLE; %LET AS_YN=AS; %END;
%ELSE %DO; %LET CREATE_OR_INSERT=INSERT INTO; %LET AS_YN=; %END;
PROC SQL; &CREATE_OR_INSERT. TG_CCI_T20_&YR.  &AS_YN. 
SELECT  A.INDI_DSCM_NO,A.C_DATE, B.CMN_KEY, B.MDCARE_STRT_DT, B.FORM_CD
FROM DB.TG_BFC_&YR. AS A 
INNER JOIN RAW.T20_&YM. AS B
ON A.INDI_DSCM_NO=B.INDI_DSCM_NO
WHERE B.ED_RC_TOT_AMT^=. AND B.ED_RC_TOT_AMT^=0 AND B.FORM_CD IN ('02','03')
AND INTNX('YEAR',A.C_DATE,-2,'S')<=INPUT(B.MDCARE_STRT_DT,yymmdd8.)<= INTNX('DAY',A.C_DATE,-30) ; /*진단일 2년전~30일전 진료기록만*/
; QUIT;
%END; %END; %MEND TG_PRE2YR_T20;
%TG_PRE2YR_T20;

%MACRO TG_PRE2YR_T40;
%DO YR=2010 %TO 2019;
%DO YM=%EVAL(&YR.-3)12 %TO &YR.12; /*암 진단 두 해 전 부터 진단해까지의 진료 데이터 붙이기 (1개월 여유 둬서 12월 부터)*/
%IF %SUBSTR(&YM,5)=13 %THEN %LET YM=%EVAL(%SUBSTR(&YM,1,4)+1)01;
%IF &YM.=%EVAL(&YR.-3)12 %THEN %DO; %LET CREATE_OR_INSERT=CREATE TABLE; %LET AS_YN=AS; %END;
%ELSE %DO; %LET CREATE_OR_INSERT=INSERT INTO; %LET AS_YN=; %END;
PROC SQL; &CREATE_OR_INSERT. TG_CCI_T40_&YR.  &AS_YN. 
SELECT DISTINCT B.CMN_KEY, B.MCEX_SICK_SYM, B.SICK_CLSF_TYPE
FROM TG_CCI_T20_&YR. AS A 
INNER JOIN RAW.T40_&YM. AS B
ON A.CMN_KEY=B.CMN_KEY
WHERE B.SICK_CLSF_TYPE^='3'
; QUIT;
%END;  %END; %MEND TG_PRE2YR_T40;
%TG_PRE2YR_T40;


%MACRO TG_PRE2YR_T2040;
%DO YR=2010 %TO 2019;
PROC SORT DATA=TG_CCI_T20_&YR.; BY CMN_KEY; RUN;
PROC SORT DATA=TG_CCI_T40_&YR.; BY CMN_KEY; RUN;
DATA TG_CMI_T2040_&YR.; MERGE TG_CCI_T20_&YR. (IN=A) TG_CCI_T40_&YR. (IN=B); BY CMN_KEY; IF A=1 AND B=1; RUN;
%END; %MEND TG_PRE2YR_T2040; %TG_PRE2YR_T2040;

DATA TG_CCI_T2040; SET TG_CMI_T2040_2010-TG_CMI_T2040_2019; RUN;


DATA DB.TG_COMO(DROP=MSICK3 MSICK4); SET TG_CCI_T2040;
COMO_DATE = INPUT(MDCARE_STRT_DT,yymmdd8.);
MSICK3 = SUBSTR(MCEX_SICK_SYM,1,3);
MSICK4 = SUBSTR(MCEX_SICK_SYM,1,4);
/*(1) 심근경색 */ IF MSICK3 IN ('I21','I22') OR MSICK4='I252' THEN CCI_1=1;
/*(2) 심부전   */ IF MSICK3 IN ('I43','I50') OR MSICK4 IN ('I099','I110','I130','I132','I255','I420') OR 'I425' <= MSICK4 <= 'I429' THEN CCI_2=1;
/*(3) 말초혈관질환*/ IF MSICK3 IN ('I70','I71') OR MSICK4 IN ('I731','I738','I739','I771','I790','I792','K551','K558','K559','Z958','Z959') THEN CCI_3=1;
/*(4) 뇌혈관질환   */ IF MSICK3 IN ('G45','G46') OR 'I60' <= MSICK3 <= 'I69' OR MSICK4 IN ('H340') THEN CCI_4=1;
/*(5) 치매*/ IF MSICK3 IN ('F00','F01','F02','F03','G30') OR MSICK4 IN ('F051','G311') THEN CCI_5=1;
/*(6) 만성폐질환*/ IF 'J40' <= MSICK3 <='J47' OR 'J60' <= MSICK3 <= 'J67' OR MSICK4 IN ('I278','I279','J684','J701','J703') THEN CCI_6=1;
/*(7) 류마티스성 질환*/ IF MSICK3 IN ('M05','M06','M32','M33','M34') OR MSICK4 IN ('M315','M351','M353','M360') THEN CCI_7=1; 
/*(8) 소화성 궤양증*/ IF 'K25' <= MSICK3 <= 'K28' THEN CCI_8=1;
/*(9) 가벼운 간질환*/IF MSICK3 IN ('B18','K73','K74') OR MSICK4 IN ('K700','K701','K702','K703','K709','K713','K714','K715','K717','K760','K762','K763','K764','K768','K769','Z944') THEN CCI_9=1;
/*(10) 당뇨(만성합병증외)*/ IF MSICK4 IN ('E100','E101','E106','E108','E109','E110','E116','E118','E119','E120','E121','E126','E128','E129','E130','E131','E136','E138','E139','E140','E141','E146','E148','E149') THEN CCI_10=1;
/*(11) 당뇨(만성합병증)*/ IF MSICK4 IN ('E102','E103','E104','E105','E107','E112','E113','E114','E115','E117','E122','E123','E124','E125','E127','E132','E133','E134','E135','E137','E142','E143','E144','E145','E147') THEN CCI_11=1;
/*(12) 편마비*/ IF MSICK3 IN ('G81','G82') OR MSICK4 IN ('G041','G114','G801','G802','G830','G831','G832','G833','G834','G839') THEN CCI_12=1;
/*(13) 신장질환*/ IF MSICK3 IN ('N18','N19') OR MSICK4 IN ('I120','I131','N250','Z940','Z992')  OR 'N032' <= MSICK4 <= 'N037' OR 'N052' <= MSICK4 <= 'N057' OR 'Z490' <= MSICK4 <= 'Z492' THEN CCI_13=1;
/*(14) 악성종양*/ IF 'C00' <= MSICK3 <= 'C26' OR 'C30' <= MSICK3 <= 'C34' OR 'C37' <= MSICK3 <= 'C41' OR 'C45' <= MSICK3 <= 'C58' OR 'C60' <= MSICK3 <= 'C76' OR 'C81' <= MSICK3 <= 'C85' OR 'C90' <= MSICK3 <= 'C97' OR MSICK3 IN ('C43','C88') THEN CCI_14=1;
/*(15) 심각한 간질환*/ IF MSICK4 IN ('I850','I859','I864','I982','K704','K711','K721','K729','K765','K766','K767') THEN CCI_15=1;
/*(16) 전이성고형종양*/ IF 'C77' <= MSICK3 <= 'C80' THEN CCI_16=1;
/*(17) 에이즈*/ IF MSICK3 IN ('B20','B21','B22','B24') THEN CCI_17=1;
RUN;

/*입원, 외래 각 데이터셋*/
DATA TG_COMO_IN ; SET DB.TG_COMO; WHERE FORM_CD ='02'; RUN;
DATA TG_COMO_OUT ; SET DB.TG_COMO; WHERE FORM_CD ='03'; RUN;
PROC SORT DATA=TG_COMO_OUT; BY INDI_DSCM_NO COMO_DATE; RUN;


%MACRO INDI_CCI;
%DO N=1 %TO 17;
/*[1]질병별 입원 1회 이상 환자*/
PROC SQL; CREATE TABLE COMO_INDI_IN_CCI_&N. AS SELECT DISTINCT INDI_DSCM_NO 
FROM TG_COMO_IN WHERE CCI_&N.=1 ORDER BY INDI_DSCM_NO; QUIT;

/*[2]질병별 외래 2번 이상 간격 30일 이상 환자*/
DATA COMO_OUT_DIFF_CCI_&N.; SET TG_COMO_OUT; BY INDI_DSCM_NO;
DIFF1=DIF(COMO_DATE); /*외래 간 간격 계산*/ IF FIRST.INDI_DSCM_NO THEN DO; DIFF1=.; N=1; END; ELSE N+1;
WHERE CCI_&N=1; RUN;
PROC SQL; CREATE TABLE COMO_OUT_DIFFSUM_CCI_&N. AS SELECT INDI_DSCM_NO, SUM(DIFF1) AS DIFFSUM
FROM COMO_OUT_DIFF_CCI_&N. GROUP BY INDI_DSCM_NO ORDER BY INDI_DSCM_NO; QUIT;
PROC SQL; CREATE TABLE COMO_INDI_OUT_CCI_&N. AS SELECT DISTINCT INDI_DSCM_NO 
FROM COMO_OUT_DIFFSUM_CCI_&N. WHERE DIFFSUM>=30 ORDER BY INDI_DSCM_NO; QUIT;

/*[1] 또는 [2]에 속하는 환자*/
DATA COMO_INDI_CCI_&N.; MERGE COMO_INDI_IN_CCI_&N. COMO_INDI_OUT_CCI_&N.; BY INDI_DSCM_NO; YN_CCI_&N.=1;RUN;
%END; %MEND; %INDI_CCI;


/*INDI COMO 여부*/
DATA COMO_INDI_CCI_YN; MERGE COMO_INDI_CCI_1-COMO_INDI_CCI_17; BY INDI_DSCM_NO; RUN;
PROC STDIZE DATA=COMO_INDI_CCI_YN OUT=DB.COMO_INDI_CCI_YN REPONLY MISSING=0;RUN; /*.을 0으로*/


/*가중치 합 수정 VER2 : 선택*/
DATA DB.COMO_INDI_CCI; SET DB.COMO_INDI_CCI_YN;
CCI = SUM(OF YN_CCI_1-YN_CCI_10) + 2*SUM(OF YN_CCI_11-YN_CCI_13) + 3*YN_CCI_15 + 6*YN_CCI_17; RUN;

DATA DB.TG_CCI(KEEP= INDI_DSCM_NO CCI CCI_GRP); MERGE DB.TARGET_ID DB.COMO_INDI_CCI; BY INDI_DSCM_NO; 
IF CCI='.' THEN CCI=0; 
FORMAT CCI_GRP $20.;
IF 0<=CCI<=2 THEN CCI_GRP='01. 0-2';
ELSE IF 3<=CCI THEN CCI_GRP='02. 3+';
RUN;



/*----------------------------------------------------------------------------------*/
/*----------------------------------------------------------------------------------*/
/*----------------------------------------------------------------------------------*/
/*----------------------------------------------------------------------------------*/

/* version1.0 폐암 코드 바탕으로 위암환자 재 선택 2022-11-15*/

libname raw "/userdata08/room586/data_source/user_data"; 
libname db "/userdata08/room586/data_out/data_store";
libname db_out "/userdata08/room586/data_out/data_store/db_out";


/* [1]  DB.TARGET_T20_&YEAR, DB.TARGET_T30_&YEAR*/
%MACRO YEARLY; %DO YEAR=2010 %TO 2019;
%MACRO MONTHLY(STRT, STP); 

%DO YM=&STRT. %TO &STP.;

/*대상자 20테이블DB*/
PROC SQL; CREATE TABLE TARGET_T20_&YM. AS
SELECT DISTINCT A.C_DATE, B.*
FROM DB.TARGET_IDBFCDTH AS A
INNER JOIN RAW.T20_&YM. AS B
ON A.INDI_DSCM_NO=B.INDI_DSCM_NO
; QUIT;

PROC SQL; CREATE TABLE TARGET_CMN_&YM. AS SELECT DISTINCT INDI_DSCM_NO, C_DATE, CMN_KEY, MDCARE_STRT_DT FROM TARGET_T20_&YM.; QUIT;

/*대상자 30테이블DB*/
PROC SQL; CREATE TABLE TARGET_T30_&YM. AS
SELECT DISTINCT A.*, B.*
FROM TARGET_CMN_&YM. AS A
INNER JOIN RAW.T30_&YM. AS B
ON A.CMN_KEY=B.CMN_KEY
; QUIT;

%END; 
%MEND MONTHLY;  

%MONTHLY(STRT=&YEAR.01, STP=&YEAR.12);

DATA DB.TARGET_T20_&YEAR.; SET TARGET_T20_&YEAR.01-TARGET_T20_&YEAR.12; RUN;
DATA DB.TARGET_T30_&YEAR.; SET TARGET_T30_&YEAR.01-TARGET_T30_&YEAR.12; RUN;

%END; 
%MEND YEARLY;%YEARLY;

/*연도별 치료내역 추출*/

DATA DB.TARGET_T20; SET DB.TARGET_T20_2010-DB.TARGET_T20_2019; RUN;
DATA DB.TARGET_T30; SET DB.TARGET_T30_2010-DB.TARGET_T30_2019; RUN;

/*약효 분류*/
PROC SQL;
CREATE TABLE MED_CNT AS
SELECT DISTINCT MCARE_DIV_CD_ADJ ,EFMDC_CLSF_NO
FROM DB.TARGET_T30
WHERE EFMDC_CLSF_NO in ('421','429','431','439')
; RUN;


/*수술 및 항암 업데이트 후*/

/* [2] DB.TARGET_T30_LTC_&YEAR*/
%MACRO YEARLY; %DO YEAR=2010 %TO 2019;
DATA DB.TARGET_T30_LTC_&YEAR.; SET DB.TARGET_T30_&YEAR.;

/*******************************************************************************************************************************/
FORMAT CTx $30.;

/*1. Cytotoxic Chemotherapy*/
IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1227") THEN DO; CTx="Capecitabine";CT_CYTYN=1; END;/*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1345") THEN DO; CTx="Cisplatin" ;CT_CYTYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1483") THEN DO; CTx="Docetaxel" ; CT_CYTYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1493") THEN DO; CTx="Doxifluridine" ; CT_CYTYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1614","3821","6373") THEN DO; CTx="Fluorouracil" ; CT_CYTYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("2058") THEN DO; CTx="Oxaliplatin" ; CT_CYTYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("2078","5037") THEN DO; CTx="Paclitaxel" ; CT_CYTYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("4524","4525","3096","3097","3641","2348") THEN DO; CTx="Tegafur Combination" ; CT_CYTYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("E225","E226") THEN DO; CTx="Trifluridine" ; CT_CYTYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1774", "6660") THEN DO; CTx="Irinotecan" ; CT_CYTYN=1; END;
/*2. Targeted Therapy*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6393") THEN DO; CTx="Ramucirumab"; CT_TARYN=1; END;/*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("2428") THEN DO; CTx="Trastuzumab"; CT_TARYN=1; END;/*신규*/
/*3. Immunotherapy*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6384") THEN DO; CTx="Nivolumab" ; CT_IMUYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6390") THEN DO; CTx="Pembrolizumab" ; CT_IMUYN=1; END;   

/*4. Others*/

ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("4528") THEN DO; CTx="Belotecan" ; CT_OTHYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1237") THEN DO; CTx="Carboplatin" ;CT_OTHYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1390") THEN DO; CTx="Cyclophosphamide" ; CT_OTHYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1494") THEN DO; CTx="Doxorubicin" ; CT_OTHYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1571") THEN DO; CTx="Etoposide" ; CT_OTHYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1649") THEN DO; CTx="Gemcitabine" ; CT_OTHYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1733") THEN DO; CTx="Ifosfamide" ; CT_OTHYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1921") THEN DO; CTx="Methotrexate" ; CT_OTHYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("4812") THEN DO; CTx="Pemetrexed" ; CT_OTHYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("2419") THEN DO; CTx="Topotecan" ; CT_OTHYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("2480") THEN DO; CTx="Vincristine" ; CT_OTHYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("2482") THEN DO; CTx="Vinorelbine" ; CT_CYTYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6261") THEN DO; CTx="Afatinib"; CT_OTHYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6562") THEN DO; CTx="Alectinib"; CT_OTHYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("5543") THEN DO; CTx="Bevacizumab"; CT_OTHYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("4528") THEN DO; CTx="Belotecan"; CT_OTHYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("4633") THEN DO; CTx="Bortezomib"; CT_OTHYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6757") THEN DO; CTx="Brigatinib"; CT_OTHYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("5564") THEN DO; CTx="Cetuximab"; CT_OTHYN=1; END;/*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6344") THEN DO; CTx="Ceritinib"; CT_OTHYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6175") THEN DO; CTx="Crizotinib"; CT_OTHYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6631") THEN DO; CTx="Dabrafenib"; CT_OTHYN=1; END;/*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6916") THEN DO; CTx="Dacomitinib"; CT_OTHYN=1; END;/*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("4774") THEN DO; CTx="Erlotinib"; CT_OTHYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("4530") THEN DO; CTx="Gefitinib"; CT_OTHYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6951") THEN DO; CTx="Lazertinib"; CT_OTHYN=1; END;/*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6997") THEN DO; CTx="Lorlatinib"; CT_OTHYN=1; END;/*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6525") THEN DO; CTx="Osimertinib"; CT_OTHYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6524") THEN DO; CTx="Olmutinib"; CT_OTHYN=1; END;/*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("4880") THEN DO; CTx="Sorafenib"; CT_OTHYN=1; END;/*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("4877") THEN DO; CTx="Sunitinib"; CT_OTHYN=1; END;/*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6454") THEN DO; CTx="Trametinib"; CT_OTHYN=1; END;/*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6577") THEN DO; CTx="Atezolizumab" ; CT_OTHYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6788") THEN DO; CTx="Avelumab" ; CT_OTHYN=1; END;/*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6769") THEN DO; CTx="Durvalumab" ; CT_OTHYN=1; END;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6866") THEN DO; CTx="Abemaciclib" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6239") THEN DO; CTx="ABN401" ; CT_OTHYN=1; END;/*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6588") THEN DO; CTx="Aflibercept" ; CT_OTHYN=1; END;/*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1067") THEN DO; CTx="Amifostine" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("7074") THEN DO; CTx="Amivantamab" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6210") THEN DO; CTx="Axitinib" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("4843") THEN DO; CTx="Azacitidine" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6146") THEN DO; CTx="Bendamustine" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1172") THEN DO; CTx="Bicalutamide" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1180") THEN DO; CTx="Bleomycin" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("4633") THEN DO; CTx="Bortezomib" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1206") THEN DO; CTx="Busulfan" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6664") THEN DO; CTx="Cabozantinib" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6484") THEN DO; CTx="Canakinumab" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("7038") THEN DO; CTx="Capmatinib" ; CT_OTHYN=1; END; /*이동*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6478") THEN DO; CTx="Carfilzomib" ; CT_OTHYN=1; END; /*이동*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1396") THEN DO; CTx="Cytarabine" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1399") THEN DO; CTx="Dacarbazine" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1401") THEN DO; CTx="Dactinomycin" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("4933") THEN DO; CTx="Dasatinib" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1406") THEN DO; CTx="Daunorubicin" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("4956") THEN DO; CTx="Decitabine" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1527") THEN DO; CTx="Epirubicin" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1672") THEN DO; CTx="Goserelin" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6281") THEN DO; CTx="Ibrutinib" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("4127") THEN DO; CTx="Imatinib" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6452") THEN DO; CTx="Lenvatinib" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1964") THEN DO; CTx="Mitomycin" ; CT_OTHYN=1; END; /*이동 C*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("5626") THEN DO; CTx="Nilotinib" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6561") THEN DO; CTx="Nintedanib" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6589") THEN DO; CTx="Ociperlimab" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6435") THEN DO; CTx="Olaparib" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("1143") THEN DO; CTx="Oncotice" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6552") THEN DO; CTx="Palbociclib" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6118") THEN DO; CTx="Pazopanib" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6246") THEN DO; CTx="Pertuzumab" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6248") THEN DO; CTx="Regorafenib" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("4226") THEN DO; CTx="Rituximab" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("7079") THEN DO; CTx="Selpercatinib" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("2345") THEN DO; CTx="Tamoxifen" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6241") THEN DO; CTx="Vandetanib" ; CT_OTHYN=1; END; /*신규*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("2478") THEN DO; CTx="Vinblastine" ; CT_OTHYN=1; END;/*이동*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,4) IN ("6181") THEN DO; CTx="Vorinostat" ; CT_OTHYN=1; END;/*이동*/

FORMAT CTx_CODE $10.;
IF CTx^=" " THEN CTx_CODE=SUBSTR(MCARE_DIV_CD_ADJ,1,4);

/*******************************************************************************************************************************/
FORMAT OP $200.;

/*(1) 위전 절제술*/
IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("QA536") THEN OP="01. 위전절제술-장관간치술 동시 실시";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("QA533") THEN OP="02. 위전절제술(림프절 청소를 포함)-전치공장문합술실시,복부접근";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("QA534") THEN OP="03. 위전절제술(림프절 청소를 포함)-전치공장문합술실시,흉복부접근";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("QA535") THEN OP="04. 위전절제술(기타의 것)-전치공장문합술실시";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("Q2533") THEN OP="05. 위전절제술(복부접근)-림프절 청소를 포함하는 것";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("Q2534") THEN OP="06. 위전절제술(흉복부접근)-림프절 청소를 포함하는 것";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("Q2535") THEN OP="07. 위전절제술(기타의 것)";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("Q2536") THEN OP="08. 위전절제술(복부접근)-림프절 청소를 포함하지 않는 것";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("Q2537") THEN OP="09. 위전절제술(흉복부접근)-림프절 청소를 포함하지 않는 것";

/*(2) 위장 문합술*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("Q2571") THEN OP="10. 위장문합술(십이지장)";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("Q2572") THEN OP="11. 위장문합술(공장)";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("Q2573") THEN OP="12. 위장문합술(Roux-en-Y공장)";

/*(3) 위아전절제술, 위유문부보전술*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("Q0259") THEN OP="13. 위아전절제술-장관간치술 동시 실시한 경우";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("QA594") THEN OP="14. 위아부분절제술(림프절청소포함)-전치공장문합술실시";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("QA959") THEN OP="15. 위아전절제술(림프절청소포함)-전치공장문합술실시";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("QA596") THEN OP="16. 위유문부보존[근위부절제포함]절제술(림프절청소포함)";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("QA597") THEN OP="17. 위아전절제술(기타의 것)-설상 또는 부분(전치공장문합술 실시)";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("QA598") THEN OP="18. 위아전절제술(기타의 것)-근위부절제(전치공장문합술 실시)";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("Q2594") THEN OP="19. 위아전절제술(부분절제)-림프절 청소를 포함하는 것";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("Q2595") THEN OP="20. 위아전절제술(림프절 청소를 포함하는 것)";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("Q2596") THEN OP="21. 위유문부보존[근위부절제포함]절제술(림프절 청소를 포함하는 것)";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("Q2597") THEN OP="22. 위아전절제술(기타의것)-설상 또는 부분";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("Q2598") THEN OP="23. 위아전절제술(근위부절제)-림프절 청소를 포함하지 않는 것";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("Q0251") THEN OP="24. 위아전절제술(부분절제)-림프절 청소를 포함하지 않는 것";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("Q0252") THEN OP="25. 위아전절제술(원위부절제)-림프절 청소를 포함하는 것";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("Q0253") THEN OP="26. 위아전절제술(원위부절제)-림프절 청소를 포함하지 않는 것";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("Q0258") THEN OP="27. 위아전절제술(근위부절제)-림프절 청소를 포함하는 것";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("Q0256") THEN OP="28. 위아전절제술(설상절제)-림프절 청소를 포함하는 것";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("Q0257") THEN OP="29. 위아전절제술(설상절제)-림프절 청소를 포함하지 않는 것";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("Q0255") THEN OP="30. 위아전절제술(유문부보존)-림프절 청소를 포함하지 않는 것";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("Q0254") THEN OP="31. 위아전절제술(유문부보존)-림프절 청소를 포함하는 것";

/*(3) 내시경적수술*/
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("QX701") THEN OP="32. 내시경적 상부 소화관종양 수술-점막절제술 및 점막하종양절제술 ";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("Q7652") THEN OP="33. 내시경적 상부 소화관종양 수술-점막절제술 및 점막하종양절제술";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("QX703") THEN OP="34. 점막절제술 및 점막하종양절제술";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("Q2440") THEN OP="35. 내시경적 상부소화관종양수술-점막하 박리절제술";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("QX704") THEN OP="36. 내시경적 상부소화관종양수술-점막하 박리절제술";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("QZ933") THEN OP="37. 점막하 박리절제술";


FORMAT OP_CODE $10.;
IF OP^=" " THEN OP_CODE=SUBSTR(MCARE_DIV_CD_ADJ,1,5);

/*******************************************************************************************************************************/

/*(1) 방사선 모의치료 및 치료계획*/
FORMAT RT $200.;

IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HD010","HD410","HD011","HD411","HD012","HD412","HD013","HD413","HD014","HD414",
														"HD015","HD415","HD016","HD416","HD017","HD018","HD418","HD019","HD419","HD020","HD420","HD041","HD441") 
														THEN RT="01. For Teletherapy";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HD021","HD022","HD023") THEN RT="02. For Brachytherapy";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HD031","HD032","HD033") THEN RT="03. Design and Construction of Therapeutic Devices";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HD040") THEN RT="04. Iodine-125 Permanent Implant for Prostate Cancer";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HX401") THEN RT="05. Dosimetry";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HY402","HY404","HY405") THEN RT="06. Verification and Correction";

/*(2) 방사선 치료*/

IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HD051","HD054","HD052","HD055","HD053","HD056") THEN RT="07. Teletherapy";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HD057","HD058","HD059") THEN RT="08. Rotational Irradiation";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HD061") THEN RT="09. 3-Dimensional Conformal Therapy";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HD071","HD072","HD073") THEN RT="10. Unsealed Source";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HD080","HD081","HD082","HD083","HD084","HD085","HD086","HD087","HD088","HD089") THEN RT="11. Brachytherapy";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HD091","HD092") THEN RT="12. Total Body Inrradiation";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HD093") THEN RT="13. Total Skin Electron Beam Therapy";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HD110") THEN RT="14. Fractionated Stereotactic Radiotherapy";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HD111","HD112","HD211","HD212") THEN RT="15. Body Stereotactic Radiosurgery";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HD113","HD114","HD115","S4751") THEN RT="16. Cranical Sterotactic Radiosurgery (+S4751)";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HD121") THEN RT="17. Proton Therapy";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HZ271") THEN RT="18. Intensity Modulated Radiation Therapy";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HZ272") THEN RT="19. 방사선 온열치료 및 온열치료 계획";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HZ273") THEN RT="20. 중성자선 치료";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HZ274") THEN RT="21. 안구 내 종양 근접 방사선치료 및 계획";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HZ275") THEN RT="22. 양성자 치료 및 양성자 치료계획";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HD150") THEN RT="23. Iodine-125 Permanent Implant for Prostate Cancer";

ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HH121") THEN RT="24. 치료촬영1차";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HH122") THEN RT="25. 치료촬영2차";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("HH137") THEN RT="26. 원격치료(4MV)";

FORMAT RT_CODE $10.;
IF RT^=" " THEN RT_CODE=SUBSTR(MCARE_DIV_CD_ADJ,1,4);

/*******************************************************************************************************************************/
/*요양병원 환자군 분류체계 및 일당정액 수가*/
FORMAT  LTC_ADJ $50.;
IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("A1100") THEN LTC_ADJ="01. 의료최고도 (입원)";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("A1900") THEN LTC_ADJ="02. 의료최고도 (외박)";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("A2100") THEN LTC_ADJ="03. 의료고도 (입원)";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("A2900") THEN LTC_ADJ="04. 의료고도 (외박)";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("A3000") THEN LTC_ADJ="05. 의료중도";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("A3100") THEN LTC_ADJ="06. 의료중도 (입원)";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("A3900") THEN LTC_ADJ="07. 의료중도 (외박)";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("A6100") THEN LTC_ADJ="08. 의료경도 (입원)";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("A6900") THEN LTC_ADJ="09. 의료경도 (외박)";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("A7100") THEN LTC_ADJ="10. 선택입원 (입원)";
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("A7900") THEN LTC_ADJ="11. 선택입원 (외박)";

FORMAT T30_DATE yymmdd10.;
T30_DATE=INPUT(PUT(MDCARE_STRT_DT,8.),yymmdd8.);

;RUN;
%END; 
%MEND YEARLY;%YEARLY;


/*진단 이후 2년내 치료 자료만 사용*/
/* [3] : DB.TARGET_T30_LTC2YR_&YEAR. */
%MACRO YEARLY; %DO YEAR=2010 %TO 2019;
DATA DB.TARGET_T30_LTC2YR_&YEAR.; SET DB.TARGET_T30_LTC_&YEAR.;
WHERE C_DATE <= T30_DATE <= C_DATE+(365*2); RUN;
%END; 
%MEND YEARLY;%YEARLY;

DATA DB.TARGET_T30_LTC2YR; SET DB.TARGET_T30_LTC2YR_2010-DB.TARGET_T30_LTC2YR_2019;RUN;

/*********수술***************/
/*2년 이내 전체 수술*/
PROC SQL; CREATE TABLE DB.T30_LTC_OP_2YR AS SELECT *
FROM DB.TARGET_T30_LTC2YR WHERE OP^=" "  
ORDER BY INDI_DSCM_NO, CMN_KEY; QUIT;

/*첫 수술 CMN_KEY*/
DATA DB.FIRST_OP_CMN (KEEP=/*INDI_DSCM_NO*/ CMN_KEY); 
SET DB.T30_LTC_OP_2YR; IF FIRST.INDI_DSCM_NO; BY INDI_DSCM_NO; RUN;

/*최초 수술 명세서 내역 전체*/
PROC SQL;
CREATE TABLE FIRST_OP_T30 AS
SELECT A.*
FROM DB.T30_LTC_OP_2YR AS A
INNER JOIN DB.FIRST_OP_CMN AS B
ON A.CMN_KEY=B.CMN_KEY
;QUIT;
/*--------------------------------------------------------------------------------------------------*/

/* 수술 종류 빈도*/
PROC SQL;
CREATE TABLE OP_UNIQUE AS
SELECT DISTINCT OP ,COUNT(OP) AS CNT
FROM FIRST_OP_T30
GROUP BY OP
; RUN;

/*-------------------------------------------------------------------------------------------------*/

DATA FIRST_OP; SET FIRST_OP_T30; 
IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("QA536","QA533","QA534","QA535","Q2533","Q2534","Q2535","Q2536","Q2537") THEN OP_TOTALYN=1;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("Q2571","Q2572","Q2573") THEN OP_ENTYN=1;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("Q0259","QA594","QA959","QA596","QA597","QA598","Q2594","Q2595","Q2596","Q2597","Q2598","Q0251","Q0252","Q0253","Q0258","Q0256","Q0257","Q0255","Q0254")
 THEN OP_PARTYN=1;
ELSE IF SUBSTR(MCARE_DIV_CD_ADJ,1,5) IN ("QX701","Q7652","QX703","Q2440","QX704","QZ933") THEN OP_LAPAYN=1;
IF OP_TOTALYN=. THEN OP_TOTALYN=0;
IF OP_ENTYN=. THEN OP_ENTYN=0;
IF OP_PARTYN=. THEN OP_PARTYN=0;
IF OP_LAPAYN=. THEN OP_LAPAYN=0;
RUN;

PROC SQL; CREATE TABLE INDIOP AS SELECT DISTINCT INDI_DSCM_NO, 
SUM(OP_TOTALYN) AS OP_TOTAL, SUM(OP_ENTYN) AS OP_ENT, SUM(OP_PARTYN) AS OP_PART, SUM(OP_LAPAYN) AS OP_LAPA
FROM FIRST_OP GROUP BY INDI_DSCM_NO; QUIT;

DATA DB.TARGET_OP; SET INDIOP;
FORMAT OP_CTG $30.;
IF OP_TOTAL>=1 THEN OP_CTG="01. Total Gastrectomy";
ELSE IF OP_PART>=1 THEN OP_CTG="02. Subotal/Partial Gastrectomy";
ELSE IF OP_ENT>=1 THEN OP_CTG="03. Gastroenterostomy";
ELSE IF OP_LAPA>=1 THEN OP_CTG="04. Laparoscopic Surgery";
ELSE OP_CTG="05. None";
IF OP_TOTAL=1 OR OP_PART=1 OR OP_ENT=1 OR OP_LAPA=1 THEN OP_YN=1; ELSE OP_YN=0; RUN;


/***************항암**************/
PROC SQL; CREATE TABLE INDICT AS SELECT DISTINCT INDI_DSCM_NO, 
SUM(CT_CYTYN) AS CT_CYT, SUM(CT_TARYN) AS CT_TAR, SUM(CT_IMUYN) AS CT_IMU, SUM(CT_OTHYN) AS CT_OTH
FROM DB.TARGET_T30_LTC2YR GROUP BY INDI_DSCM_NO; QUIT;
DATA DB.TARGET_CT; SET INDICT;
IF CT_CYT>=1 OR CT_TAR>=1 OR CT_IMU>=1 OR CT_OTH>=1 THEN CT_YN=1; ELSE CT_YN=0; RUN;

/****************방사선****************/
PROC SQL; CREATE TABLE DB.TARGET_RT AS SELECT DISTINCT INDI_DSCM_NO, 1 AS RT_YN
FROM DB.TARGET_T30_LTC2YR WHERE RT^=" ";QUIT;

/*DB.TARGET_ID에 치료정보 붙이기*/

DATA TG_TRT; 
MERGE DB.TARGET_ID(IN=A) DB.TARGET_OP DB.TARGET_CT DB.TARGET_RT ; 
BY INDI_DSCM_NO; IF A=1 ; 
RUN;

DATA TARGET_TRT; SET TG_TRT ;
ARRAY CHANGE _NUMERIC_;
DO OVER CHANGE;
IF CHANGE=. THEN CHANGE=0;
END;
RUN;

DATA DB.TARGET_TRT; SET TARGET_TRT;
IF OP_YN=1 OR CT_YN=1 OR RT_YN=1 THEN TRT_YN=1; ELSE TRT_YN=0; 
FORMAT TRT_GRP $20.;
IF OP_YN=0 THEN OP_CTG="05. None";
IF OP_YN=1 AND CT_YN=0 AND RT_YN=0 THEN TRT_GRP="01. SURGERY ONLY";
IF OP_YN=1 AND CT_YN=1 AND RT_YN=0 THEN TRT_GRP="02. SURGERY + CTx";
IF OP_YN=1 AND CT_YN=1 AND RT_YN=1 THEN TRT_GRP="03. SURGERY + CTx + RT";
IF OP_YN=1 AND CT_YN=0 AND RT_YN=1 THEN TRT_GRP="04. SURGERY + RT";
IF OP_YN=0 AND CT_YN=1 AND RT_YN=0 THEN TRT_GRP="05. CTx";
IF OP_YN=0 AND CT_YN=1 AND RT_YN=1 THEN TRT_GRP="06. CTx + RT";
IF OP_YN=0 AND CT_YN=0 AND RT_YN=1 THEN TRT_GRP="07. RT";
IF CT_CYT>=1 THEN CT_CYT_YN=1 ; ELSE CT_CYT_YN=0;
IF CT_TAR>=1 THEN CT_TAR_YN=1; ELSE CT_TAR_YN=0;
IF CT_IMU>=1 THEN CT_IMU_YN=1; ELSE CT_IMU_YN=0;
IF CT_OTH>=1 THEN CT_OTH_YN=1; ELSE CT_OTH_YN=0;
RUN;

/*******************************************************/

/*연령별 구간 추가*/
DATA DB.TARGET_TRT; SET DB.TARGET_TRT;
IF 65<= C_AGE <75 THEN C_AGE_GRP2 ='01. 65-74'; 
ELSE IF 75 <=C_AGE<85 THEN C_AGE_GRP2 ='02. 75-84'; 
ELSE IF 85 <= C_AGE THEN C_AGE_GRP2='03. 85+';
RUN;
/*******************************************************/

/*항암제별 빈도*/
DATA CT_DIST; SET DB.TARGET_TRT; 
IF CT_CYT>=1 THEN CT_CYTYN=1;
IF CT_TAR>=1 THEN CT_TARYN=1;
IF CT_IMU>=1 THEN CT_IMUYN=1;
IF CT_OTH>=1 THEN CT_OTHYN=1; 
RUN;

%MACRO CTFREQ(COND, CONDNAME);
PROC SQL; 
CREATE TABLE CTFREQ&CONDNAME. AS 
SELECT CT_CYTYN, CT_TARYN, CT_IMUYN, CT_OTHYN, COUNT(DISTINCT INDI_DSCM_NO) AS CNT&CONDNAME. 
FROM CT_DIST 
WHERE PRE_C=0 AND C_AGE>=65 AND C_YEAR>=2010 &COND. 
GROUP BY CT_CYTYN, CT_TARYN, CT_IMUYN, CT_OTHYN; 
QUIT;
%MEND;
 
%CTFREQ();
%CTFREQ(COND= AND C_AGE_GRP2='01. 65-74', CONDNAME=_6574);
%CTFREQ(COND= AND C_AGE_GRP2='02. 75-84', CONDNAME=_7584);
%CTFREQ(COND= AND C_AGE_GRP2='03. 85+', CONDNAME=_85U);


DATA CTFQ; MERGE CTFREQ(IN=A) CTFREQ_6574 CTFREQ_7584 CTFREQ_85U ; 
BY CT_CYTYN CT_TARYN CT_IMUYN CT_OTHYN; IF A=1;RUN;


/*수술별 빈도*/
DATA CT_DIST; SET DB.TARGET_TRT; 
IF OP_TOTAL>=1 THEN OP_TOTALYN=1;
IF OP_ENT>=1 THEN OP_ENTYN=1;
IF OP_PART>=1 THEN OP_PARTYN=1;
IF OP_LAPA>=1 THEN OP_LAPAYN=1; 
RUN;

%MACRO CTFREQ(COND, CONDNAME);
PROC SQL; 
CREATE TABLE CTFREQ&CONDNAME. AS 
SELECT OP_TOTALYN, OP_ENTYN, OP_PARTYN, OP_LAPAYN, COUNT(DISTINCT INDI_DSCM_NO) AS CNT&CONDNAME. 
FROM CT_DIST 
WHERE PRE_C=0 AND C_AGE>=65 AND C_YEAR>=2010 &COND. 
GROUP BY OP_TOTALYN, OP_ENTYN, OP_PARTYN, OP_LAPAYN; 
QUIT;
%MEND;
 
%CTFREQ();
%CTFREQ(COND= AND C_AGE_GRP2='01. 65-74', CONDNAME=_6574);
%CTFREQ(COND= AND C_AGE_GRP2='02. 75-84', CONDNAME=_7584);
%CTFREQ(COND= AND C_AGE_GRP2='03. 85+', CONDNAME=_85U);


DATA CTFQ; MERGE CTFREQ(IN=A) CTFREQ_6574 CTFREQ_7584 CTFREQ_85U ; 
BY OP_TOTALYN OP_ENTYN OP_PARTYN OP_LAPAYN; IF A=1;RUN;

/*******************************************************/
DATA CT_DIST; SET DB.TARGET_TRT; 
IF TRT_GRP="01. SURGERY ONLY" THEN SURGERY_ONLY=1;
IF TRT_GRP="02. SURGERY + CTx" THEN SURGERY_CTx=1;
IF TRT_GRP="03. SURGERY + CTx + RT" THEN SURGERY_CTx_RT=1;
IF TRT_GRP="04. SURGERY + RT" THEN SURGERY_RT=1; 
IF TRT_GRP="05. CTx" THEN CTx=1; 
IF TRT_GRP="06. CTx + RT" THEN CTx_RT=1; 
IF TRT_GRP="07. RT" THEN RT=1; 
RUN;

%MACRO CTFREQ(COND, CONDNAME);
PROC SQL; 
CREATE TABLE CTFREQ&CONDNAME. AS 
SELECT SURGERY_ONLY, SURGERY_CTx, SURGERY_CTx_RT, SURGERY_RT, CTx,CTx_RT, RT, COUNT(DISTINCT INDI_DSCM_NO) AS CNT&CONDNAME. 
FROM CT_DIST 
WHERE PRE_C=0 AND C_AGE>=65 AND C_YEAR>=2010 &COND. 
GROUP BY SURGERY_ONLY, SURGERY_CTx, SURGERY_CTx_RT, SURGERY_RT, CTx, CTx_RT, RT; 
QUIT;
%MEND;
 
%CTFREQ();
%CTFREQ(COND= AND C_AGE_GRP2='01. 65-74', CONDNAME=_6574);
%CTFREQ(COND= AND C_AGE_GRP2='02. 75-84', CONDNAME=_7584);
%CTFREQ(COND= AND C_AGE_GRP2='03. 85+', CONDNAME=_85U);

DATA CTFQ; MERGE CTFREQ(IN=A) CTFREQ_6574 CTFREQ_7584 CTFREQ_85U ; 
BY SURGERY_ONLY SURGERY_CTx SURGERY_CTx_RT SURGERY_RT CTx CTx_RT RT; IF A=1;RUN;


/*-----------------------------------------------------------------------------------------*/
/*-----------------------------------------------------------------------------------------*/
/*-----------------------------------------------------------------------------------------*/
/*-----------------------------------------------------------------------------------------*/
libname raw "/userdata08/room586/data_source/user_data"; 
libname db "/userdata08/room586/data_out/data_store";
libname db_out "/userdata08/room586/data_out/data_store/db_out";

%MACRO YEARLY; 
%DO YEAR=2010 %TO 2019;
PROC SQL; 
CREATE TABLE CMN_ADJ_&YEAR. AS 
SELECT CMN_KEY, T30_DATE, LTC_ADJ
FROM DB.TARGET_T30_LTC2YR_&YEAR.
WHERE LTC_ADJ^=''; QUIT;
PROC SQL; 
CREATE TABLE TARGET_ADJ_&YEAR. AS 
SELEECT A.INDI_DSCM_NO, A.C_DATE, A.CMN_KEY, B.T30_DATE A.MDCARE_DD_CNT, B.LTC_ADJ
FROM DB.TARGET_T20_&YEAR AS A INNER JOIN CMN_ADJ_&YEAR. AS B ON A.CMN_KEY=B.CMN_KEY;QUIT;
%END; 
%MEND YEARLY; 
%YEARLY;

DATA DB.TARGET_ADJ_2YR; SET TARGET_ADJ_2010-TARGET_ADJ_2019;RUN;

/*치료 종료일 진단 2년 이후면 진단 2년째 날을 종료일로*/
DATA TARGET_ADJ; SET DB.TARGET_ADJ_2YR;
FORMAT T30_END_DT YYMMDD10. ADJ2YR_END_DT YYMMDD10.;
T30_END_DT = T30_DATE+MDCARE_DD_CNT;
IF T30_END_DT >= C_DATE+(365*2) THEN ADJ2YR_END_DT = C_DATE+(365*2);
ELSE ADJ2YR_END_DT = T30_END_DT; RUN;

/*시설 및 재가이용*/
PROC SQL;
CREATE TABLE DB.TARGET_LTC_2YR_TBNYPAY AS 
SELECT DISTINCT A.*, B.INDI_SEQ, B.LTCP_TYPE_CD, INPUT(B.LTCP_FR_DT,YYMMDD10.) AS LTC_STRT_DT, B.EADJ_TOTAL_PAY_DCNT
FROM DB.TARGET_IDBFCDTH AS A
LEFT JOIN RAW.RVSN_HFVT_TBNYPAY AS B
ON A.INDI_DSCM_NO=B.INDI_DSCM_NO
WHERE B.LTCP_TYPE_CD IN ('1','2') AND C_DATE <= INPUT(B.LTCP_FR_DT,YYMMDD10.) <= C_DATE+(365*2)
;QUIT;


DATA TARGET_LTC; SET DB.TARGET_LTC_2YR_TBNYPAY;
FORMAT LTC_STRT_DT YYMMDD10. LTC_ENLTC_STRT_DT YYMMDD10. LTC2YR_END_DT YYMMDD10.;
LTC_END_DT = LTC_STRT_DT + EADJ_TOTAL_PAY_DCNT;
IF LTC_END_DT >= C_DATE+(365*2) THEN LTC2YR_END_DT = C_DATE+(365*2);
ELSE LTC2YR_END_DT = LTC_END_DT; RUN;


/* 인당 이용기간 구하기*/
PROC SQL; 
CREATE TABLE ADJ_INDI AS 
SELECT INDI_DSCM_NO, 
MIN(T30_DATE) AS MIN_DT FORMAT=YYMMDD10.,
MAX(ADJ2YR_END_DT) AS MAX_DT FORMAT=YYMMDD10.,
MAX(ADJ2YR_END_DT)-MIN(T30_DATE) AS ADJ_DD
FROM TARGET_ADJ GROUP BY INDI_DSCM_NO ORDER BY INDI_DSCM_NO; QUIT;

PROC SQL; 
CREATE TABLE INS_INDI AS 
SELECT INDI_DSCM_NO, 
MIN(LTC_STRT_DT) AS MIN_DT FORMAT=YYMMDD10.,
MAX(LTC_END_DT) AS MAX_DT FORMAT=YYMMDD10.,
MAX(LTC_END_DT)-MIN(LTC_STRT_DT) AS INS_DD
FROM TARGET_LTC WHERE LTCP_TYPE_CD='1' GROUP BY INDI_DSCM_NO ORDER BY INDI_DSCM_NO; QUIT;

PROC SQL; 
CREATE TABLE HOME_INDI AS 
SELECT INDI_DSCM_NO, 
MIN(LTC_STRT_DT) AS MIN_DT FORMAT=YYMMDD10.,
MAX(LTC_END_DT) AS MAX_DT FORMAT=YYMMDD10.,
MAX(LTC_END_DT)-MIN(LTC_STRT_DT) AS HOME_DD
FROM TARGET_LTC WHERE LTCP_TYPE_CD='2' GROUP BY INDI_DSCM_NO ORDER BY INDI_DSCM_NO; QUIT;


DATA LTC_USE_DD(KEEP=INDI_DSCM_NO ADJ_DD INS_DD HOME_DD);
MERGE DB.TARGET_ID(IN=A) ADJ_INDI INS_INDI HOME_INDI; BY INDI_DSCM_NO; IF A=1; RUN;

DATA LTC_USE_MAX; SET LTC_USE_DD;
N_SERVICE = N(OF ADJ_DD, INS_DD, HOME_DD);
MAX_DD = MAX(ADJ_DD, INS_DD, HOME_DD);
IF N_SERVICE^=0 AND MAX_DD = ADJ_DD THEN LTC_MAIN_USE = '01. 요양병원';
ELSE IF N_SERVICE^=0 AND MAX_DD = INS_DD THEN LTC_MAIN_USE = '02. 시설';
ELSE IF N_SERVICE^=0 AND MAX_DD = HOME_DD THEN LTC_MAIN_USE = '03. 재가';
ELSE IF N_SERVICE=0 THEN LTC_MAIN_USE = '04. 이용안함';RUN;

 
DATA DB.TARGET_LTC_USE; SET LTC_USE_MAX;
FORMAT LTC_USE_GRP $20.;
IF ADJ_DD^=. THEN ADJ=1; ELSE ADJ=0;
IF INS_DD^=. THEN INS=1; ELSE INS=0;
IF HOME_DD^=. THEN HOME=1; ELSE HOME=0;
IF ADJ=0 AND INS=0 AND HOME = 0 THEN LTC_USE_GRP = '00. NONE'; 
IF ADJ=1 AND INS=0 AND HOME = 0 THEN LTC_USE_GRP = '01. ONLY ADJ';
IF ADJ=0 AND INS=1 AND HOME = 0 THEN LTC_USE_GRP = '02. ONLY INS';
IF ADJ=0 AND INS=0 AND HOME = 1 THEN LTC_USE_GRP = '03. ONLY HOME';
IF ADJ=1 AND INS=1 AND HOME = 0 THEN LTC_USE_GRP = '04. ADJ+INS';
IF ADJ=1 AND INS=0 AND HOME = 1 THEN LTC_USE_GRP = '05. ADJ+HOME';
IF ADJ=0 AND INS=1 AND HOME = 1 THEN LTC_USE_GRP = '06. INS+HOME';
IF ADJ=1 AND INS=1 AND HOME = 1 THEN LTC_USE_GRP = '07. ADJ+INS+HOME';
RUN;

PROC FREQ DATA=DB.TARGET_LTC_USE;TABLES LTC_USE_GRP; RUN;


/*------------------------------------------------------------------------*/
/*------------------------------------------------------------------------*/
/*------------------------------------------------------------------------*/
/*------------------------------------------------------------------------*/

libname raw "/userdata08/room586/data_source/user_data"; 
libname db "/userdata08/room586/data_out/data_store";
libname db_out "/userdata08/room586/data_out/data_store/db_out";

/*장기요양보험 신청일 및 유효기간*/
/*TARGET  대상자를 장기요양_기본 (맞춤형)데이터셋에서 추출*/
PROC SQL; CREATE TABLE DB.TARGET_LTC_TBNYBASE AS
SELECT DISTINCT A.INDI_DSCM_NO, A.PRE_C, A.C_DATE, B.*, INPUT(SUBSTR(B.APLY_YM,1,4),4.) AS APLY_YR, 
INTNX('MONTH',INPUT(B.APLY_YM,YYMMN6.),1)-1 AS APLY_YMD FORMAT=yymmdd10.,/*신청년월*/
INTNX('MONTH',INPUT(B.APLY_YM,YYMMN6.),0) AS APLY_YMD2 FORMAT=yymmdd10.,

INTNX('MONTH',INPUT(B.GRADE_JUDG_YM,YYMMN6.),1)-1 AS GRADE_JUDG_YMD FORMAT=yymmdd10.,/*판정년월*/
INTNX('MONTH',INPUT(B.GRADE_JUDG_YM,YYMMN6.),0) AS GRADE_JUDG_YMD2 FORMAT=yymmdd10.,

INPUT(RCGT_EDA_FR_DT,YYMMDD10.) AS RCGT_EDA_FR_YMD FORMAT=yymmdd10.,/*인정유효기간시작일자*/
INPUT(RCGT_EDA_TO_DT,YYMMDD10.) AS RCGT_EDA_TO_YMD FORMAT=yymmdd10./*인정유효기간종료일자*/
FROM DB.TARGET_IDBFCDTH AS A
INNER JOIN RAW.RVSN_HFVT_TBNYBASE AS B
ON A.INDI_DSCM_NO=B.INDI_DSCM_NO
; QUIT;


/*1. 진단일이 장기요양보험 유효기간 내인 경우 : 10,415명*/
DATA LTC_EDA_YN; SET DB.TARGET_LTC_TBNYBASE;
WHERE RCGT_EDA_FR_YMD<=C_DATE<=RCGT_EDA_TO_YMD; 
EDA_YN=1; EDA_GRD=GJU_RCGT_GRADE_CD; RUN; 

/*1.A 진단일 이전에 신청건(이후 인정)이 존재하는 경우 : 28,928건, 중복포함. 11,807 명 중복 미포함*/
DATA LTC_APLY_BEFC; SET DB.TARGET_LTC_TBNYBASE;
WHERE C_DATE>APLY_YMD AND GJU_RCGT_GRADE_CD IN ('1','2','3','4','5','6'); RUN;/*28,928*/
/*2년 내 복수 건 신청자들은 받은 등급 중 최고 등급(가장 작은 숫자)으로, 6.17결정*/
PROC SQL; 
CREATE TABLE LTC_GRADE_BEFC AS 
SELECT INDI_DSCM_NO, 1 AS APLY_BEFC_YN, COUNT(DISTINCT INDI_SEQ) AS APLY_BEFC_N, MIN(INPUT(GJU_RCGT_GRADE_CD,1.)) AS MIN_BEFC_GRD_GRP 
FROM LTC_APLY_BEFC 
GROUP BY INDI_DSCM_NO; QUIT; /*11,807*/

/*2. 진단일 이후 2년 내에 신청건(이후 인정)이 존재하는 경우 : 23,115건, 중복포함. 17,910명 중복 미포함*/
DATA LTC_APLY; SET DB.TARGET_LTC_TBNYBASE;
WHERE C_DATE<=APLY_YMD AND APLY_YMD2<= INTNX('YEAR',C_DATE,2,'S')  AND GJU_RCGT_GRADE_CD IN ('1','2','3','4','5','6'); RUN;

/*2년 내 복수 건 신청자들은 받은 등급 중 최고 등급(가장 작은 숫자)으로, 6.17결정*/
PROC SQL; 
CREATE TABLE LTC_GRADE AS SELECT INDI_DSCM_NO, 1 AS APLY_YN, COUNT(DISTINCT INDI_SEQ) AS APLY_N, MIN(INPUT(GJU_RCGT_GRADE_CD,1.)) AS MIN_GRD 
FROM LTC_APLY 
GROUP BY INDI_DSCM_NO; QUIT; 

DATA LTC_GRADEGRP; SET LTC_GRADE; IF MIN_GRD>=4 THEN MIN_GRD_GRP=3; ELSE MIN_GRD_GRP=MIN_GRD; RUN;

/*3. 요양병원 환자분류군*/
DATA ADJ_PATIENT; SET DB.TARGET_ADJ_2YR;
IF LTC_ADJ IN ('01. 의료최고도 (입원)','02. 의료최고도 (외박)') THEN PATIENT_GRP_NUM=1;
IF LTC_ADJ IN ('03. 의료고도 (입원)','04. 의료고도 (외박)') THEN PATIENT_GRP_NUM=2;
IF LTC_ADJ IN ('05. 의료중도','06. 의료중도 (입원)','07. 의료중도 (외박)') THEN PATIENT_GRP_NUM=3;
IF LTC_ADJ IN ('08. 의료경도 (입원)','09. 의료경도 (외박)') THEN PATIENT_GRP_NUM=4;
IF LTC_ADJ IN ('10. 선택입원 (입원)','11. 선택입원 (외박)') THEN PATIENT_GRP_NUM=5;RUN;

/*2년 내 복수 건 진료자들은 받은 환자 분류군 중 최고 등급(가장 작은 숫자)으로, 6.17결정*/
PROC SQL; CREATE TABLE ADJ_PATIENT_GRP AS 
SELECT INDI_DSCM_NO, COUNT(DISTINCT CMN_KEY) AS ADJ_N, MIN(PATIENT_GRP_NUM) AS MIN_GRP_NUM
FROM ADJ_PATIENT 
GROUP BY INDI_DSCM_NO; QUIT; 

DATA ADJ_PATIENT_MINGRP; SET ADJ_PATIENT_GRP;
IF MIN_GRP_NUM=1 THEN MIN_GRP='01. 의료최고도';
IF MIN_GRP_NUM=2 THEN MIN_GRP='02. 의료고도';
IF MIN_GRP_NUM=3 THEN MIN_GRP='03. 의료중도';
IF MIN_GRP_NUM=4 THEN MIN_GRP='04. 의료경도';
IF MIN_GRP_NUM=5 THEN MIN_GRP='05. 선택입원';RUN;

DATA DB.TARGET_APLYGRDGRP
(KEEP=INDI_DSCM_NO PRE_C C_DATE EDA_YN EDA_GRD APLY_YN MIN_GRD MIN_GRD_GRP APLY_BEFC_YN MIN_BEFC_GRD_GRP MIN_GRP) ; 
MERGE DB.TARGET_IDBFCDTH (IN=A) LTC_EDA_YN LTC_GRADEGRP LTC_GRADE_BEFC ADJ_PATIENT_MINGRP;
BY INDI_DSCM_NO; IF A=1; RUN;


/*-------------------------------------------*/
/*-------------------------------------------*/
/*-------------------------------------------*/
/*-------------------------------------------*/

libname raw "/userdata08/room586/data_source/user_data"; 
libname db "/userdata08/room586/data_out/data_store";
libname db_out "/userdata08/room586/data_out/data_store/db_out";

DATA DB.TG_FULLDAT; 
MERGE   DB.TARGET_IDBFCDTH (IN=A)   /*CODE: C16.SAS*/
			 DB.TARGET_LTC_USE /*CODE: LTCUSE.SAS*/
			 DB.TG_CCI /*CODE: CCI.SAS*/
			 DB.TARGET_APLYGRDGRP /*APLYGRDGRP.SAS*/
			 DB.TARGET_TRT /*CODE: TRT.SAS*/ ;
BY INDI_DSCM_NO; IF A=1 ; RUN;        


/*DEMO TABLE용 데이터셋 대상자 : 2010년 이후 진단자, 65세 이상, 타암 기진단자 제외*/
DATA DB.TG_DEMO; SET DB.TG_FULLDAT;
WHERE C_AGE>=65 AND C_YEAR>=2010 AND PRE_C=0;RUN;

/*수도권 설정*/
DATA DB.TG_DEMO; SET DB.TG_DEMO;
FORMAT RESID_GRP $20.;
IF SIDIO_CD IN ('11','26','27','28','29','30','31') THEN RESID_GRP='01.METRO';
ELSE RESID_GRP='02.NON-METRO'; RUN;


/*신청, 인정기간 내 암진단, 인정등급 관련 빈도*/
PROC SQL; CREATE TABLE FQ_APLYGRD AS SELECT EDA_YN, APLY_YN, APLY_BEFC_YN, COUNT(DISTINCT INDI_DSCM_NO) AS CNT
FROM DB.TG_DEMO  WHERE LTC_MAIN_USE IN ('02. 시설','03. 재가')  GROUP BY EDA_YN, APLY_YN, APLY_BEFC_YN ; QUIT;

PROC SQL; CREATE TABLE FQ_APLYGRD_FULL AS SELECT EDA_YN, APLY_YN, APLY_BEFC_YN, LTC_MAIN_USE, MIN_BEFC_GRD_GRP, MIN_GRD_GRP, COUNT(DISTINCT INDI_DSCM_NO) AS CNT
FROM DB.TG_DEMO GROUP BY EDA_YN, APLY_YN, APLY_BEFC_YN, LTC_MAIN_USE, MIN_BEFC_GRD_GRP, MIN_GRD_GRP ; QUIT;

/*MAIN USE 서비스가 시설 또는 재가 이지만, 암 진단 이후 2년내 장기요양보험 신청 기록이 없는 사람 2825명 (시설 재가 총 주이용자 11,225명의 25.17%)*/
DATA NOAPLYGRP; SET DB.TG_DEMO; WHERE APLY_YN=. AND LTC_MAIN_USE IN ('02. 시설','03. 재가');RUN;
DATA APLYGRP; SET DB.TG_DEMO; WHERE APLY_YN=1 AND LTC_MAIN_USE IN ('02. 시설','03. 재가');RUN;

%MACRO DEMOFREQ(DATASET, COND, CONDNAME);
PROC SQL; CREATE TABLE F1 AS SELECT "01. SEX_TYPE" AS VAR, SEX_TYPE AS CLASS, COUNT(DISTINCT INDI_DSCM_NO) AS CNT&CONDNAME. FROM &DATASET. &COND. GROUP BY SEX_TYPE; QUIT;
PROC SQL; CREATE TABLE F2 AS SELECT "02. LTC_MAIN_USE" AS VAR, LTC_MAIN_USE AS CLASS, COUNT(DISTINCT INDI_DSCM_NO) AS CNT&CONDNAME. FROM &DATASET. &COND. GROUP BY LTC_MAIN_USE; QUIT;
PROC SQL; CREATE TABLE F3 AS SELECT "03. C_AGE_GRP2" AS VAR, C_AGE_GRP2 AS CLASS, COUNT(DISTINCT INDI_DSCM_NO) AS CNT&CONDNAME. FROM &DATASET.  &COND. GROUP BY C_AGE_GRP2; QUIT;
PROC SQL; CREATE TABLE F4 AS SELECT "04. INC_QUINTILE" AS VAR, PUT(INC_QUINTILE,1.) AS CLASS, COUNT(DISTINCT INDI_DSCM_NO) AS CNT&CONDNAME. FROM &DATASET.  &COND. GROUP BY INC_QUINTILE; QUIT;
PROC SQL; CREATE TABLE F5 AS SELECT "05. RESID_GRP" AS VAR, RESID_GRP AS CLASS, COUNT(DISTINCT INDI_DSCM_NO) AS CNT&CONDNAME. FROM &DATASET. &COND. GROUP BY RESID_GRP; QUIT;
PROC SQL; CREATE TABLE F6 AS SELECT "06. SIDIO_CD" AS VAR, SIDIO_CD AS CLASS, COUNT(DISTINCT INDI_DSCM_NO) AS CNT&CONDNAME. FROM &DATASET. &COND. GROUP BY SIDIO_CD; QUIT;
PROC SQL; CREATE TABLE F7 AS SELECT "07. CCI_GRP" AS VAR, CCI_GRP AS CLASS, COUNT(DISTINCT INDI_DSCM_NO) AS CNT&CONDNAME. FROM &DATASET. &COND. GROUP BY CCI_GRP; QUIT;
PROC SQL; CREATE TABLE F8 AS SELECT "08. C_YEAR_GRP1" AS VAR, C_YEAR_GRP1 AS CLASS, COUNT(DISTINCT INDI_DSCM_NO) AS CNT&CONDNAME. FROM &DATASET. &COND. GROUP BY C_YEAR_GRP1; QUIT;
PROC SQL; CREATE TABLE F9 AS SELECT "09. SURVIVAL" AS VAR, PUT(SURVIVAL,1.) AS CLASS, COUNT(DISTINCT INDI_DSCM_NO) AS CNT&CONDNAME. FROM &DATASET.  &COND. GROUP BY SURVIVAL; QUIT;
PROC SQL; CREATE TABLE F10 AS SELECT "10. 2YR SURVIVAL" AS VAR, PUT(SURVIVAL_2YR,1.) AS CLASS, COUNT(DISTINCT INDI_DSCM_NO) AS CNT&CONDNAME. FROM &DATASET.  &COND. GROUP BY SURVIVAL_2YR; QUIT;
PROC SQL; CREATE TABLE F11 AS SELECT "11. MIN_GRD_GRP" AS VAR, PUT(MIN_GRD_GRP,1.) AS CLASS, COUNT(DISTINCT INDI_DSCM_NO) AS CNT&CONDNAME. FROM &DATASET.  &COND. GROUP BY MIN_GRD_GRP; QUIT;
PROC SQL; CREATE TABLE F12 AS SELECT "11-1. MIN_BEFC_GRD_GRP" AS VAR, PUT(MIN_BEFC_GRD_GRP,1.) AS CLASS, COUNT(DISTINCT INDI_DSCM_NO) AS CNT&CONDNAME. FROM &DATASET.  &COND. GROUP BY MIN_BEFC_GRD_GRP; QUIT;
PROC SQL; CREATE TABLE F13 AS SELECT "12. MIN_GRP" AS VAR, MIN_GRP AS CLASS, COUNT(DISTINCT INDI_DSCM_NO) AS CNT&CONDNAME. FROM &DATASET.  &COND. GROUP BY MIN_GRP; QUIT;
PROC SQL; CREATE TABLE F14 AS SELECT "13. TRT_YN" AS VAR, PUT(TRT_YN,1.) AS CLASS, COUNT(DISTINCT INDI_DSCM_NO) AS CNT&CONDNAME. FROM &DATASET.  &COND. GROUP BY TRT_YN; QUIT;
PROC SQL; CREATE TABLE F15 AS SELECT "14. OP_YN" AS VAR, PUT(OP_YN,1.) AS CLASS, COUNT(DISTINCT INDI_DSCM_NO) AS CNT&CONDNAME. FROM &DATASET.  &COND. GROUP BY OP_YN; QUIT;
PROC SQL; CREATE TABLE F16 AS SELECT "15. CT_YN" AS VAR, PUT(CT_YN,1.) AS CLASS, COUNT(DISTINCT INDI_DSCM_NO) AS CNT&CONDNAME. FROM &DATASET.  &COND. GROUP BY CT_YN; QUIT;
PROC SQL; CREATE TABLE F17 AS SELECT "16. RT_YN" AS VAR, PUT(RT_YN,1.) AS CLASS, COUNT(DISTINCT INDI_DSCM_NO) AS CNT&CONDNAME. FROM &DATASET.  &COND. GROUP BY RT_YN; QUIT;

DATA F1; SET F1; FORMAT VAR $20.; FORMAT CLASS $20.;RUN;
DATA FQ&CONDNAME.; LENGTH VAR $20 CLASS $20; SET F1-F17 ;  RUN;
%MEND;

%DEMOFREQ(DATASET=NOAPLYGRP,  CONDNAME=_NOAPLY);
%DEMOFREQ(DATASET=APLYGRP,  CONDNAME=_APLY);

PROC SORT DATA= FQ_NOAPLY; BY  VAR CLASS;RUN;
PROC SORT DATA= FQ_APLY;     BY  VAR CLASS; RUN;

DATA DEMO_APLY_FQ; MERGE FQ_NOAPLY(IN=A) FQ_APLY ; BY VAR CLASS; RUN;


/*Table1,2 Demo*/
/*PRE_C=0, 65세 이상, 2010-2019년 진단*/
%MACRO DEMOFREQ(DATASET, COND, CONDNAME);
PROC SQL; CREATE TABLE F1 AS SELECT "01. SEX_TYPE" AS VAR, SEX_TYPE AS CLASS, COUNT(DISTINCT INDI_DSCM_NO) AS CNT&CONDNAME. FROM &DATASET. &COND. GROUP BY SEX_TYPE; QUIT;
PROC SQL; CREATE TABLE F2 AS SELECT "02. LTC_MAIN_USE" AS VAR, LTC_MAIN_USE AS CLASS, COUNT(DISTINCT INDI_DSCM_NO) AS CNT&CONDNAME. FROM &DATASET.  &COND. GROUP BY LTC_MAIN_USE; QUIT;
PROC SQL; CREATE TABLE F3 AS SELECT "03. C_AGE_GRP2" AS VAR, C_AGE_GRP2 AS CLASS, COUNT(DISTINCT INDI_DSCM_NO) AS CNT&CONDNAME. FROM &DATASET.  &COND. GROUP BY C_AGE_GRP2; QUIT;
PROC SQL; CREATE TABLE F4 AS SELECT "04. INC_QUINTILE" AS VAR, PUT(INC_QUINTILE,1.) AS CLASS, COUNT(DISTINCT INDI_DSCM_NO) AS CNT&CONDNAME. FROM &DATASET. &COND. GROUP BY INC_QUINTILE; QUIT;
PROC SQL; CREATE TABLE F5 AS SELECT "05. RESID_GRP" AS VAR, RESID_GRP AS CLASS, COUNT(DISTINCT INDI_DSCM_NO) AS CNT&CONDNAME. FROM &DATASET.  &COND. GROUP BY RESID_GRP; QUIT;
PROC SQL; CREATE TABLE F6 AS SELECT "06. SIDIO_CD" AS VAR, SIDIO_CD AS CLASS, COUNT(DISTINCT INDI_DSCM_NO) AS CNT&CONDNAME. FROM &DATASET. &COND. GROUP BY SIDIO_CD; QUIT;
PROC SQL; CREATE TABLE F7 AS SELECT "07. CCI_GRP" AS VAR, CCI_GRP AS CLASS, COUNT(DISTINCT INDI_DSCM_NO) AS CNT&CONDNAME. FROM &DATASET. &COND. GROUP BY CCI_GRP; QUIT;
PROC SQL; CREATE TABLE F8 AS SELECT "08. C_YEAR_GRP1" AS VAR, C_YEAR_GRP1 AS CLASS, COUNT(DISTINCT INDI_DSCM_NO) AS CNT&CONDNAME. FROM &DATASET.  &COND. GROUP BY C_YEAR_GRP1; QUIT;
PROC SQL; CREATE TABLE F9 AS SELECT "09. SURVIVAL" AS VAR, PUT(SURVIVAL,1.) AS CLASS, COUNT(DISTINCT INDI_DSCM_NO) AS CNT&CONDNAME. FROM &DATASET.  &COND. GROUP BY SURVIVAL; QUIT;
PROC SQL; CREATE TABLE F10 AS SELECT "10. 2YR SURVIVAL" AS VAR, PUT(SURVIVAL_2YR,1.) AS CLASS, COUNT(DISTINCT INDI_DSCM_NO) AS CNT&CONDNAME. FROM &DATASET.  &COND. GROUP BY SURVIVAL_2YR; QUIT;
PROC SQL; CREATE TABLE F11 AS SELECT "11. MIN_GRD_GRP" AS VAR, PUT(MIN_GRD_GRP,1.) AS CLASS, COUNT(DISTINCT INDI_DSCM_NO) AS CNT&CONDNAME. FROM &DATASET.  &COND. GROUP BY MIN_GRD_GRP; QUIT;
DATA DAT_MIN_BEFC_GRD_GRP; SET  &DATASET.; WHERE APLY_YN=.; RUN;
PROC SQL; CREATE TABLE F12 AS SELECT "11.1 MIN_BEFC_GRD_GRP" AS VAR, PUT(MIN_BEFC_GRD_GRP,1.) AS CLASS, COUNT(DISTINCT INDI_DSCM_NO) AS CNT&CONDNAME. FROM DAT_MIN_BEFC_GRD_GRP  &COND. GROUP BY MIN_BEFC_GRD_GRP; QUIT;
PROC SQL; CREATE TABLE F13 AS SELECT "12. MIN_GRP" AS VAR, MIN_GRP AS CLASS, COUNT(DISTINCT INDI_DSCM_NO) AS CNT&CONDNAME. FROM &DATASET.   &COND. GROUP BY MIN_GRP; QUIT;
PROC SQL; CREATE TABLE F14 AS SELECT "13. TRT_YN" AS VAR, PUT(TRT_YN,1.) AS CLASS, COUNT(DISTINCT INDI_DSCM_NO) AS CNT&CONDNAME. FROM &DATASET.  &COND. GROUP BY TRT_YN; QUIT;
PROC SQL; CREATE TABLE F15 AS SELECT "14. OP_YN" AS VAR, PUT(OP_YN,1.) AS CLASS, COUNT(DISTINCT INDI_DSCM_NO) AS CNT&CONDNAME. FROM &DATASET.  &COND. GROUP BY OP_YN; QUIT;
PROC SQL; CREATE TABLE F16 AS SELECT "15. CT_YN" AS VAR, PUT(CT_YN,1.) AS CLASS, COUNT(DISTINCT INDI_DSCM_NO) AS CNT&CONDNAME. FROM &DATASET.  &COND. GROUP BY CT_YN; QUIT;
PROC SQL; CREATE TABLE F17 AS SELECT "16. RT_YN" AS VAR, PUT(RT_YN,1.) AS CLASS, COUNT(DISTINCT INDI_DSCM_NO) AS CNT&CONDNAME. FROM &DATASET.  &COND. GROUP BY RT_YN; QUIT;

DATA F1; SET F1; FORMAT VAR $20.; FORMAT CLASS $20.;RUN;
DATA FQ&CONDNAME.; LENGTH VAR $20 CLASS $20; SET F1-F17 ;  RUN;
%MEND;


%DEMOFREQ(DATASET=DB.TG_DEMO);
%DEMOFREQ(DATASET=DB.TG_DEMO, COND= WHERE LTC_MAIN_USE='01. 요양병원', CONDNAME=_ADJ);
%DEMOFREQ(DATASET=DB.TG_DEMO, COND= WHERE LTC_MAIN_USE='02. 시설', CONDNAME=_INS);
%DEMOFREQ(DATASET=DB.TG_DEMO, COND= WHERE LTC_MAIN_USE='03. 재가', CONDNAME=_HOME);
%DEMOFREQ(DATASET=DB.TG_DEMO, COND= WHERE LTC_MAIN_USE='04. 이용안함', CONDNAME=_NONE);

%DEMOFREQ(DATASET=DB.TG_DEMO, COND= WHERE TRT_YN=1, CONDNAME=_TRT);
%DEMOFREQ(DATASET=DB.TG_DEMO, COND= WHERE TRT_YN=1 AND LTC_MAIN_USE='01. 요양병원', CONDNAME=_TRTADJ);
%DEMOFREQ(DATASET=DB.TG_DEMO, COND= WHERE TRT_YN=1 AND LTC_MAIN_USE='02. 시설', CONDNAME=_TRTINS);
%DEMOFREQ(DATASET=DB.TG_DEMO, COND= WHERE TRT_YN=1 AND LTC_MAIN_USE='03. 재가', CONDNAME=_TRTHOME);
%DEMOFREQ(DATASET=DB.TG_DEMO, COND= WHERE TRT_YN=1 AND LTC_MAIN_USE='04. 이용안함', CONDNAME=_TRTNONE);

%DEMOFREQ(DATASET=DB.TG_DEMO, COND= WHERE TRT_YN=0, CONDNAME=_NOTRT);
%DEMOFREQ(DATASET=DB.TG_DEMO, COND= WHERE TRT_YN=0 AND LTC_MAIN_USE='01. 요양병원', CONDNAME=_NOTRTADJ);
%DEMOFREQ(DATASET=DB.TG_DEMO, COND= WHERE TRT_YN=0 AND LTC_MAIN_USE='02. 시설', CONDNAME=_NOTRTINS);
%DEMOFREQ(DATASET=DB.TG_DEMO, COND= WHERE TRT_YN=0 AND LTC_MAIN_USE='03. 재가', CONDNAME=_NOTRTHOME);
%DEMOFREQ(DATASET=DB.TG_DEMO, COND= WHERE TRT_YN=0 AND LTC_MAIN_USE='04. 이용안함', CONDNAME=_NOTRTNONE);

%DEMOFREQ(DATASET=DB.TG_DEMO, COND= WHERE C_AGE_GRP2='01. 65-74', CONDNAME=_6574);
%DEMOFREQ(DATASET=DB.TG_DEMO, COND= WHERE C_AGE_GRP2='02. 75-84', CONDNAME=_7584);
%DEMOFREQ(DATASET=DB.TG_DEMO, COND= WHERE C_AGE_GRP2='03. 85+', CONDNAME=_85U);

%DEMOFREQ(DATASET=DB.TG_DEMO, COND= WHERE TRT_YN=1 AND C_AGE_GRP2='01. 65-74', CONDNAME=_TRT6574);
%DEMOFREQ(DATASET=DB.TG_DEMO, COND= WHERE TRT_YN=1 AND C_AGE_GRP2='02. 75-84', CONDNAME=_TRT7584);
%DEMOFREQ(DATASET=DB.TG_DEMO, COND= WHERE TRT_YN=1 AND C_AGE_GRP2='03. 85+', CONDNAME=_TRT85U);

%DEMOFREQ(DATASET=DB.TG_DEMO, COND= WHERE TRT_YN=0 AND C_AGE_GRP2='01. 65-74', CONDNAME=_NOTRT6574);
%DEMOFREQ(DATASET=DB.TG_DEMO, COND= WHERE TRT_YN=0 AND C_AGE_GRP2='02. 75-84', CONDNAME=_NOTRT7584);
%DEMOFREQ(DATASET=DB.TG_DEMO, COND= WHERE TRT_YN=0 AND C_AGE_GRP2='03. 85+', CONDNAME=_NOTRT85U);


DATA DB.DEMO_FQ; MERGE FQ(IN=A) FQ_ADJ FQ_INS FQ_HOME FQ_NONE FQ_TRTADJ FQ_TRTINS FQ_TRTHOME FQ_TRTNONE FQ_NOTRTADJ FQ_NOTRTINS FQ_NOTRTHOME FQ_NOTRTNONE
FQ_6574 FQ_7584 FQ_85U FQ_TRT6574 FQ_TRT7584 FQ_TRT85U FQ_NOTRT6574 FQ_NOTRT7584 FQ_NOTRT85U; BY VAR CLASS; RUN;



%DEMOFREQ(DATASET=DB.TG_DEMO, COND= WHERE LTC_MAIN_USE^='04. 이용안함', CONDNAME=_LTCUSE);
%DEMOFREQ(DATASET=DB.TG_DEMO, COND= WHERE LTC_MAIN_USE='01. 요양병원' AND C_AGE_GRP2='01. 65-74', CONDNAME=_ADJ6574);
%DEMOFREQ(DATASET=DB.TG_DEMO, COND= WHERE LTC_MAIN_USE='01. 요양병원' AND C_AGE_GRP2='02. 75-84', CONDNAME=_ADJ7584);
%DEMOFREQ(DATASET=DB.TG_DEMO, COND= WHERE LTC_MAIN_USE='01. 요양병원' AND C_AGE_GRP2='03. 85+', CONDNAME=_ADJ85U);
%DEMOFREQ(DATASET=DB.TG_DEMO, COND= WHERE LTC_MAIN_USE='02. 시설' AND C_AGE_GRP2='01. 65-74', CONDNAME=_INS6574);
%DEMOFREQ(DATASET=DB.TG_DEMO, COND= WHERE LTC_MAIN_USE='02. 시설' AND C_AGE_GRP2='02. 75-84', CONDNAME=_INS7584);
%DEMOFREQ(DATASET=DB.TG_DEMO, COND= WHERE LTC_MAIN_USE='02. 시설' AND C_AGE_GRP2='03. 85+', CONDNAME=_INS85U);
%DEMOFREQ(DATASET=DB.TG_DEMO, COND= WHERE LTC_MAIN_USE='03. 재가' AND C_AGE_GRP2='01. 65-74', CONDNAME=_HOME6574);
%DEMOFREQ(DATASET=DB.TG_DEMO, COND= WHERE LTC_MAIN_USE='03. 재가' AND C_AGE_GRP2='02. 75-84', CONDNAME=_HOME7584);
%DEMOFREQ(DATASET=DB.TG_DEMO, COND= WHERE LTC_MAIN_USE='03. 재가' AND C_AGE_GRP2='03. 85+', CONDNAME=_HOME85U);
%DEMOFREQ(DATASET=DB.TG_DEMO, COND= WHERE LTC_MAIN_USE='04. 이용안함' AND C_AGE_GRP2='01. 65-74', CONDNAME=_NONE6574);
%DEMOFREQ(DATASET=DB.TG_DEMO, COND= WHERE LTC_MAIN_USE='04. 이용안함' AND C_AGE_GRP2='02. 75-84', CONDNAME=_NONE7584);
%DEMOFREQ(DATASET=DB.TG_DEMO, COND= WHERE LTC_MAIN_USE='04. 이용안함' AND C_AGE_GRP2='03. 85+', CONDNAME=_NONE85U);

DATA DB.DEMO_FQ_SUPP; MERGE FQ_LTCUSE(IN=A) FQ_ADJ6574 FQ_ADJ7584 FQ_ADJ85U FQ_INS6574 FQ_INS7584 FQ_INS85U
FQ_HOME6574 FQ_HOME7584 FQ_HOME85U FQ_NONE6574 FQ_NONE7584 FQ_NONE85U ; BY VAR CLASS; RUN;
	

/*-------------------------------------------------------*/
/*-------------------------------------------------------*/
/*-------------------------------------------------------*/



libname raw "/userdata20/rroom029/data_source/user_data";/*raw data*/
libname db "/userdata20/rroom029/data_out/data_store"; 
libname db_out "/userdata20/rroom029/data_out/data_out";
libname RES "/userdata20/rroom029/data_out/data_out/RES";

/*COX AND KM ESTIMATES*/


/*Table 4. Cox Model*/

/*데이터셋 사이즈 줄이기*/
%MACRO PHREG_UNI(VAR, VARREF);
DATA TG_DEMO_&VAR.(KEEP=&VAR. SURVTIME&YR. DEATH&YR.) ; SET DB.TG_DEMO;  &COND.; RUN;
PROC PHREG DATA=TG_DEMO_&VAR. ; CLASS &VAR. (REF=&VARREF.); MODEL SURVTIME&YR.*DEATH&YR.(0)=&VAR. /RL; RUN;
%MEND;


/*FULL SURVIVAL COX*/
%LET YR=;

/*2 YEAR SURVIVAL COX*/
%LET YR=_2YR;


/*Table 4a. Cox model for all patients (n=192,801)*/
%LET COND=;
%PHREG_UNI(SEX_TYPE,'2');
%PHREG_UNI(C_AGE_GRP2,'01. 65-74');
%PHREG_UNI(INC_QUINTILE,'5');
%PHREG_UNI(SIDO_CD,'11');
%PHREG_UNI(RESID_GRP,'01.METRO');
%PHREG_UNI(CCI_GRP,'01. 0-2');
%PHREG_UNI(C_YEAR_GRP1,'01. 2009-2011');
%PHREG_UNI(LTC_MAIN_USE,'04. 이용안함');
%PHREG_UNI(TRT_YN,'0');
%PHREG_UNI(OP_YN,'0');
%PHREG_UNI(CT_YN,'0');
%PHREG_UNI(RT_YN,'0');
%PHREG_UNI(OP_CTG,'05. None');
%PHREG_UNI(CT_CYT_YN,'0');
%PHREG_UNI(CT_TAR_YN,'0');
%PHREG_UNI(CT_IMU_YN,'0');
%PHREG_UNI(CT_OTH_YN,'0');

/*다변량 : 모형 1*/ /*MULTIVARIATE에는 SIDO_CD만 넣음*/
DATA TG_DEMO_MUL1 (KEEP=SEX_TYPE C_AGE_GRP2 INC_QUINTILE SIDO_CD CCI_GRP C_YEAR_GRP1 LTC_MAIN_USE OP_YN CT_YN RT_YN SURVTIME&YR. DEATH&YR.) ; SET DB.TG_DEMO; &COND.; RUN;
PROC PHREG DATA=TG_DEMO_MUL1;
CLASS SEX_TYPE (REF='2') C_AGE_GRP2 (REF='01. 65-74') INC_QUINTILE(REF='5') SIDO_CD(REF='11') CCI_GRP(REF='01. 0-2') 
C_YEAR_GRP1(REF="01. 2009-2011") LTC_MAIN_USE (REF='04. 이용안함') OP_YN(REF='0') CT_YN(REF='0') RT_YN(REF='0') ;
MODEL SURVTIME&YR.*DEATH&YR.(0)=SEX_TYPE C_AGE_GRP2 INC_QUINTILE SIDO_CD CCI_GRP C_YEAR_GRP1 LTC_MAIN_USE OP_YN CT_YN RT_YN
/RL; RUN;

/*다변량 : 모형 2*/
DATA TG_DEMO_MUL2 (KEEP=SEX_TYPE C_AGE_GRP2 INC_QUINTILE SIDO_CD CCI_GRP C_YEAR_GRP1 LTC_MAIN_USE OP_CTG CT_CYT_YN CT_TAR_YN CT_IMU_YN CT_OTH_YN RT_YN SURVTIME&YR. DEATH&YR.) ; SET DB.TG_DEMO; &COND.; RUN;
PROC PHREG DATA=TG_DEMO_MUL2;
CLASS SEX_TYPE (REF='2') C_AGE_GRP2 (REF='01. 65-74') INC_QUINTILE(REF='5') SIDO_CD(REF='11') CCI_GRP(REF='01. 0-2') 
C_YEAR_GRP1(REF="01. 2009-2011") LTC_MAIN_USE (REF='04. 이용안함') OP_CTG(REF='05. None') CT_CYT_YN(REF='0') CT_TAR_YN(REF='0') CT_IMU_YN(REF='0') CT_OTH_YN(REF='0')  RT_YN(REF='0') ;
MODEL SURVTIME&YR.*DEATH&YR.(0)=SEX_TYPE C_AGE_GRP2 INC_QUINTILE SIDO_CD CCI_GRP C_YEAR_GRP1 LTC_MAIN_USE OP_CTG CT_CYT_YN CT_TAR_YN CT_IMU_YN CT_OTH_YN RT_YN
/RL;  RUN;

/*다변량 : 모형 3*/
DATA TG_DEMO_MUL3 (KEEP=SEX_TYPE C_AGE_GRP2 INC_QUINTILE SIDO_CD CCI_GRP C_YEAR_GRP1 LTC_MAIN_USE OP_CTG CT_YN RT_YN SURVTIME&YR. DEATH&YR.) ; SET DB.TG_DEMO; &COND.; RUN;
PROC PHREG DATA=TG_DEMO_MUL3;
CLASS SEX_TYPE (REF='2') C_AGE_GRP2 (REF='01. 65-74') INC_QUINTILE(REF='5') SIDO_CD(REF='11') CCI_GRP(REF='01. 0-2') 
C_YEAR_GRP1(REF="01. 2009-2011") LTC_MAIN_USE (REF='04. 이용안함')  OP_CTG(REF='05. None')  CT_YN(REF='0') RT_YN(REF='0') ;
MODEL SURVTIME&YR.*DEATH&YR.(0)=SEX_TYPE C_AGE_GRP2 INC_QUINTILE SIDO_CD CCI_GRP C_YEAR_GRP1 LTC_MAIN_USE  OP_CTG CT_YN RT_YN
/RL;  RUN;

/*다변량 : 모형 4*/
DATA TG_DEMO_MUL4 (KEEP=SEX_TYPE C_AGE_GRP2 INC_QUINTILE SIDO_CD CCI_GRP C_YEAR_GRP1 LTC_MAIN_USE TRT_YN SURVTIME&YR. DEATH&YR.) ; SET DB.TG_DEMO; &COND.; RUN;
PROC PHREG DATA=TG_DEMO_MUL4 ;
CLASS SEX_TYPE (REF='2') C_AGE_GRP2 (REF='01. 65-74') INC_QUINTILE(REF='5') SIDO_CD(REF='11') CCI_GRP(REF='01. 0-2') 
C_YEAR_GRP1(REF="01. 2009-2011") LTC_MAIN_USE (REF='04. 이용안함') TRT_YN(REF='0')  ;
MODEL SURVTIME&YR.*DEATH&YR.(0)=SEX_TYPE C_AGE_GRP2 INC_QUINTILE SIDO_CD CCI_GRP C_YEAR_GRP1 LTC_MAIN_USE  TRT_YN
/RL;  RUN;




/*Table 4b. Cox model for treatment group (n=107,426)*/
%LET COND= WHERE TRT_YN=1;
/*단변량*/
%PHREG_UNI(SEX_TYPE,'2');
%PHREG_UNI(C_AGE_GRP2,'01. 65-74');
%PHREG_UNI(INC_QUINTILE,'5');
%PHREG_UNI(SIDO_CD,'11');
%PHREG_UNI(RESID_GRP,'01.METRO');
%PHREG_UNI(CCI_GRP,'01. 0-2');
%PHREG_UNI(C_YEAR_GRP1,'01. 2009-2011');
%PHREG_UNI(LTC_MAIN_USE,'04. 이용안함');
/*%PHREG_UNI(TRT_YN,'0');*/
%PHREG_UNI(OP_YN,'0');
%PHREG_UNI(CT_YN,'0');
%PHREG_UNI(RT_YN,'0');
%PHREG_UNI(OP_CTG,'05. None');
%PHREG_UNI(CT_CYT_YN,'0');
%PHREG_UNI(CT_TAR_YN,'0');
%PHREG_UNI(CT_IMU_YN,'0');
%PHREG_UNI(CT_OTH_YN,'0');


/*다변량*/ 
/*다변량 : 모형 1*/ /*MULTIVARIATE에는 SIDO_CD만 넣음*/
DATA TG_DEMO_MUL1 (KEEP=SEX_TYPE C_AGE_GRP2 INC_QUINTILE SIDO_CD CCI_GRP C_YEAR_GRP1 LTC_MAIN_USE OP_YN CT_YN RT_YN SURVTIME&YR. DEATH&YR.) ; SET DB.TG_DEMO; &COND.; RUN;
PROC PHREG DATA=TG_DEMO_MUL1;
CLASS SEX_TYPE (REF='2') C_AGE_GRP2 (REF='01. 65-74') INC_QUINTILE(REF='5') SIDO_CD(REF='11') CCI_GRP(REF='01. 0-2') 
C_YEAR_GRP1(REF="01. 2009-2011") LTC_MAIN_USE (REF='04. 이용안함') OP_YN(REF='0') CT_YN(REF='0') RT_YN(REF='0') ;
MODEL SURVTIME&YR.*DEATH&YR.(0)=SEX_TYPE C_AGE_GRP2 INC_QUINTILE SIDO_CD CCI_GRP C_YEAR_GRP1 LTC_MAIN_USE OP_YN CT_YN RT_YN
/RL; RUN;

/*다변량 : 모형 2*/
DATA TG_DEMO_MUL2 (KEEP=SEX_TYPE C_AGE_GRP2 INC_QUINTILE SIDO_CD CCI_GRP C_YEAR_GRP1 LTC_MAIN_USE OP_CTG CT_CYT_YN CT_TAR_YN CT_IMU_YN CT_OTH_YN RT_YN SURVTIME&YR. DEATH&YR.) ; SET DB.TG_DEMO; &COND.; RUN;
PROC PHREG DATA=TG_DEMO_MUL2;
CLASS SEX_TYPE (REF='2') C_AGE_GRP2 (REF='01. 65-74') INC_QUINTILE(REF='5') SIDO_CD(REF='11') CCI_GRP(REF='01. 0-2') 
C_YEAR_GRP1(REF="01. 2009-2011") LTC_MAIN_USE (REF='04. 이용안함') OP_CTG(REF='05. None') CT_CYT_YN(REF='0') CT_TAR_YN(REF='0') CT_IMU_YN(REF='0') CT_OTH_YN(REF='0')  RT_YN(REF='0') ;
MODEL SURVTIME&YR.*DEATH&YR.(0)=SEX_TYPE C_AGE_GRP2 INC_QUINTILE SIDO_CD CCI_GRP C_YEAR_GRP1 LTC_MAIN_USE OP_CTG CT_CYT_YN CT_TAR_YN CT_IMU_YN CT_OTH_YN RT_YN
/RL; RUN;

/*다변량 : 모형 3*/
DATA TG_DEMO_MUL3 (KEEP=SEX_TYPE C_AGE_GRP2 INC_QUINTILE SIDO_CD CCI_GRP C_YEAR_GRP1 LTC_MAIN_USE OP_CTG CT_YN RT_YN SURVTIME&YR. DEATH&YR.) ; SET DB.TG_DEMO; &COND.; RUN;
PROC PHREG DATA=TG_DEMO_MUL3;
CLASS SEX_TYPE (REF='2') C_AGE_GRP2 (REF='01. 65-74') INC_QUINTILE(REF='5') SIDO_CD(REF='11') CCI_GRP(REF='01. 0-2') 
C_YEAR_GRP1(REF="01. 2009-2011") LTC_MAIN_USE (REF='04. 이용안함')  OP_CTG(REF='05. None')  CT_YN(REF='0') RT_YN(REF='0') ;
MODEL SURVTIME&YR.*DEATH&YR.(0)=SEX_TYPE C_AGE_GRP2 INC_QUINTILE SIDO_CD CCI_GRP C_YEAR_GRP1 LTC_MAIN_USE  OP_CTG CT_YN RT_YN
/RL;  RUN;




/*Table 4c. Cox model for no treatment group (n=85,375)*/
%LET COND= WHERE TRT_YN=0;
/*단변량*/
%PHREG_UNI(SEX_TYPE,'2');
%PHREG_UNI(C_AGE_GRP2,'01. 65-74');
%PHREG_UNI(INC_QUINTILE,'5');
%PHREG_UNI(SIDO_CD,'11');
%PHREG_UNI(RESID_GRP,'01.METRO');
%PHREG_UNI(CCI_GRP,'01. 0-2');
%PHREG_UNI(C_YEAR_GRP1,'01. 2009-2011');
%PHREG_UNI(LTC_MAIN_USE,'04. 이용안함');


/*다변량*/ 
DATA TG_DEMO_MUL (KEEP=SEX_TYPE C_AGE_GRP2 INC_QUINTILE SIDO_CD CCI_GRP C_YEAR_GRP1 LTC_MAIN_USE SURVTIME&YR. DEATH&YR) ; SET DB.TG_DEMO; &COND.; RUN;
PROC PHREG DATA=TG_DEMO_MUL;
CLASS SEX_TYPE (REF='2') C_AGE_GRP2 (REF='01. 65-74') INC_QUINTILE(REF='5') SIDO_CD(REF='11') CCI_GRP(REF='01. 0-2') 
C_YEAR_GRP1(REF="01. 2009-2011") LTC_MAIN_USE (REF='04. 이용안함') ;
MODEL SURVTIME&YR.*DEATH&YR.(0)=SEX_TYPE C_AGE_GRP2 INC_QUINTILE SIDO_CD CCI_GRP C_YEAR_GRP1 LTC_MAIN_USE 
/RL; RUN;




/*Table 4d. Cox model for surgery group (n=)*/
%LET COND= WHERE OP_YN=1;
/*단변량*/
%PHREG_UNI(SEX_TYPE,'2');
%PHREG_UNI(C_AGE_GRP2,'01. 65-74');
%PHREG_UNI(INC_QUINTILE,'5');
%PHREG_UNI(SIDO_CD,'11');
%PHREG_UNI(RESID_GRP,'01.METRO');
%PHREG_UNI(CCI_GRP,'01. 0-2');
%PHREG_UNI(C_YEAR_GRP1,'01. 2009-2011');
%PHREG_UNI(LTC_MAIN_USE,'04. 이용안함');
/*%PHREG_UNI(TRT_YN,'0');*/
/*%PHREG_UNI(OP_YN,'0');*/
%PHREG_UNI(CT_YN,'0');
%PHREG_UNI(RT_YN,'0');
%PHREG_UNI(OP_CTG,'04. Wedge');
%PHREG_UNI(CT_CYT_YN,'0');
%PHREG_UNI(CT_TAR_YN,'0');
%PHREG_UNI(CT_IMU_YN,'0');
%PHREG_UNI(CT_OTH_YN,'0');


/*다변량 : 모형 2*/
DATA TG_DEMO_MUL2 (KEEP=SEX_TYPE C_AGE_GRP2 INC_QUINTILE SIDO_CD CCI_GRP C_YEAR_GRP1 LTC_MAIN_USE OP_CTG CT_CYT_YN CT_TAR_YN CT_IMU_YN CT_OTH_YN RT_YN SURVTIME&YR. DEATH&YR.) ; SET DB.TG_DEMO; &COND.; RUN;
PROC PHREG DATA=TG_DEMO_MUL2;
CLASS SEX_TYPE (REF='2') C_AGE_GRP2 (REF='01. 65-74') INC_QUINTILE(REF='5') SIDO_CD(REF='11') CCI_GRP(REF='01. 0-2') 
C_YEAR_GRP1(REF="01. 2009-2011") LTC_MAIN_USE (REF='04. 이용안함') OP_CTG(REF='04. Wedge') CT_CYT_YN(REF='0') CT_TAR_YN(REF='0') CT_IMU_YN(REF='0') CT_OTH_YN(REF='0')  RT_YN(REF='0') ;
MODEL SURVTIME&YR.*DEATH&YR.(0)=SEX_TYPE C_AGE_GRP2 INC_QUINTILE SIDO_CD CCI_GRP C_YEAR_GRP1 LTC_MAIN_USE OP_CTG CT_CYT_YN CT_TAR_YN CT_IMU_YN CT_OTH_YN RT_YN
/RL; RUN;

/*다변량 : 모형 3*/
DATA TG_DEMO_MUL3 (KEEP=SEX_TYPE C_AGE_GRP2 INC_QUINTILE SIDO_CD CCI_GRP C_YEAR_GRP1 LTC_MAIN_USE OP_CTG CT_YN RT_YN SURVTIME&YR. DEATH&YR.) ; SET DB.TG_DEMO; &COND.; RUN;
PROC PHREG DATA=TG_DEMO_MUL3;
CLASS SEX_TYPE (REF='2') C_AGE_GRP2 (REF='01. 65-74') INC_QUINTILE(REF='5') SIDO_CD(REF='11') CCI_GRP(REF='01. 0-2') 
C_YEAR_GRP1(REF="01. 2009-2011") LTC_MAIN_USE (REF='04. 이용안함')  OP_CTG(REF='04. Wedge')  CT_YN(REF='0') RT_YN(REF='0') ;
MODEL SURVTIME&YR.*DEATH&YR.(0)=SEX_TYPE C_AGE_GRP2 INC_QUINTILE SIDO_CD CCI_GRP C_YEAR_GRP1 LTC_MAIN_USE  OP_CTG CT_YN RT_YN
/RL;  RUN;




/*Table 3. KM survival estimates*/
%MACRO KMEST(COND, CONDNAME);
PROC LIFETEST DATA=DB.TG_DEMO TIMELIST=365 730 1095 1460 1825 NOTABLE REDUCEOUT PLOTS=SURVIVAL OUTSURV=TMP;
TIME SURVTIME*DEATH(0); &COND. ; RUN;

DATA ESTCI_1YR (DROP=TIMELIST SURVTIME _CENSOR_ ); SET TMP; 
LTC_MAIN_USE='00. 전체 환자';  RENAME SURVIVAL=SURV_1YR  SDF_LCL=LCI_1YR  SDF_UCL=UCI_1YR  ; WHERE TIMELIST=365; RUN;
DATA ESTCI_3YR(DROP=TIMELIST SURVTIME _CENSOR_ ); SET TMP; 
LTC_MAIN_USE='00. 전체 환자';  RENAME SURVIVAL=SURV_3YR SDF_LCL=LCI_3YR SDF_UCL=UCI_3YR ; WHERE TIMELIST=1095; RUN;
DATA ESTCI_5YR(DROP=TIMELIST SURVTIME _CENSOR_ ); SET TMP; 
LTC_MAIN_USE='00. 전체 환자';  RENAME SURVIVAL=SURV_5YR SDF_LCL=LCI_5YR SDF_UCL=UCI_5YR ; WHERE TIMELIST=1825; RUN;

DATA KM_ALL;  RETAIN  LTC_MAIN_USE SURV_1YR LCI_1YR UCI_1YR SURV_3YR LCI_3YR UCI_3YR SURV_5YR LCI_5YR UCI_5YR; MERGE ESTCI_1YR ESTCI_3YR ESTCI_5YR; BY LTC_MAIN_USE;  RUN;

PROC LIFETEST DATA=DB.TG_DEMO TIMELIST=365 730 1095 1460 1825 NOTABLE REDUCEOUT PLOTS=SURVIVAL OUTSURV=TMP;
TIME SURVTIME*DEATH(0); STRATA LTC_MAIN_USE; ODS OUTPUT HOMTESTS=LRT_&CONDNAME. ; &COND. ; RUN;

DATA ESTCI_1YR (DROP=TIMELIST SURVTIME _CENSOR_ STRATUM); SET TMP; 
RENAME SURVIVAL=SURV_1YR  SDF_LCL=LCI_1YR  SDF_UCL=UCI_1YR  ; WHERE TIMELIST=365; RUN;
DATA ESTCI_3YR(DROP=TIMELIST SURVTIME _CENSOR_ STRATUM); SET TMP; 
RENAME SURVIVAL=SURV_3YR SDF_LCL=LCI_3YR SDF_UCL=UCI_3YR ; WHERE TIMELIST=1095; RUN;
DATA ESTCI_5YR(DROP=TIMELIST SURVTIME _CENSOR_ STRATUM); SET TMP; 
RENAME SURVIVAL=SURV_5YR SDF_LCL=LCI_5YR SDF_UCL=UCI_5YR ; WHERE TIMELIST=1825; RUN;

DATA KM_LTC; MERGE ESTCI_1YR ESTCI_3YR ESTCI_5YR; BY LTC_MAIN_USE; RUN;

DATA KM_&CONDNAME. ; SET  KM_ALL KM_LTC; RUN;
%MEND;


/*ALL PATIENTS*/
%KMEST(COND= , CONDNAME=65U);
%KMEST(COND= WHERE C_AGE_GRP2='01. 65-74', CONDNAME=6574);
%KMEST(COND= WHERE C_AGE_GRP2='02. 75-84', CONDNAME=7584);
%KMEST(COND= WHERE C_AGE_GRP2='03. 85+', CONDNAME=85U);

%KMEST(COND= WHERE SEX_TYPE='1', CONDNAME=M65U);
%KMEST(COND= WHERE SEX_TYPE='1' AND C_AGE_GRP2='01. 65-74', CONDNAME=M6574);
%KMEST(COND= WHERE SEX_TYPE='1' AND C_AGE_GRP2='02. 75-84', CONDNAME=M7584);
%KMEST(COND= WHERE SEX_TYPE='1' AND C_AGE_GRP2='03. 85+', CONDNAME=M85U);

%KMEST(COND= WHERE SEX_TYPE='2' , CONDNAME=F65U);
%KMEST(COND= WHERE SEX_TYPE='2' AND C_AGE_GRP2='01. 65-74', CONDNAME=F6574);
%KMEST(COND= WHERE SEX_TYPE='2' AND C_AGE_GRP2='02. 75-84', CONDNAME=F7584);
%KMEST(COND= WHERE SEX_TYPE='2' AND C_AGE_GRP2='03. 85+', CONDNAME=F85U);

DATA RES.KMEST_TOT; SET KM_65U KM_6574 KM_7584 KM_85U KM_M65U KM_M6574 KM_M7584 KM_M85U KM_F65U KM_F6574 KM_F7584 KM_F85U; RUN;
DATA RES.LRT_TOT; SET LRT_65U LRT_6574 LRT_7584 LRT_85U LRT_M65U LRT_M6574 LRT_M7584 LRT_M85U LRT_F65U LRT_F6574 LRT_F7584 LRT_F85U; RUN;


/*TREATMENT GROUP*/
%KMEST(COND= WHERE TRT_YN=1, CONDNAME=TRT_65U);
%KMEST(COND= WHERE TRT_YN=1 AND C_AGE_GRP2='01. 65-74', CONDNAME=TRT_6574);
%KMEST(COND= WHERE TRT_YN=1 AND C_AGE_GRP2='02. 75-84', CONDNAME=TRT_7584);
%KMEST(COND= WHERE TRT_YN=1 AND C_AGE_GRP2='03. 85+', CONDNAME=TRT_85U);

%KMEST(COND= WHERE TRT_YN=1 AND SEX_TYPE='1', CONDNAME=TRT_M65U);
%KMEST(COND= WHERE TRT_YN=1 AND SEX_TYPE='1' AND C_AGE_GRP2='01. 65-74', CONDNAME=TRT_M6574);
%KMEST(COND= WHERE TRT_YN=1 AND SEX_TYPE='1' AND C_AGE_GRP2='02. 75-84', CONDNAME=TRT_M7584);
%KMEST(COND= WHERE TRT_YN=1 AND SEX_TYPE='1' AND C_AGE_GRP2='03. 85+', CONDNAME=TRT_M85U);

%KMEST(COND= WHERE TRT_YN=1 AND SEX_TYPE='2', CONDNAME=TRT_F65U);
%KMEST(COND= WHERE TRT_YN=1 AND SEX_TYPE='2' AND C_AGE_GRP2='01. 65-74', CONDNAME=TRT_F6574);
%KMEST(COND= WHERE TRT_YN=1 AND SEX_TYPE='2' AND C_AGE_GRP2='02. 75-84', CONDNAME=TRT_F7584);
%KMEST(COND= WHERE TRT_YN=1 AND SEX_TYPE='2' AND C_AGE_GRP2='03. 85+', CONDNAME=TRT_F85U);

DATA RES.KMEST_TRT; SET KM_TRT_65U KM_TRT_6574 KM_TRT_7584 KM_TRT_85U KM_TRT_M65U KM_TRT_M6574 KM_TRT_M7584 KM_TRT_M85U KM_TRT_F65U KM_TRT_F6574 KM_TRT_F7584 KM_TRT_F85U; RUN;
DATA RES.LRT_TRT; SET LRT_TRT_65U LRT_TRT_6574 LRT_TRT_7584 LRT_TRT_85U LRT_TRT_M65U LRT_TRT_M6574 LRT_TRT_M7584 LRT_TRT_M85U LRT_TRT_F65U LRT_TRT_F6574 LRT_TRT_F7584 LRT_TRT_F85U; RUN;


/*SURGERY PATIENTS*/
%KMEST(COND= WHERE OP_YN=1 , CONDNAME=OP_65U);
%KMEST(COND= WHERE OP_YN=1 AND C_AGE_GRP2='01. 65-74', CONDNAME=OP_6574);
%KMEST(COND= WHERE OP_YN=1 AND C_AGE_GRP2='02. 75-84', CONDNAME=OP_7584);
%KMEST(COND= WHERE OP_YN=1 AND C_AGE_GRP2='03. 85+', CONDNAME=OP_85U);

%KMEST(COND= WHERE OP_YN=1 AND SEX_TYPE='1', CONDNAME=OP_M65U);
%KMEST(COND= WHERE OP_YN=1 AND SEX_TYPE='1' AND C_AGE_GRP2='01. 65-74', CONDNAME=OP_M6574);
%KMEST(COND= WHERE OP_YN=1 AND SEX_TYPE='1' AND C_AGE_GRP2='02. 75-84', CONDNAME=OP_M7584);
%KMEST(COND= WHERE OP_YN=1 AND SEX_TYPE='1' AND C_AGE_GRP2='03. 85+', CONDNAME=OP_M85U);

%KMEST(COND= WHERE OP_YN=1 AND SEX_TYPE='2', CONDNAME=OP_F65U);
%KMEST(COND= WHERE OP_YN=1 AND SEX_TYPE='2' AND C_AGE_GRP2='01. 65-74', CONDNAME=OP_F6574);
%KMEST(COND= WHERE OP_YN=1 AND SEX_TYPE='2' AND C_AGE_GRP2='02. 75-84', CONDNAME=OP_F7584);
%KMEST(COND= WHERE OP_YN=1 AND SEX_TYPE='2' AND C_AGE_GRP2='03. 85+', CONDNAME=OP_F85U);

DATA RES.KMEST_OP; SET KM_OP_65U KM_OP_6574 KM_OP_7584 KM_OP_85U KM_OP_M65U KM_OP_M6574 KM_OP_M7584 KM_OP_M85U KM_OP_F65U KM_OP_F6574 KM_OP_F7584 KM_OP_F85U; RUN;
DATA RES.LRT_OP; SET LRT_OP_65U LRT_OP_6574 LRT_OP_7584 LRT_OP_85U LRT_OP_M65U LRT_OP_M6574 LRT_OP_M7584 LRT_OP_M85U LRT_OP_F65U LRT_OP_F6574 LRT_OP_F7584 LRT_OP_F85U; RUN;



/*NO TREATMENT GROUP*/
%KMEST(COND= WHERE TRT_YN=0, CONDNAME=NOTRT_65U);
%KMEST(COND= WHERE TRT_YN=0 AND C_AGE_GRP2='01. 65-74', CONDNAME=NOTRT_6574);
%KMEST(COND= WHERE TRT_YN=0 AND C_AGE_GRP2='02. 75-84', CONDNAME=NOTRT_7584);
%KMEST(COND= WHERE TRT_YN=0 AND C_AGE_GRP2='03. 85+', CONDNAME=NOTRT_85U);

%KMEST(COND= WHERE TRT_YN=0 AND SEX_TYPE='1', CONDNAME=NOTRT_M65U);
%KMEST(COND= WHERE TRT_YN=0 AND SEX_TYPE='1' AND C_AGE_GRP2='01. 65-74', CONDNAME=NOTRT_M6574);
%KMEST(COND= WHERE TRT_YN=0 AND SEX_TYPE='1' AND C_AGE_GRP2='02. 75-84', CONDNAME=NOTRT_M7584);
%KMEST(COND= WHERE TRT_YN=0 AND SEX_TYPE='1' AND C_AGE_GRP2='03. 85+', CONDNAME=NOTRT_M85U);

%KMEST(COND= WHERE TRT_YN=0 AND SEX_TYPE='2', CONDNAME=NOTRT_F65U);
%KMEST(COND= WHERE TRT_YN=0 AND SEX_TYPE='2' AND C_AGE_GRP2='01. 65-74', CONDNAME=NOTRT_F6574);
%KMEST(COND= WHERE TRT_YN=0 AND SEX_TYPE='2' AND C_AGE_GRP2='02. 75-84', CONDNAME=NOTRT_F7584);
%KMEST(COND= WHERE TRT_YN=0 AND SEX_TYPE='2' AND C_AGE_GRP2='03. 85+', CONDNAME=NOTRT_F85U);

DATA RES.KMEST_NOTRT; SET KM_NOTRT_65U KM_NOTRT_6574 KM_NOTRT_7584 KM_NOTRT_85U KM_NOTRT_M65U KM_NOTRT_M6574 KM_NOTRT_M7584 KM_NOTRT_M85U KM_NOTRT_F65U KM_NOTRT_F6574 KM_NOTRT_F7584 KM_NOTRT_F85U; RUN;
DATA RES.LRT_NOTRT; SET LRT_NOTRT_65U LRT_NOTRT_6574 LRT_NOTRT_7584 LRT_NOTRT_85U LRT_NOTRT_M65U LRT_NOTRT_M6574 LRT_NOTRT_M7584 LRT_NOTRT_M85U LRT_NOTRT_F65U LRT_NOTRT_F6574 LRT_NOTRT_F7584 LRT_NOTRT_F85U; RUN;



/*1, 3, 5YEAR LOG-RANK TEST*/
%MACRO LRT(COND, CONDNAME);
PROC LIFETEST DATA=DB.TG_DEMO TIMELIST=365 730 1095 1460 1825 NOTABLE REDUCEOUT PLOTS=SURVIVAL OUTSURV=TMP;
TIME SURVTIME_1YR*DEATH_1YR(0); STRATA LTC_MAIN_USE; ODS OUTPUT HOMTESTS=LRT1; &COND. ; RUN;
PROC LIFETEST DATA=DB.TG_DEMO TIMELIST=365 730 1095 1460 1825 NOTABLE REDUCEOUT PLOTS=SURVIVAL OUTSURV=TMP;
TIME SURVTIME_3YR*DEATH_3YR(0); STRATA LTC_MAIN_USE; ODS OUTPUT HOMTESTS=LRT3; &COND. ; RUN;
PROC LIFETEST DATA=DB.TG_DEMO TIMELIST=365 730 1095 1460 1825 NOTABLE REDUCEOUT PLOTS=SURVIVAL OUTSURV=TMP;
TIME SURVTIME_5YR*DEATH_5YR(0); STRATA LTC_MAIN_USE; ODS OUTPUT HOMTESTS=LRT5; &COND. ; RUN;

DATA LRT_1YR; SET LRT1 ;  RENAME CHISQ=CHISQ_1YR DF=DF_1YR PROBCHISQ=PVAL_1YR ; RUN;
DATA LRT_3YR; SET LRT3 ;  RENAME CHISQ=CHISQ_3YR DF=DF_3YR PROBCHISQ=PVAL_3YR ; RUN;
DATA LRT_5YR; SET LRT5 ;  RENAME CHISQ=CHISQ_5YR DF=DF_5YR PROBCHISQ=PVAL_5YR ; RUN;
PROC SQL; CREATE TABLE LRT135_&CONDNAME. AS SELECT A.*,B.*,C.* FROM LRT_1YR AS A LEFT JOIN LRT_3YR AS B ON A.TEST=B.TEST LEFT JOIN LRT_5YR AS C ON A.TEST=C.TEST; QUIT;
%MEND;


/*ALL PATIENTS*/
%LRT(COND= , CONDNAME=65U);
%LRT(COND= WHERE C_AGE_GRP2='01. 65-74', CONDNAME=6574);
%LRT(COND= WHERE C_AGE_GRP2='02. 75-84', CONDNAME=7584);
%LRT(COND= WHERE C_AGE_GRP2='03. 85+', CONDNAME=85U);

%LRT(COND= WHERE SEX_TYPE='1', CONDNAME=M65U);
%LRT(COND= WHERE SEX_TYPE='1' AND C_AGE_GRP2='01. 65-74', CONDNAME=M6574);
%LRT(COND= WHERE SEX_TYPE='1' AND C_AGE_GRP2='02. 75-84', CONDNAME=M7584);
%LRT(COND= WHERE SEX_TYPE='1' AND C_AGE_GRP2='03. 85+', CONDNAME=M85U);

%LRT(COND= WHERE SEX_TYPE='2' , CONDNAME=F65U);
%LRT(COND= WHERE SEX_TYPE='2' AND C_AGE_GRP2='01. 65-74', CONDNAME=F6574);
%LRT(COND= WHERE SEX_TYPE='2' AND C_AGE_GRP2='02. 75-84', CONDNAME=F7584);
%LRT(COND= WHERE SEX_TYPE='2' AND C_AGE_GRP2='03. 85+', CONDNAME=F85U);

DATA RES.LRT135_TOT; SET LRT135_65U LRT135_6574 LRT135_7584 LRT135_85U LRT135_M65U LRT135_M6574 LRT135_M7584 LRT135_M85U LRT135_F65U LRT135_F6574 LRT135_F7584 LRT135_F85U; RUN;


/*TREATMENT GROUP*/
%LRT(COND= WHERE TRT_YN=1, CONDNAME=TRT_65U);
%LRT(COND= WHERE TRT_YN=1 AND C_AGE_GRP2='01. 65-74', CONDNAME=TRT_6574);
%LRT(COND= WHERE TRT_YN=1 AND C_AGE_GRP2='02. 75-84', CONDNAME=TRT_7584);
%LRT(COND= WHERE TRT_YN=1 AND C_AGE_GRP2='03. 85+', CONDNAME=TRT_85U);

%LRT(COND= WHERE TRT_YN=1 AND SEX_TYPE='1', CONDNAME=TRT_M65U);
%LRT(COND= WHERE TRT_YN=1 AND SEX_TYPE='1' AND C_AGE_GRP2='01. 65-74', CONDNAME=TRT_M6574);
%LRT(COND= WHERE TRT_YN=1 AND SEX_TYPE='1' AND C_AGE_GRP2='02. 75-84', CONDNAME=TRT_M7584);
%LRT(COND= WHERE TRT_YN=1 AND SEX_TYPE='1' AND C_AGE_GRP2='03. 85+', CONDNAME=TRT_M85U);

%LRT(COND= WHERE TRT_YN=1 AND SEX_TYPE='2', CONDNAME=TRT_F65U);
%LRT(COND= WHERE TRT_YN=1 AND SEX_TYPE='2' AND C_AGE_GRP2='01. 65-74', CONDNAME=TRT_F6574);
%LRT(COND= WHERE TRT_YN=1 AND SEX_TYPE='2' AND C_AGE_GRP2='02. 75-84', CONDNAME=TRT_F7584);
%LRT(COND= WHERE TRT_YN=1 AND SEX_TYPE='2' AND C_AGE_GRP2='03. 85+', CONDNAME=TRT_F85U);

DATA RES.LRT135_TRT; SET LRT135_TRT_65U LRT135_TRT_6574 LRT135_TRT_7584 LRT135_TRT_85U LRT135_TRT_M65U LRT135_TRT_M6574 LRT135_TRT_M7584 LRT135_TRT_M85U LRT135_TRT_F65U LRT135_TRT_F6574 LRT135_TRT_F7584 LRT135_TRT_F85U; RUN;


/*SURGERY PATIENTS*/
%LRT(COND= WHERE OP_YN=1 , CONDNAME=OP_65U);
%LRT(COND= WHERE OP_YN=1 AND C_AGE_GRP2='01. 65-74', CONDNAME=OP_6574);
%LRT(COND= WHERE OP_YN=1 AND C_AGE_GRP2='02. 75-84', CONDNAME=OP_7584);
%LRT(COND= WHERE OP_YN=1 AND C_AGE_GRP2='03. 85+', CONDNAME=OP_85U);

%LRT(COND= WHERE OP_YN=1 AND SEX_TYPE='1', CONDNAME=OP_M65U);
%LRT(COND= WHERE OP_YN=1 AND SEX_TYPE='1' AND C_AGE_GRP2='01. 65-74', CONDNAME=OP_M6574);
%LRT(COND= WHERE OP_YN=1 AND SEX_TYPE='1' AND C_AGE_GRP2='02. 75-84', CONDNAME=OP_M7584);
%LRT(COND= WHERE OP_YN=1 AND SEX_TYPE='1' AND C_AGE_GRP2='03. 85+', CONDNAME=OP_M85U);

%LRT(COND= WHERE OP_YN=1 AND SEX_TYPE='2', CONDNAME=OP_F65U);
%LRT(COND= WHERE OP_YN=1 AND SEX_TYPE='2' AND C_AGE_GRP2='01. 65-74', CONDNAME=OP_F6574);
%LRT(COND= WHERE OP_YN=1 AND SEX_TYPE='2' AND C_AGE_GRP2='02. 75-84', CONDNAME=OP_F7584);
%LRT(COND= WHERE OP_YN=1 AND SEX_TYPE='2' AND C_AGE_GRP2='03. 85+', CONDNAME=OP_F85U);

DATA RES.LRT135_OP; SET LRT135_OP_65U LRT135_OP_6574 LRT135_OP_7584 LRT135_OP_85U LRT135_OP_M65U LRT135_OP_M6574 LRT135_OP_M7584 LRT135_OP_M85U LRT135_OP_F65U LRT135_OP_F6574 LRT135_OP_F7584 LRT135_OP_F85U; RUN;



/*NO TREATMENT GROUP*/
%LRT(COND= WHERE TRT_YN=0, CONDNAME=NOTRT_65U);
%LRT(COND= WHERE TRT_YN=0 AND C_AGE_GRP2='01. 65-74', CONDNAME=NOTRT_6574);
%LRT(COND= WHERE TRT_YN=0 AND C_AGE_GRP2='02. 75-84', CONDNAME=NOTRT_7584);
%LRT(COND= WHERE TRT_YN=0 AND C_AGE_GRP2='03. 85+', CONDNAME=NOTRT_85U);

%LRT(COND= WHERE TRT_YN=0 AND SEX_TYPE='1', CONDNAME=NOTRT_M65U);
%LRT(COND= WHERE TRT_YN=0 AND SEX_TYPE='1' AND C_AGE_GRP2='01. 65-74', CONDNAME=NOTRT_M6574);
%LRT(COND= WHERE TRT_YN=0 AND SEX_TYPE='1' AND C_AGE_GRP2='02. 75-84', CONDNAME=NOTRT_M7584);
%LRT(COND= WHERE TRT_YN=0 AND SEX_TYPE='1' AND C_AGE_GRP2='03. 85+', CONDNAME=NOTRT_M85U);

%LRT(COND= WHERE TRT_YN=0 AND SEX_TYPE='2', CONDNAME=NOTRT_F65U);
%LRT(COND= WHERE TRT_YN=0 AND SEX_TYPE='2' AND C_AGE_GRP2='01. 65-74', CONDNAME=NOTRT_F6574);
%LRT(COND= WHERE TRT_YN=0 AND SEX_TYPE='2' AND C_AGE_GRP2='02. 75-84', CONDNAME=NOTRT_F7584);
%LRT(COND= WHERE TRT_YN=0 AND SEX_TYPE='2' AND C_AGE_GRP2='03. 85+', CONDNAME=NOTRT_F85U);

DATA RES.LRT135_NOTRT; SET LRT135_NOTRT_65U LRT135_NOTRT_6574 LRT135_NOTRT_7584 LRT135_NOTRT_85U LRT135_NOTRT_M65U LRT135_NOTRT_M6574 LRT135_NOTRT_M7584 LRT135_NOTRT_M85U LRT135_NOTRT_F65U LRT135_NOTRT_F6574 LRT135_NOTRT_F7584 LRT135_NOTRT_F85U; RUN;



